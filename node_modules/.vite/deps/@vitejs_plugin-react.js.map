{
  "version": 3,
  "sources": ["../../@babel/traverse/lib/path/lib/virtual-types.js", "../../@babel/types/lib/utils/shallowEqual.js", "../../@babel/types/lib/validators/generated/index.js", "../../@babel/types/lib/validators/matchesPattern.js", "../../@babel/types/lib/validators/buildMatchMemberExpression.js", "../../@babel/types/lib/validators/react/isReactComponent.js", "../../@babel/types/lib/validators/react/isCompatTag.js", "../../to-fast-properties/index.js", "../../@babel/types/lib/validators/isType.js", "../../@babel/types/lib/validators/isPlaceholderType.js", "../../@babel/types/lib/validators/is.js", "../../@babel/helper-validator-identifier/lib/identifier.js", "../../@babel/helper-validator-identifier/lib/keyword.js", "../../@babel/helper-validator-identifier/lib/index.js", "../../@babel/types/lib/validators/isValidIdentifier.js", "../../@babel/helper-string-parser/lib/index.js", "../../@babel/types/lib/constants/index.js", "../../@babel/types/lib/definitions/utils.js", "../../@babel/types/lib/definitions/core.js", "../../@babel/types/lib/definitions/flow.js", "../../@babel/types/lib/definitions/jsx.js", "../../@babel/types/lib/definitions/placeholders.js", "../../@babel/types/lib/definitions/misc.js", "../../@babel/types/lib/definitions/experimental.js", "../../@babel/types/lib/definitions/typescript.js", "../../@babel/types/lib/definitions/index.js", "../../@babel/types/lib/validators/validate.js", "../../@babel/types/lib/builders/validateNode.js", "../../@babel/types/lib/builders/generated/index.js", "../../@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js", "../../@babel/types/lib/builders/react/buildChildren.js", "../../@babel/types/lib/validators/isNode.js", "../../@babel/types/lib/asserts/assertNode.js", "../../@babel/types/lib/asserts/generated/index.js", "../../@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js", "../../@babel/types/lib/modifications/flow/removeTypeDuplicates.js", "../../@babel/types/lib/builders/flow/createFlowUnionType.js", "../../@babel/types/lib/modifications/typescript/removeTypeDuplicates.js", "../../@babel/types/lib/builders/typescript/createTSUnionType.js", "../../@babel/types/lib/builders/generated/uppercase.js", "../../@babel/types/lib/clone/cloneNode.js", "../../@babel/types/lib/clone/clone.js", "../../@babel/types/lib/clone/cloneDeep.js", "../../@babel/types/lib/clone/cloneDeepWithoutLoc.js", "../../@babel/types/lib/clone/cloneWithoutLoc.js", "../../@babel/types/lib/comments/addComments.js", "../../@babel/types/lib/comments/addComment.js", "../../@babel/types/lib/utils/inherit.js", "../../@babel/types/lib/comments/inheritInnerComments.js", "../../@babel/types/lib/comments/inheritLeadingComments.js", "../../@babel/types/lib/comments/inheritTrailingComments.js", "../../@babel/types/lib/comments/inheritsComments.js", "../../@babel/types/lib/comments/removeComments.js", "../../@babel/types/lib/constants/generated/index.js", "../../@babel/types/lib/converters/toBlock.js", "../../@babel/types/lib/converters/ensureBlock.js", "../../@babel/types/lib/converters/toIdentifier.js", "../../@babel/types/lib/converters/toBindingIdentifierName.js", "../../@babel/types/lib/converters/toComputedKey.js", "../../@babel/types/lib/converters/toExpression.js", "../../@babel/types/lib/traverse/traverseFast.js", "../../@babel/types/lib/modifications/removeProperties.js", "../../@babel/types/lib/modifications/removePropertiesDeep.js", "../../@babel/types/lib/converters/toKeyAlias.js", "../../@babel/types/lib/retrievers/getBindingIdentifiers.js", "../../@babel/types/lib/converters/gatherSequenceExpressions.js", "../../@babel/types/lib/converters/toSequenceExpression.js", "../../@babel/types/lib/converters/toStatement.js", "../../@babel/types/lib/converters/valueToNode.js", "../../@babel/types/lib/modifications/appendToMemberExpression.js", "../../@babel/types/lib/modifications/inherits.js", "../../@babel/types/lib/modifications/prependToMemberExpression.js", "../../@babel/types/lib/retrievers/getOuterBindingIdentifiers.js", "../../@babel/types/lib/traverse/traverse.js", "../../@babel/types/lib/validators/isBinding.js", "../../@babel/types/lib/validators/isLet.js", "../../@babel/types/lib/validators/isBlockScoped.js", "../../@babel/types/lib/validators/isImmutable.js", "../../@babel/types/lib/validators/isNodesEquivalent.js", "../../@babel/types/lib/validators/isReferenced.js", "../../@babel/types/lib/validators/isScope.js", "../../@babel/types/lib/validators/isSpecifierDefault.js", "../../@babel/types/lib/validators/isValidES3Identifier.js", "../../@babel/types/lib/validators/isVar.js", "../../@babel/types/lib/ast-types/generated/index.js", "../../@babel/types/lib/index.js", "../../@babel/traverse/lib/visitors.js", "../../@babel/traverse/lib/cache.js", "../../ms/index.js", "../../debug/src/common.js", "../../debug/src/browser.js", "../../@babel/traverse/lib/scope/binding.js", "../../@babel/helper-split-export-declaration/lib/index.js", "../../@babel/helper-environment-visitor/lib/index.js", "../../@babel/traverse/lib/scope/lib/renamer.js", "../../globals/index.js", "../../@babel/traverse/lib/scope/index.js", "../../@jridgewell/set-array/src/set-array.ts", "../../@jridgewell/src/sourcemap-codec.ts", "../../@jridgewell/src/resolve-uri.ts", "../../@jridgewell/src/resolve.ts", "../../@jridgewell/src/strip-filename.ts", "../../@jridgewell/src/sourcemap-segment.ts", "../../@jridgewell/src/sort.ts", "../../@jridgewell/src/binary-search.ts", "../../@jridgewell/src/by-source.ts", "../../@jridgewell/src/any-map.ts", "../../@jridgewell/src/trace-mapping.ts", "../../@jridgewell/gen-mapping/src/sourcemap-segment.ts", "../../@jridgewell/gen-mapping/src/gen-mapping.ts", "../../@babel/generator/lib/source-map.js", "../../@babel/generator/lib/buffer.js", "../../@babel/generator/lib/node/whitespace.js", "../../@babel/generator/lib/node/parentheses.js", "../../@babel/generator/lib/node/index.js", "../../@babel/generator/lib/generators/template-literals.js", "../../@babel/generator/lib/generators/expressions.js", "../../@babel/generator/lib/generators/statements.js", "../../@babel/generator/lib/generators/classes.js", "../../@babel/generator/lib/generators/methods.js", "../../@babel/generator/lib/generators/modules.js", "../../jsesc/jsesc.js", "../../@babel/generator/lib/generators/types.js", "../../@babel/generator/lib/generators/flow.js", "../../@babel/generator/lib/generators/base.js", "../../@babel/generator/lib/generators/jsx.js", "../../@babel/generator/lib/generators/typescript.js", "../../@babel/generator/lib/generators/index.js", "../../@babel/generator/lib/printer.js", "../../@babel/generator/lib/index.js", "../../@babel/traverse/lib/path/ancestry.js", "../../@babel/traverse/lib/path/inference/util.js", "../../@babel/traverse/lib/path/inference/inferer-reference.js", "../../@babel/traverse/lib/path/inference/inferers.js", "../../@babel/traverse/lib/path/inference/index.js", "../../js-tokens/index.js", "../../escape-string-regexp/index.js", "../../color-name/index.js", "../../color-convert/conversions.js", "../../color-convert/route.js", "../../color-convert/index.js", "../../ansi-styles/index.js", "../../supports-color/browser.js", "../../chalk/templates.js", "../../chalk/index.js", "../../@babel/highlight/lib/index.js", "../../@babel/code-frame/lib/index.js", "../../@babel/parser/src/util/location.ts", "../../@babel/parser/src/parse-error/credentials.ts", "../../@babel/parser/src/parse-error/module-errors.ts", "../../@babel/parser/src/parse-error/to-node-description.ts", "../../@babel/parser/src/parse-error/standard-errors.ts", "../../@babel/parser/src/parse-error/strict-mode-errors.ts", "../../@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../@babel/parser/src/parse-error.ts", "../../@babel/parser/src/plugins/estree.ts", "../../@babel/parser/src/tokenizer/context.ts", "../../@babel/parser/src/tokenizer/types.ts", "../../@babel/babel-helper-validator-identifier/src/identifier.ts", "../../@babel/babel-helper-validator-identifier/src/keyword.ts", "../../@babel/parser/src/util/identifier.ts", "../../@babel/parser/src/util/scopeflags.ts", "../../@babel/parser/src/parser/base.ts", "../../@babel/parser/src/parser/comments.ts", "../../@babel/parser/src/util/whitespace.ts", "../../@babel/parser/src/tokenizer/state.ts", "../../@babel/babel-helper-string-parser/src/index.ts", "../../@babel/parser/src/tokenizer/index.ts", "../../@babel/parser/src/util/scope.ts", "../../@babel/parser/src/plugins/flow/scope.ts", "../../@babel/parser/src/util/class-scope.ts", "../../@babel/parser/src/util/expression-scope.ts", "../../@babel/parser/src/util/production-parameter.ts", "../../@babel/parser/src/parser/util.ts", "../../@babel/parser/src/parser/node.ts", "../../@babel/parser/src/plugins/flow/index.ts", "../../@babel/parser/src/plugins/jsx/xhtml.ts", "../../@babel/parser/src/plugins/jsx/index.ts", "../../@babel/parser/src/plugins/typescript/scope.ts", "../../@babel/parser/src/plugins/typescript/index.ts", "../../@babel/parser/src/plugins/placeholders.ts", "../../@babel/parser/src/plugins/v8intrinsic.ts", "../../@babel/parser/src/plugin-utils.ts", "../../@babel/parser/src/options.ts", "../../@babel/parser/src/parser/lval.ts", "../../@babel/parser/src/parser/expression.ts", "../../@babel/parser/src/parser/statement.ts", "../../@babel/parser/src/parser/index.ts", "../../@babel/parser/src/index.ts", "../../@babel/helper-hoist-variables/lib/index.js", "../../@babel/traverse/lib/path/replacement.js", "../../@babel/traverse/lib/path/evaluation.js", "../../@babel/template/lib/formatters.js", "../../@babel/template/lib/options.js", "../../@babel/template/lib/parse.js", "../../@babel/template/lib/populate.js", "../../@babel/template/lib/string.js", "../../@babel/template/lib/literal.js", "../../@babel/template/lib/builder.js", "../../@babel/template/lib/index.js", "../../@babel/helper-function-name/lib/index.js", "../../@babel/traverse/lib/path/conversion.js", "../../@babel/traverse/lib/path/introspection.js", "../../@babel/traverse/lib/path/context.js", "../../@babel/traverse/lib/path/lib/removal-hooks.js", "../../@babel/traverse/lib/path/removal.js", "../../@babel/traverse/lib/path/lib/hoister.js", "../../@babel/traverse/lib/path/modification.js", "../../@babel/traverse/lib/path/family.js", "../../@babel/traverse/lib/path/comments.js", "../../@babel/traverse/lib/path/lib/virtual-types-validator.js", "../../@babel/traverse/lib/path/index.js", "../../@babel/traverse/lib/context.js", "../../@babel/traverse/lib/traverse-node.js", "../../@babel/traverse/lib/hub.js", "../../@babel/traverse/lib/index.js", "../../@babel/helpers/lib/helpers-generated.js", "../../@babel/helpers/lib/helpers.js", "../../@babel/helpers/lib/index.js", "../../@babel/helper-module-imports/lib/import-builder.js", "../../@babel/helper-module-imports/lib/is-module.js", "../../@babel/helper-module-imports/lib/import-injector.js", "../../@babel/helper-module-imports/lib/index.js", "../../@babel/helper-module-transforms/lib/rewrite-this.js", "../../@babel/helper-simple-access/lib/index.js", "../../@babel/helper-module-transforms/lib/rewrite-live-references.js", "../../@babel/helper-module-transforms/lib/normalize-and-load-metadata.js", "../../@babel/helper-module-transforms/lib/get-module-name.js", "../../@babel/helper-module-transforms/lib/index.js", "../../semver/semver.js", "../../@babel/core/lib/transformation/file/file.js", "../../@babel/core/lib/tools/build-external-helpers.js", "../../@babel/core/lib/config/files/index-browser.js", "../../@babel/core/lib/config/helpers/environment.js", "../../gensync/index.js", "../../@babel/core/lib/gensync-utils/async.js", "../../@babel/core/lib/config/util.js", "../../@babel/core/lib/config/helpers/deep-array.js", "../../@babel/core/lib/config/plugin.js", "../../@babel/core/lib/config/caching.js", "../../caniuse-lite/data/browsers.js", "../../caniuse-lite/dist/unpacker/browsers.js", "../../caniuse-lite/data/browserVersions.js", "../../caniuse-lite/dist/unpacker/browserVersions.js", "../../caniuse-lite/data/agents.js", "../../caniuse-lite/dist/unpacker/agents.js", "../../electron-to-chromium/versions.js", "../../browserslist/error.js", "../../browserslist/parse.js", "../../browserslist/browser.js", "../../browserslist/index.js", "../../@babel/helper-validator-option/lib/find-suggestion.js", "../../@babel/helper-validator-option/lib/validator.js", "../../@babel/helper-validator-option/lib/index.js", "../../@babel/compat-data/native-modules.js", "../../@babel/helper-compilation-targets/lib/targets.js", "../../@babel/helper-compilation-targets/lib/utils.js", "../../@babel/helper-compilation-targets/lib/options.js", "../../@babel/helper-compilation-targets/lib/pretty.js", "../../@babel/helper-compilation-targets/lib/debug.js", "../../@babel/compat-data/plugins.js", "../../@babel/helper-compilation-targets/lib/filter-items.js", "../../@babel/helper-compilation-targets/lib/index.js", "../../@babel/core/lib/config/resolve-targets-browser.js", "../../@babel/core/lib/config/config-descriptors.js", "../../@babel/core/lib/config/item.js", "../../@babel/core/lib/config/validation/removed.js", "../../@babel/core/lib/config/validation/option-assertions.js", "../../@babel/core/lib/config/validation/options.js", "../../@babel/core/lib/config/pattern-to-regex.js", "../../@babel/core/lib/config/printer.js", "../../@babel/core/lib/config/config-chain.js", "../../@babel/core/lib/config/validation/plugins.js", "../../@babel/core/lib/config/cache-contexts.js", "../../@babel/core/lib/config/helpers/config-api.js", "../../@babel/core/lib/config/partial.js", "../../@babel/core/lib/config/full.js", "../../@babel/core/lib/config/index.js", "../../@babel/core/lib/transformation/plugin-pass.js", "../../@babel/core/lib/transformation/block-hoist-plugin.js", "../../@babel/core/lib/transformation/normalize-opts.js", "../../safe-buffer/index.js", "../../convert-source-map/index.js", "../../@babel/core/lib/parser/util/missing-plugin-helper.js", "../../@babel/core/lib/parser/index.js", "../../@babel/core/lib/transformation/util/clone-deep.js", "../../@babel/core/lib/transformation/normalize-file.js", "../../@ampproject/remapping/node_modules/@jridgewell/src/gen-mapping.ts", "../../@ampproject/src/source-map-tree.ts", "../../@ampproject/src/build-source-map-tree.ts", "../../@ampproject/src/source-map.ts", "../../@ampproject/src/remapping.ts", "../../@babel/core/lib/transformation/file/merge-map.js", "../../@babel/core/lib/transformation/file/generate.js", "../../@babel/core/lib/transformation/index.js", "../../@babel/core/lib/transform.js", "../../@babel/core/lib/transform-file-browser.js", "../../@babel/core/lib/transform-ast.js", "../../@babel/core/lib/parse.js", "../../@babel/core/lib/index.js", "../../@vitejs/plugin-react/dist/index.mjs", "../../sourcemap-codec/src/sourcemap-codec.ts", "../../magic-string/src/BitSet.js", "../../magic-string/src/Chunk.js", "../../magic-string/src/SourceMap.js", "../../magic-string/src/utils/guessIndent.js", "../../magic-string/src/utils/getRelativePath.js", "../../magic-string/src/utils/isObject.js", "../../magic-string/src/utils/getLocator.js", "../../magic-string/src/utils/Mappings.js", "../../magic-string/src/MagicString.js", "../../magic-string/src/Bundle.js", "dep:@vitejs_plugin-react"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Var = exports.User = exports.Statement = exports.SpreadProperty = exports.Scope = exports.RestProperty = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = exports.Referenced = exports.Pure = exports.NumericLiteralTypeAnnotation = exports.Generated = exports.ForAwaitStatement = exports.Flow = exports.Expression = exports.ExistentialTypeParam = exports.BlockScoped = exports.BindingIdentifier = void 0;\nconst ReferencedIdentifier = [\"Identifier\", \"JSXIdentifier\"];\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = [\"MemberExpression\"];\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = [\"Identifier\"];\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = [\"Statement\"];\nexports.Statement = Statement;\nconst Expression = [\"Expression\"];\nexports.Expression = Expression;\nconst Scope = [\"Scopable\", \"Pattern\"];\nexports.Scope = Scope;\nconst Referenced = null;\nexports.Referenced = Referenced;\nconst BlockScoped = null;\nexports.BlockScoped = BlockScoped;\nconst Var = [\"VariableDeclaration\"];\nexports.Var = Var;\nconst User = null;\nexports.User = User;\nconst Generated = null;\nexports.Generated = Generated;\nconst Pure = null;\nexports.Pure = Pure;\nconst Flow = [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"];\nexports.Flow = Flow;\nconst RestProperty = [\"RestElement\"];\nexports.RestProperty = RestProperty;\nconst SpreadProperty = [\"RestElement\"];\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = [\"ExistsTypeAnnotation\"];\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = [\"NumberLiteralTypeAnnotation\"];\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = [\"ForOfStatement\"];\nexports.ForAwaitStatement = ForAwaitStatement;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = shallowEqual;\n\nfunction shallowEqual(actual, expected) {\n  const keys = Object.keys(expected);\n\n  for (const key of keys) {\n    if (actual[key] !== expected[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAccessor = isAccessor;\nexports.isAnyTypeAnnotation = isAnyTypeAnnotation;\nexports.isArgumentPlaceholder = isArgumentPlaceholder;\nexports.isArrayExpression = isArrayExpression;\nexports.isArrayPattern = isArrayPattern;\nexports.isArrayTypeAnnotation = isArrayTypeAnnotation;\nexports.isArrowFunctionExpression = isArrowFunctionExpression;\nexports.isAssignmentExpression = isAssignmentExpression;\nexports.isAssignmentPattern = isAssignmentPattern;\nexports.isAwaitExpression = isAwaitExpression;\nexports.isBigIntLiteral = isBigIntLiteral;\nexports.isBinary = isBinary;\nexports.isBinaryExpression = isBinaryExpression;\nexports.isBindExpression = isBindExpression;\nexports.isBlock = isBlock;\nexports.isBlockParent = isBlockParent;\nexports.isBlockStatement = isBlockStatement;\nexports.isBooleanLiteral = isBooleanLiteral;\nexports.isBooleanLiteralTypeAnnotation = isBooleanLiteralTypeAnnotation;\nexports.isBooleanTypeAnnotation = isBooleanTypeAnnotation;\nexports.isBreakStatement = isBreakStatement;\nexports.isCallExpression = isCallExpression;\nexports.isCatchClause = isCatchClause;\nexports.isClass = isClass;\nexports.isClassAccessorProperty = isClassAccessorProperty;\nexports.isClassBody = isClassBody;\nexports.isClassDeclaration = isClassDeclaration;\nexports.isClassExpression = isClassExpression;\nexports.isClassImplements = isClassImplements;\nexports.isClassMethod = isClassMethod;\nexports.isClassPrivateMethod = isClassPrivateMethod;\nexports.isClassPrivateProperty = isClassPrivateProperty;\nexports.isClassProperty = isClassProperty;\nexports.isCompletionStatement = isCompletionStatement;\nexports.isConditional = isConditional;\nexports.isConditionalExpression = isConditionalExpression;\nexports.isContinueStatement = isContinueStatement;\nexports.isDebuggerStatement = isDebuggerStatement;\nexports.isDecimalLiteral = isDecimalLiteral;\nexports.isDeclaration = isDeclaration;\nexports.isDeclareClass = isDeclareClass;\nexports.isDeclareExportAllDeclaration = isDeclareExportAllDeclaration;\nexports.isDeclareExportDeclaration = isDeclareExportDeclaration;\nexports.isDeclareFunction = isDeclareFunction;\nexports.isDeclareInterface = isDeclareInterface;\nexports.isDeclareModule = isDeclareModule;\nexports.isDeclareModuleExports = isDeclareModuleExports;\nexports.isDeclareOpaqueType = isDeclareOpaqueType;\nexports.isDeclareTypeAlias = isDeclareTypeAlias;\nexports.isDeclareVariable = isDeclareVariable;\nexports.isDeclaredPredicate = isDeclaredPredicate;\nexports.isDecorator = isDecorator;\nexports.isDirective = isDirective;\nexports.isDirectiveLiteral = isDirectiveLiteral;\nexports.isDoExpression = isDoExpression;\nexports.isDoWhileStatement = isDoWhileStatement;\nexports.isEmptyStatement = isEmptyStatement;\nexports.isEmptyTypeAnnotation = isEmptyTypeAnnotation;\nexports.isEnumBody = isEnumBody;\nexports.isEnumBooleanBody = isEnumBooleanBody;\nexports.isEnumBooleanMember = isEnumBooleanMember;\nexports.isEnumDeclaration = isEnumDeclaration;\nexports.isEnumDefaultedMember = isEnumDefaultedMember;\nexports.isEnumMember = isEnumMember;\nexports.isEnumNumberBody = isEnumNumberBody;\nexports.isEnumNumberMember = isEnumNumberMember;\nexports.isEnumStringBody = isEnumStringBody;\nexports.isEnumStringMember = isEnumStringMember;\nexports.isEnumSymbolBody = isEnumSymbolBody;\nexports.isExistsTypeAnnotation = isExistsTypeAnnotation;\nexports.isExportAllDeclaration = isExportAllDeclaration;\nexports.isExportDeclaration = isExportDeclaration;\nexports.isExportDefaultDeclaration = isExportDefaultDeclaration;\nexports.isExportDefaultSpecifier = isExportDefaultSpecifier;\nexports.isExportNamedDeclaration = isExportNamedDeclaration;\nexports.isExportNamespaceSpecifier = isExportNamespaceSpecifier;\nexports.isExportSpecifier = isExportSpecifier;\nexports.isExpression = isExpression;\nexports.isExpressionStatement = isExpressionStatement;\nexports.isExpressionWrapper = isExpressionWrapper;\nexports.isFile = isFile;\nexports.isFlow = isFlow;\nexports.isFlowBaseAnnotation = isFlowBaseAnnotation;\nexports.isFlowDeclaration = isFlowDeclaration;\nexports.isFlowPredicate = isFlowPredicate;\nexports.isFlowType = isFlowType;\nexports.isFor = isFor;\nexports.isForInStatement = isForInStatement;\nexports.isForOfStatement = isForOfStatement;\nexports.isForStatement = isForStatement;\nexports.isForXStatement = isForXStatement;\nexports.isFunction = isFunction;\nexports.isFunctionDeclaration = isFunctionDeclaration;\nexports.isFunctionExpression = isFunctionExpression;\nexports.isFunctionParent = isFunctionParent;\nexports.isFunctionTypeAnnotation = isFunctionTypeAnnotation;\nexports.isFunctionTypeParam = isFunctionTypeParam;\nexports.isGenericTypeAnnotation = isGenericTypeAnnotation;\nexports.isIdentifier = isIdentifier;\nexports.isIfStatement = isIfStatement;\nexports.isImmutable = isImmutable;\nexports.isImport = isImport;\nexports.isImportAttribute = isImportAttribute;\nexports.isImportDeclaration = isImportDeclaration;\nexports.isImportDefaultSpecifier = isImportDefaultSpecifier;\nexports.isImportNamespaceSpecifier = isImportNamespaceSpecifier;\nexports.isImportSpecifier = isImportSpecifier;\nexports.isIndexedAccessType = isIndexedAccessType;\nexports.isInferredPredicate = isInferredPredicate;\nexports.isInterfaceDeclaration = isInterfaceDeclaration;\nexports.isInterfaceExtends = isInterfaceExtends;\nexports.isInterfaceTypeAnnotation = isInterfaceTypeAnnotation;\nexports.isInterpreterDirective = isInterpreterDirective;\nexports.isIntersectionTypeAnnotation = isIntersectionTypeAnnotation;\nexports.isJSX = isJSX;\nexports.isJSXAttribute = isJSXAttribute;\nexports.isJSXClosingElement = isJSXClosingElement;\nexports.isJSXClosingFragment = isJSXClosingFragment;\nexports.isJSXElement = isJSXElement;\nexports.isJSXEmptyExpression = isJSXEmptyExpression;\nexports.isJSXExpressionContainer = isJSXExpressionContainer;\nexports.isJSXFragment = isJSXFragment;\nexports.isJSXIdentifier = isJSXIdentifier;\nexports.isJSXMemberExpression = isJSXMemberExpression;\nexports.isJSXNamespacedName = isJSXNamespacedName;\nexports.isJSXOpeningElement = isJSXOpeningElement;\nexports.isJSXOpeningFragment = isJSXOpeningFragment;\nexports.isJSXSpreadAttribute = isJSXSpreadAttribute;\nexports.isJSXSpreadChild = isJSXSpreadChild;\nexports.isJSXText = isJSXText;\nexports.isLVal = isLVal;\nexports.isLabeledStatement = isLabeledStatement;\nexports.isLiteral = isLiteral;\nexports.isLogicalExpression = isLogicalExpression;\nexports.isLoop = isLoop;\nexports.isMemberExpression = isMemberExpression;\nexports.isMetaProperty = isMetaProperty;\nexports.isMethod = isMethod;\nexports.isMiscellaneous = isMiscellaneous;\nexports.isMixedTypeAnnotation = isMixedTypeAnnotation;\nexports.isModuleDeclaration = isModuleDeclaration;\nexports.isModuleExpression = isModuleExpression;\nexports.isModuleSpecifier = isModuleSpecifier;\nexports.isNewExpression = isNewExpression;\nexports.isNoop = isNoop;\nexports.isNullLiteral = isNullLiteral;\nexports.isNullLiteralTypeAnnotation = isNullLiteralTypeAnnotation;\nexports.isNullableTypeAnnotation = isNullableTypeAnnotation;\nexports.isNumberLiteral = isNumberLiteral;\nexports.isNumberLiteralTypeAnnotation = isNumberLiteralTypeAnnotation;\nexports.isNumberTypeAnnotation = isNumberTypeAnnotation;\nexports.isNumericLiteral = isNumericLiteral;\nexports.isObjectExpression = isObjectExpression;\nexports.isObjectMember = isObjectMember;\nexports.isObjectMethod = isObjectMethod;\nexports.isObjectPattern = isObjectPattern;\nexports.isObjectProperty = isObjectProperty;\nexports.isObjectTypeAnnotation = isObjectTypeAnnotation;\nexports.isObjectTypeCallProperty = isObjectTypeCallProperty;\nexports.isObjectTypeIndexer = isObjectTypeIndexer;\nexports.isObjectTypeInternalSlot = isObjectTypeInternalSlot;\nexports.isObjectTypeProperty = isObjectTypeProperty;\nexports.isObjectTypeSpreadProperty = isObjectTypeSpreadProperty;\nexports.isOpaqueType = isOpaqueType;\nexports.isOptionalCallExpression = isOptionalCallExpression;\nexports.isOptionalIndexedAccessType = isOptionalIndexedAccessType;\nexports.isOptionalMemberExpression = isOptionalMemberExpression;\nexports.isParenthesizedExpression = isParenthesizedExpression;\nexports.isPattern = isPattern;\nexports.isPatternLike = isPatternLike;\nexports.isPipelineBareFunction = isPipelineBareFunction;\nexports.isPipelinePrimaryTopicReference = isPipelinePrimaryTopicReference;\nexports.isPipelineTopicExpression = isPipelineTopicExpression;\nexports.isPlaceholder = isPlaceholder;\nexports.isPrivate = isPrivate;\nexports.isPrivateName = isPrivateName;\nexports.isProgram = isProgram;\nexports.isProperty = isProperty;\nexports.isPureish = isPureish;\nexports.isQualifiedTypeIdentifier = isQualifiedTypeIdentifier;\nexports.isRecordExpression = isRecordExpression;\nexports.isRegExpLiteral = isRegExpLiteral;\nexports.isRegexLiteral = isRegexLiteral;\nexports.isRestElement = isRestElement;\nexports.isRestProperty = isRestProperty;\nexports.isReturnStatement = isReturnStatement;\nexports.isScopable = isScopable;\nexports.isSequenceExpression = isSequenceExpression;\nexports.isSpreadElement = isSpreadElement;\nexports.isSpreadProperty = isSpreadProperty;\nexports.isStandardized = isStandardized;\nexports.isStatement = isStatement;\nexports.isStaticBlock = isStaticBlock;\nexports.isStringLiteral = isStringLiteral;\nexports.isStringLiteralTypeAnnotation = isStringLiteralTypeAnnotation;\nexports.isStringTypeAnnotation = isStringTypeAnnotation;\nexports.isSuper = isSuper;\nexports.isSwitchCase = isSwitchCase;\nexports.isSwitchStatement = isSwitchStatement;\nexports.isSymbolTypeAnnotation = isSymbolTypeAnnotation;\nexports.isTSAnyKeyword = isTSAnyKeyword;\nexports.isTSArrayType = isTSArrayType;\nexports.isTSAsExpression = isTSAsExpression;\nexports.isTSBaseType = isTSBaseType;\nexports.isTSBigIntKeyword = isTSBigIntKeyword;\nexports.isTSBooleanKeyword = isTSBooleanKeyword;\nexports.isTSCallSignatureDeclaration = isTSCallSignatureDeclaration;\nexports.isTSConditionalType = isTSConditionalType;\nexports.isTSConstructSignatureDeclaration = isTSConstructSignatureDeclaration;\nexports.isTSConstructorType = isTSConstructorType;\nexports.isTSDeclareFunction = isTSDeclareFunction;\nexports.isTSDeclareMethod = isTSDeclareMethod;\nexports.isTSEntityName = isTSEntityName;\nexports.isTSEnumDeclaration = isTSEnumDeclaration;\nexports.isTSEnumMember = isTSEnumMember;\nexports.isTSExportAssignment = isTSExportAssignment;\nexports.isTSExpressionWithTypeArguments = isTSExpressionWithTypeArguments;\nexports.isTSExternalModuleReference = isTSExternalModuleReference;\nexports.isTSFunctionType = isTSFunctionType;\nexports.isTSImportEqualsDeclaration = isTSImportEqualsDeclaration;\nexports.isTSImportType = isTSImportType;\nexports.isTSIndexSignature = isTSIndexSignature;\nexports.isTSIndexedAccessType = isTSIndexedAccessType;\nexports.isTSInferType = isTSInferType;\nexports.isTSInstantiationExpression = isTSInstantiationExpression;\nexports.isTSInterfaceBody = isTSInterfaceBody;\nexports.isTSInterfaceDeclaration = isTSInterfaceDeclaration;\nexports.isTSIntersectionType = isTSIntersectionType;\nexports.isTSIntrinsicKeyword = isTSIntrinsicKeyword;\nexports.isTSLiteralType = isTSLiteralType;\nexports.isTSMappedType = isTSMappedType;\nexports.isTSMethodSignature = isTSMethodSignature;\nexports.isTSModuleBlock = isTSModuleBlock;\nexports.isTSModuleDeclaration = isTSModuleDeclaration;\nexports.isTSNamedTupleMember = isTSNamedTupleMember;\nexports.isTSNamespaceExportDeclaration = isTSNamespaceExportDeclaration;\nexports.isTSNeverKeyword = isTSNeverKeyword;\nexports.isTSNonNullExpression = isTSNonNullExpression;\nexports.isTSNullKeyword = isTSNullKeyword;\nexports.isTSNumberKeyword = isTSNumberKeyword;\nexports.isTSObjectKeyword = isTSObjectKeyword;\nexports.isTSOptionalType = isTSOptionalType;\nexports.isTSParameterProperty = isTSParameterProperty;\nexports.isTSParenthesizedType = isTSParenthesizedType;\nexports.isTSPropertySignature = isTSPropertySignature;\nexports.isTSQualifiedName = isTSQualifiedName;\nexports.isTSRestType = isTSRestType;\nexports.isTSStringKeyword = isTSStringKeyword;\nexports.isTSSymbolKeyword = isTSSymbolKeyword;\nexports.isTSThisType = isTSThisType;\nexports.isTSTupleType = isTSTupleType;\nexports.isTSType = isTSType;\nexports.isTSTypeAliasDeclaration = isTSTypeAliasDeclaration;\nexports.isTSTypeAnnotation = isTSTypeAnnotation;\nexports.isTSTypeAssertion = isTSTypeAssertion;\nexports.isTSTypeElement = isTSTypeElement;\nexports.isTSTypeLiteral = isTSTypeLiteral;\nexports.isTSTypeOperator = isTSTypeOperator;\nexports.isTSTypeParameter = isTSTypeParameter;\nexports.isTSTypeParameterDeclaration = isTSTypeParameterDeclaration;\nexports.isTSTypeParameterInstantiation = isTSTypeParameterInstantiation;\nexports.isTSTypePredicate = isTSTypePredicate;\nexports.isTSTypeQuery = isTSTypeQuery;\nexports.isTSTypeReference = isTSTypeReference;\nexports.isTSUndefinedKeyword = isTSUndefinedKeyword;\nexports.isTSUnionType = isTSUnionType;\nexports.isTSUnknownKeyword = isTSUnknownKeyword;\nexports.isTSVoidKeyword = isTSVoidKeyword;\nexports.isTaggedTemplateExpression = isTaggedTemplateExpression;\nexports.isTemplateElement = isTemplateElement;\nexports.isTemplateLiteral = isTemplateLiteral;\nexports.isTerminatorless = isTerminatorless;\nexports.isThisExpression = isThisExpression;\nexports.isThisTypeAnnotation = isThisTypeAnnotation;\nexports.isThrowStatement = isThrowStatement;\nexports.isTopicReference = isTopicReference;\nexports.isTryStatement = isTryStatement;\nexports.isTupleExpression = isTupleExpression;\nexports.isTupleTypeAnnotation = isTupleTypeAnnotation;\nexports.isTypeAlias = isTypeAlias;\nexports.isTypeAnnotation = isTypeAnnotation;\nexports.isTypeCastExpression = isTypeCastExpression;\nexports.isTypeParameter = isTypeParameter;\nexports.isTypeParameterDeclaration = isTypeParameterDeclaration;\nexports.isTypeParameterInstantiation = isTypeParameterInstantiation;\nexports.isTypeScript = isTypeScript;\nexports.isTypeofTypeAnnotation = isTypeofTypeAnnotation;\nexports.isUnaryExpression = isUnaryExpression;\nexports.isUnaryLike = isUnaryLike;\nexports.isUnionTypeAnnotation = isUnionTypeAnnotation;\nexports.isUpdateExpression = isUpdateExpression;\nexports.isUserWhitespacable = isUserWhitespacable;\nexports.isV8IntrinsicIdentifier = isV8IntrinsicIdentifier;\nexports.isVariableDeclaration = isVariableDeclaration;\nexports.isVariableDeclarator = isVariableDeclarator;\nexports.isVariance = isVariance;\nexports.isVoidTypeAnnotation = isVoidTypeAnnotation;\nexports.isWhile = isWhile;\nexports.isWhileStatement = isWhileStatement;\nexports.isWithStatement = isWithStatement;\nexports.isYieldExpression = isYieldExpression;\n\nvar _shallowEqual = require(\"../../utils/shallowEqual\");\n\nfunction isArrayExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BinaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterpreterDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterpreterDirective\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirective(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Directive\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDirectiveLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DirectiveLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BlockStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBreakStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BreakStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCatchClause(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"CatchClause\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditionalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ConditionalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isContinueStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ContinueStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDebuggerStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DebuggerStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoWhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExpressionStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"File\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForInStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForInStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Identifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLabeledStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LabeledStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumericLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumericLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegExpLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegExpLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLogicalExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"LogicalExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNewExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NewExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProgram(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Program\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isReturnStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ReturnStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSequenceExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SequenceExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isParenthesizedExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ParenthesizedExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchCase(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchCase\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSwitchStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SwitchStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThrowStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThrowStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTryStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TryStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnaryExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUpdateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UpdateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableDeclarator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VariableDeclarator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhileStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WhileStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWithStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"WithStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAssignmentPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AssignmentPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrowFunctionExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrowFunctionExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamedDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamedDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForOfStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ForOfStatement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMetaProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MetaProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectPattern\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSuper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Super\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTaggedTemplateExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TaggedTemplateExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTemplateLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TemplateLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isYieldExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"YieldExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAwaitExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AwaitExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImport(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Import\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBigIntLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BigIntLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportNamespaceSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportNamespaceSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalCallExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalCallExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassAccessorProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassAccessorProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassPrivateMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassPrivateMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivateName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PrivateName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStaticBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StaticBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAnyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"AnyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArrayTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArrayTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBooleanLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BooleanLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClassImplements(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ClassImplements\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareClass\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareInterface(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareInterface\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModule(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModule\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareModuleExports(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareModuleExports\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareTypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareOpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareVariable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareVariable\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclareExportAllDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclareExportAllDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DeclaredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExistsTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExistsTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionTypeParam(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"FunctionTypeParam\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isGenericTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"GenericTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInferredPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InferredPredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceExtends(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceExtends\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isInterfaceTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"InterfaceTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIntersectionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IntersectionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMixedTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"MixedTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEmptyTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EmptyTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNullableTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NullableTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeInternalSlot(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeInternalSlot\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeCallProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeCallProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeIndexer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeIndexer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectTypeSpreadProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ObjectTypeSpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOpaqueType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OpaqueType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isQualifiedTypeIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"QualifiedTypeIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringLiteralTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringLiteralTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStringTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"StringTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSymbolTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SymbolTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isThisTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ThisTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeofTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeofTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAlias(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAlias\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeCastExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeCastExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnionTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"UnionTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVariance(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Variance\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isVoidTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"VoidTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumSymbolBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumSymbolBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBooleanMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumBooleanMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumNumberMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumNumberMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumStringMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumStringMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumDefaultedMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"EnumDefaultedMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"IndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isOptionalIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"OptionalIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXEmptyExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXEmptyExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXExpressionContainer(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXExpressionContainer\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadChild(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadChild\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXMemberExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXMemberExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXNamespacedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXNamespacedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningElement\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXSpreadAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXSpreadAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXText(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXText\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXOpeningFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXOpeningFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSXClosingFragment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"JSXClosingFragment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Noop\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Placeholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isV8IntrinsicIdentifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"V8IntrinsicIdentifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isArgumentPlaceholder(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ArgumentPlaceholder\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBindExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"BindExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImportAttribute(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ImportAttribute\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecorator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"Decorator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDoExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DoExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDefaultSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ExportDefaultSpecifier\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRecordExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RecordExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTupleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TupleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDecimalLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"DecimalLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"ModuleExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineTopicExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineTopicExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelineBareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelineBareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPipelinePrimaryTopicReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"PipelinePrimaryTopicReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParameterProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParameterProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareFunction\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSDeclareMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSDeclareMethod\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSQualifiedName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSQualifiedName\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSCallSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSCallSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructSignatureDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructSignatureDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSPropertySignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSPropertySignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMethodSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMethodSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexSignature(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexSignature\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAnyKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAnyKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBooleanKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBooleanKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBigIntKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSBigIntKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntrinsicKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntrinsicKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNeverKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNeverKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNullKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNullKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNumberKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNumberKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSObjectKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSObjectKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSStringKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSStringKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSSymbolKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSSymbolKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUndefinedKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUndefinedKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnknownKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnknownKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSVoidKeyword(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSVoidKeyword\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSThisType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSThisType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSFunctionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSFunctionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConstructorType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConstructorType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypePredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypePredicate\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeQuery(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeQuery\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSArrayType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSArrayType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTupleType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTupleType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSOptionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSOptionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSRestType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSRestType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamedTupleMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamedTupleMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSUnionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSUnionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIntersectionType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIntersectionType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSConditionalType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSConditionalType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInferType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInferType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSParenthesizedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSParenthesizedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeOperator(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeOperator\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSIndexedAccessType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSIndexedAccessType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSMappedType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSMappedType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSLiteralType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSLiteralType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExpressionWithTypeArguments(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExpressionWithTypeArguments\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInterfaceBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInterfaceBody\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAliasDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAliasDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSInstantiationExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSInstantiationExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSAsExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSAsExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAssertion(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAssertion\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSEnumMember\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSModuleBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSModuleBlock\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportType\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSImportEqualsDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSImportEqualsDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExternalModuleReference(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExternalModuleReference\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNonNullExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNonNullExpression\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSExportAssignment(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSExportAssignment\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSNamespaceExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSNamespaceExportDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeAnnotation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterInstantiation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterInstantiation\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameterDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameterDeclaration\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeParameter(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"TSTypeParameter\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStandardized(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"InterpreterDirective\" === nodeType || \"Directive\" === nodeType || \"DirectiveLiteral\" === nodeType || \"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"CallExpression\" === nodeType || \"CatchClause\" === nodeType || \"ConditionalExpression\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"File\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"Program\" === nodeType || \"ObjectExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"RestElement\" === nodeType || \"ReturnStatement\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"SwitchCase\" === nodeType || \"SwitchStatement\" === nodeType || \"ThisExpression\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"VariableDeclaration\" === nodeType || \"VariableDeclarator\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassBody\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ExportSpecifier\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"MetaProperty\" === nodeType || \"ClassMethod\" === nodeType || \"ObjectPattern\" === nodeType || \"SpreadElement\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateElement\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType || \"StaticBlock\" === nodeType || nodeType === \"Placeholder\" && (\"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode || \"BlockStatement\" === node.expectedNode || \"ClassBody\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpression(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ArrayExpression\" === nodeType || \"AssignmentExpression\" === nodeType || \"BinaryExpression\" === nodeType || \"CallExpression\" === nodeType || \"ConditionalExpression\" === nodeType || \"FunctionExpression\" === nodeType || \"Identifier\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"LogicalExpression\" === nodeType || \"MemberExpression\" === nodeType || \"NewExpression\" === nodeType || \"ObjectExpression\" === nodeType || \"SequenceExpression\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"ThisExpression\" === nodeType || \"UnaryExpression\" === nodeType || \"UpdateExpression\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"MetaProperty\" === nodeType || \"Super\" === nodeType || \"TaggedTemplateExpression\" === nodeType || \"TemplateLiteral\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType || \"Import\" === nodeType || \"BigIntLiteral\" === nodeType || \"OptionalMemberExpression\" === nodeType || \"OptionalCallExpression\" === nodeType || \"TypeCastExpression\" === nodeType || \"JSXElement\" === nodeType || \"JSXFragment\" === nodeType || \"BindExpression\" === nodeType || \"DoExpression\" === nodeType || \"RecordExpression\" === nodeType || \"TupleExpression\" === nodeType || \"DecimalLiteral\" === nodeType || \"ModuleExpression\" === nodeType || \"TopicReference\" === nodeType || \"PipelineTopicExpression\" === nodeType || \"PipelineBareFunction\" === nodeType || \"PipelinePrimaryTopicReference\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Expression\" === node.expectedNode || \"Identifier\" === node.expectedNode || \"StringLiteral\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBinary(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BinaryExpression\" === nodeType || \"LogicalExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isScopable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlockParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"CatchClause\" === nodeType || \"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"Program\" === nodeType || \"ObjectMethod\" === nodeType || \"SwitchStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ForOfStatement\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isBlock(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"Program\" === nodeType || \"TSModuleBlock\" === nodeType || nodeType === \"Placeholder\" && \"BlockStatement\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BlockStatement\" === nodeType || \"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"DebuggerStatement\" === nodeType || \"DoWhileStatement\" === nodeType || \"EmptyStatement\" === nodeType || \"ExpressionStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"FunctionDeclaration\" === nodeType || \"IfStatement\" === nodeType || \"LabeledStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"SwitchStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"TryStatement\" === nodeType || \"VariableDeclaration\" === nodeType || \"WhileStatement\" === nodeType || \"WithStatement\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ForOfStatement\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || nodeType === \"Placeholder\" && (\"Statement\" === node.expectedNode || \"Declaration\" === node.expectedNode || \"BlockStatement\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTerminatorless(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType || \"YieldExpression\" === nodeType || \"AwaitExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isCompletionStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"BreakStatement\" === nodeType || \"ContinueStatement\" === nodeType || \"ReturnStatement\" === nodeType || \"ThrowStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isConditional(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ConditionalExpression\" === nodeType || \"IfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLoop(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"WhileStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isWhile(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DoWhileStatement\" === nodeType || \"WhileStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExpressionWrapper(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExpressionStatement\" === nodeType || \"ParenthesizedExpression\" === nodeType || \"TypeCastExpression\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isForXStatement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ForInStatement\" === nodeType || \"ForOfStatement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunction(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFunctionParent(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"ObjectMethod\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"StaticBlock\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPureish(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"FunctionExpression\" === nodeType || \"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"ArrowFunctionExpression\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"FunctionDeclaration\" === nodeType || \"VariableDeclaration\" === nodeType || \"ClassDeclaration\" === nodeType || \"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType || \"EnumDeclaration\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSModuleDeclaration\" === nodeType || nodeType === \"Placeholder\" && \"Declaration\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPatternLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLVal(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"MemberExpression\" === nodeType || \"RestElement\" === nodeType || \"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || \"TSParameterProperty\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSNonNullExpression\" === nodeType || nodeType === \"Placeholder\" && (\"Pattern\" === node.expectedNode || \"Identifier\" === node.expectedNode)) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSEntityName(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Identifier\" === nodeType || \"TSQualifiedName\" === nodeType || nodeType === \"Placeholder\" && \"Identifier\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isLiteral(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"RegExpLiteral\" === nodeType || \"TemplateLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isImmutable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"StringLiteral\" === nodeType || \"NumericLiteral\" === nodeType || \"NullLiteral\" === nodeType || \"BooleanLiteral\" === nodeType || \"BigIntLiteral\" === nodeType || \"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType || \"DecimalLiteral\" === nodeType || nodeType === \"Placeholder\" && \"StringLiteral\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUserWhitespacable(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMethod(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ClassMethod\" === nodeType || \"ClassPrivateMethod\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isObjectMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectMethod\" === nodeType || \"ObjectProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isProperty(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ObjectProperty\" === nodeType || \"ClassProperty\" === nodeType || \"ClassAccessorProperty\" === nodeType || \"ClassPrivateProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isUnaryLike(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"UnaryExpression\" === nodeType || \"SpreadElement\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPattern(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AssignmentPattern\" === nodeType || \"ArrayPattern\" === nodeType || \"ObjectPattern\" === nodeType || nodeType === \"Placeholder\" && \"Pattern\" === node.expectedNode) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isClass(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassExpression\" === nodeType || \"ClassDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType || \"ImportDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isExportDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportAllDeclaration\" === nodeType || \"ExportDefaultDeclaration\" === nodeType || \"ExportNamedDeclaration\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isModuleSpecifier(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ExportSpecifier\" === nodeType || \"ImportDefaultSpecifier\" === nodeType || \"ImportNamespaceSpecifier\" === nodeType || \"ImportSpecifier\" === nodeType || \"ExportNamespaceSpecifier\" === nodeType || \"ExportDefaultSpecifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isAccessor(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassAccessorProperty\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isPrivate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"ClassPrivateProperty\" === nodeType || \"ClassPrivateMethod\" === nodeType || \"PrivateName\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlow(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ClassImplements\" === nodeType || \"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"DeclaredPredicate\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"FunctionTypeParam\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InferredPredicate\" === nodeType || \"InterfaceExtends\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"ObjectTypeInternalSlot\" === nodeType || \"ObjectTypeCallProperty\" === nodeType || \"ObjectTypeIndexer\" === nodeType || \"ObjectTypeProperty\" === nodeType || \"ObjectTypeSpreadProperty\" === nodeType || \"OpaqueType\" === nodeType || \"QualifiedTypeIdentifier\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"TypeAlias\" === nodeType || \"TypeAnnotation\" === nodeType || \"TypeCastExpression\" === nodeType || \"TypeParameter\" === nodeType || \"TypeParameterDeclaration\" === nodeType || \"TypeParameterInstantiation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"Variance\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"EnumDeclaration\" === nodeType || \"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType || \"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"ArrayTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"BooleanLiteralTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"ExistsTypeAnnotation\" === nodeType || \"FunctionTypeAnnotation\" === nodeType || \"GenericTypeAnnotation\" === nodeType || \"InterfaceTypeAnnotation\" === nodeType || \"IntersectionTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NullableTypeAnnotation\" === nodeType || \"NumberLiteralTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"ObjectTypeAnnotation\" === nodeType || \"StringLiteralTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"TupleTypeAnnotation\" === nodeType || \"TypeofTypeAnnotation\" === nodeType || \"UnionTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType || \"IndexedAccessType\" === nodeType || \"OptionalIndexedAccessType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowBaseAnnotation(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"AnyTypeAnnotation\" === nodeType || \"BooleanTypeAnnotation\" === nodeType || \"NullLiteralTypeAnnotation\" === nodeType || \"MixedTypeAnnotation\" === nodeType || \"EmptyTypeAnnotation\" === nodeType || \"NumberTypeAnnotation\" === nodeType || \"StringTypeAnnotation\" === nodeType || \"SymbolTypeAnnotation\" === nodeType || \"ThisTypeAnnotation\" === nodeType || \"VoidTypeAnnotation\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowDeclaration(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclareClass\" === nodeType || \"DeclareFunction\" === nodeType || \"DeclareInterface\" === nodeType || \"DeclareModule\" === nodeType || \"DeclareModuleExports\" === nodeType || \"DeclareTypeAlias\" === nodeType || \"DeclareOpaqueType\" === nodeType || \"DeclareVariable\" === nodeType || \"DeclareExportDeclaration\" === nodeType || \"DeclareExportAllDeclaration\" === nodeType || \"InterfaceDeclaration\" === nodeType || \"OpaqueType\" === nodeType || \"TypeAlias\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isFlowPredicate(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"DeclaredPredicate\" === nodeType || \"InferredPredicate\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumBody(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanBody\" === nodeType || \"EnumNumberBody\" === nodeType || \"EnumStringBody\" === nodeType || \"EnumSymbolBody\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isEnumMember(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"EnumBooleanMember\" === nodeType || \"EnumNumberMember\" === nodeType || \"EnumStringMember\" === nodeType || \"EnumDefaultedMember\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isJSX(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"JSXAttribute\" === nodeType || \"JSXClosingElement\" === nodeType || \"JSXElement\" === nodeType || \"JSXEmptyExpression\" === nodeType || \"JSXExpressionContainer\" === nodeType || \"JSXSpreadChild\" === nodeType || \"JSXIdentifier\" === nodeType || \"JSXMemberExpression\" === nodeType || \"JSXNamespacedName\" === nodeType || \"JSXOpeningElement\" === nodeType || \"JSXSpreadAttribute\" === nodeType || \"JSXText\" === nodeType || \"JSXFragment\" === nodeType || \"JSXOpeningFragment\" === nodeType || \"JSXClosingFragment\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isMiscellaneous(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"Noop\" === nodeType || \"Placeholder\" === nodeType || \"V8IntrinsicIdentifier\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTypeScript(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSParameterProperty\" === nodeType || \"TSDeclareFunction\" === nodeType || \"TSDeclareMethod\" === nodeType || \"TSQualifiedName\" === nodeType || \"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType || \"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSNamedTupleMember\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSInterfaceDeclaration\" === nodeType || \"TSInterfaceBody\" === nodeType || \"TSTypeAliasDeclaration\" === nodeType || \"TSInstantiationExpression\" === nodeType || \"TSAsExpression\" === nodeType || \"TSTypeAssertion\" === nodeType || \"TSEnumDeclaration\" === nodeType || \"TSEnumMember\" === nodeType || \"TSModuleDeclaration\" === nodeType || \"TSModuleBlock\" === nodeType || \"TSImportType\" === nodeType || \"TSImportEqualsDeclaration\" === nodeType || \"TSExternalModuleReference\" === nodeType || \"TSNonNullExpression\" === nodeType || \"TSExportAssignment\" === nodeType || \"TSNamespaceExportDeclaration\" === nodeType || \"TSTypeAnnotation\" === nodeType || \"TSTypeParameterInstantiation\" === nodeType || \"TSTypeParameterDeclaration\" === nodeType || \"TSTypeParameter\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSTypeElement(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSCallSignatureDeclaration\" === nodeType || \"TSConstructSignatureDeclaration\" === nodeType || \"TSPropertySignature\" === nodeType || \"TSMethodSignature\" === nodeType || \"TSIndexSignature\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSFunctionType\" === nodeType || \"TSConstructorType\" === nodeType || \"TSTypeReference\" === nodeType || \"TSTypePredicate\" === nodeType || \"TSTypeQuery\" === nodeType || \"TSTypeLiteral\" === nodeType || \"TSArrayType\" === nodeType || \"TSTupleType\" === nodeType || \"TSOptionalType\" === nodeType || \"TSRestType\" === nodeType || \"TSUnionType\" === nodeType || \"TSIntersectionType\" === nodeType || \"TSConditionalType\" === nodeType || \"TSInferType\" === nodeType || \"TSParenthesizedType\" === nodeType || \"TSTypeOperator\" === nodeType || \"TSIndexedAccessType\" === nodeType || \"TSMappedType\" === nodeType || \"TSLiteralType\" === nodeType || \"TSExpressionWithTypeArguments\" === nodeType || \"TSImportType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isTSBaseType(node, opts) {\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (\"TSAnyKeyword\" === nodeType || \"TSBooleanKeyword\" === nodeType || \"TSBigIntKeyword\" === nodeType || \"TSIntrinsicKeyword\" === nodeType || \"TSNeverKeyword\" === nodeType || \"TSNullKeyword\" === nodeType || \"TSNumberKeyword\" === nodeType || \"TSObjectKeyword\" === nodeType || \"TSStringKeyword\" === nodeType || \"TSSymbolKeyword\" === nodeType || \"TSUndefinedKeyword\" === nodeType || \"TSUnknownKeyword\" === nodeType || \"TSVoidKeyword\" === nodeType || \"TSThisType\" === nodeType || \"TSLiteralType\" === nodeType) {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"NumberLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RegexLiteral\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"RestProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}\n\nfunction isSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  if (!node) return false;\n  const nodeType = node.type;\n\n  if (nodeType === \"SpreadProperty\") {\n    if (typeof opts === \"undefined\") {\n      return true;\n    } else {\n      return (0, _shallowEqual.default)(node, opts);\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matchesPattern;\n\nvar _generated = require(\"./generated\");\n\nfunction matchesPattern(member, match, allowPartial) {\n  if (!(0, _generated.isMemberExpression)(member)) return false;\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n  let node;\n\n  for (node = member; (0, _generated.isMemberExpression)(node); node = node.object) {\n    nodes.push(node.property);\n  }\n\n  nodes.push(node);\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n\n    if ((0, _generated.isIdentifier)(node)) {\n      value = node.name;\n    } else if ((0, _generated.isStringLiteral)(node)) {\n      value = node.value;\n    } else if ((0, _generated.isThisExpression)(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchMemberExpression;\n\nvar _matchesPattern = require(\"./matchesPattern\");\n\nfunction buildMatchMemberExpression(match, allowPartial) {\n  const parts = match.split(\".\");\n  return member => (0, _matchesPattern.default)(member, parts, allowPartial);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buildMatchMemberExpression = require(\"../buildMatchMemberExpression\");\n\nconst isReactComponent = (0, _buildMatchMemberExpression.default)(\"React.Component\");\nvar _default = isReactComponent;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCompatTag;\n\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]/.test(tagName);\n}", "'use strict';\n\nlet fastProto = null;\n\n// Creates an object with permanently fast properties in V8. See Toon Verwaest's\n// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62\n// for more details. Use %HasFastProperties(object) and the Node.js flag\n// --allow-natives-syntax to check whether an object has fast properties.\nfunction FastObject(o) {\n\t// A prototype object will have \"fast properties\" enabled once it is checked\n\t// against the inline property cache of a function, e.g. fastProto.property:\n\t// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63\n\tif (fastProto !== null && typeof fastProto.property) {\n\t\tconst result = fastProto;\n\t\tfastProto = FastObject.prototype = null;\n\t\treturn result;\n\t}\n\tfastProto = FastObject.prototype = o == null ? Object.create(null) : o;\n\treturn new FastObject;\n}\n\n// Initialize the inline property cache of FastObject\nFastObject();\n\nmodule.exports = function toFastproperties(o) {\n\treturn FastObject(o);\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isType(nodeType, targetType) {\n  if (nodeType === targetType) return true;\n  if (_definitions.ALIAS_KEYS[targetType]) return false;\n  const aliases = _definitions.FLIPPED_ALIAS_KEYS[targetType];\n\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPlaceholderType;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isPlaceholderType(placeholderType, targetType) {\n  if (placeholderType === targetType) return true;\n  const aliases = _definitions.PLACEHOLDERS_ALIAS[placeholderType];\n\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = is;\n\nvar _shallowEqual = require(\"../utils/shallowEqual\");\n\nvar _isType = require(\"./isType\");\n\nvar _isPlaceholderType = require(\"./isPlaceholderType\");\n\nvar _definitions = require(\"../definitions\");\n\nfunction is(type, node, opts) {\n  if (!node) return false;\n  const matches = (0, _isType.default)(node.type, type);\n\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in _definitions.FLIPPED_ALIAS_KEYS) {\n      return (0, _isPlaceholderType.default)(node.expectedNode, type);\n    }\n\n    return false;\n  }\n\n  if (typeof opts === \"undefined\") {\n    return true;\n  } else {\n    return (0, _shallowEqual.default)(node, opts);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nfunction isIdentifierName(name) {\n  let isFirst = true;\n\n  for (let i = 0; i < name.length; i++) {\n    let cp = name.charCodeAt(i);\n\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    if (isFirst) {\n      isFirst = false;\n\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n\n  return !isFirst;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isIdentifierChar\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierChar;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierName;\n  }\n});\nObject.defineProperty(exports, \"isIdentifierStart\", {\n  enumerable: true,\n  get: function () {\n    return _identifier.isIdentifierStart;\n  }\n});\nObject.defineProperty(exports, \"isKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isKeyword;\n  }\n});\nObject.defineProperty(exports, \"isReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindOnlyReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictBindReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictBindReservedWord;\n  }\n});\nObject.defineProperty(exports, \"isStrictReservedWord\", {\n  enumerable: true,\n  get: function () {\n    return _keyword.isStrictReservedWord;\n  }\n});\n\nvar _identifier = require(\"./identifier\");\n\nvar _keyword = require(\"./keyword\");", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidIdentifier;\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction isValidIdentifier(name, reserved = true) {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    if ((0, _helperValidatorIdentifier.isKeyword)(name) || (0, _helperValidatorIdentifier.isStrictReservedWord)(name, true)) {\n      return false;\n    }\n  }\n\n  return (0, _helperValidatorIdentifier.isIdentifierName)(name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readCodePoint = readCodePoint;\nexports.readInt = readInt;\nexports.readStringContents = readStringContents;\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\n\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    const ch = input.charCodeAt(pos);\n\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine\n      } = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors));\n\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n\n  return {\n    pos,\n    str: out,\n    containsInvalid,\n    lineStart,\n    curLine\n  };\n}\n\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n\n  return ch === (type === \"double\" ? 34 : 39);\n}\n\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n\n  const ch = input.charCodeAt(pos++);\n\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n\n    case 114:\n      return res(\"\\r\");\n\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n\n    case 116:\n      return res(\"\\t\");\n\n    case 98:\n      return res(\"\\b\");\n\n    case 118:\n      return res(\"\\u000b\");\n\n    case 102:\n      return res(\"\\f\");\n\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n\n    case 10:\n      lineStart = pos;\n      ++curLine;\n\n    case 8232:\n    case 8233:\n      return res(\"\");\n\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors));\n\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n\n  return {\n    code: n,\n    pos\n  };\n}\n\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      ++pos;\n      continue;\n    }\n\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n\n    if (val >= radix) {\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n\n    ++pos;\n    total = total * radix + val;\n  }\n\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n\n  return {\n    n: total,\n    pos\n  };\n}\n\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n\n  return {\n    code,\n    pos\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UPDATE_OPERATORS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.STATEMENT_OR_BLOCK_KEYS = exports.NUMBER_UNARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.NOT_LOCAL_BINDING = exports.LOGICAL_OPERATORS = exports.INHERIT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.EQUALITY_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.COMMENT_KEYS = exports.BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.BLOCK_SCOPED_SYMBOL = exports.BINARY_OPERATORS = exports.ASSIGNMENT_OPERATORS = void 0;\nconst STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexports.STATEMENT_OR_BLOCK_KEYS = STATEMENT_OR_BLOCK_KEYS;\nconst FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexports.FLATTENABLE_KEYS = FLATTENABLE_KEYS;\nconst FOR_INIT_KEYS = [\"left\", \"init\"];\nexports.FOR_INIT_KEYS = FOR_INIT_KEYS;\nconst COMMENT_KEYS = [\"leadingComments\", \"trailingComments\", \"innerComments\"];\nexports.COMMENT_KEYS = COMMENT_KEYS;\nconst LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexports.LOGICAL_OPERATORS = LOGICAL_OPERATORS;\nconst UPDATE_OPERATORS = [\"++\", \"--\"];\nexports.UPDATE_OPERATORS = UPDATE_OPERATORS;\nconst BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexports.BOOLEAN_NUMBER_BINARY_OPERATORS = BOOLEAN_NUMBER_BINARY_OPERATORS;\nconst EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexports.EQUALITY_BINARY_OPERATORS = EQUALITY_BINARY_OPERATORS;\nconst COMPARISON_BINARY_OPERATORS = [...EQUALITY_BINARY_OPERATORS, \"in\", \"instanceof\"];\nexports.COMPARISON_BINARY_OPERATORS = COMPARISON_BINARY_OPERATORS;\nconst BOOLEAN_BINARY_OPERATORS = [...COMPARISON_BINARY_OPERATORS, ...BOOLEAN_NUMBER_BINARY_OPERATORS];\nexports.BOOLEAN_BINARY_OPERATORS = BOOLEAN_BINARY_OPERATORS;\nconst NUMBER_BINARY_OPERATORS = [\"-\", \"/\", \"%\", \"*\", \"**\", \"&\", \"|\", \">>\", \">>>\", \"<<\", \"^\"];\nexports.NUMBER_BINARY_OPERATORS = NUMBER_BINARY_OPERATORS;\nconst BINARY_OPERATORS = [\"+\", ...NUMBER_BINARY_OPERATORS, ...BOOLEAN_BINARY_OPERATORS, \"|>\"];\nexports.BINARY_OPERATORS = BINARY_OPERATORS;\nconst ASSIGNMENT_OPERATORS = [\"=\", \"+=\", ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"), ...LOGICAL_OPERATORS.map(op => op + \"=\")];\nexports.ASSIGNMENT_OPERATORS = ASSIGNMENT_OPERATORS;\nconst BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexports.BOOLEAN_UNARY_OPERATORS = BOOLEAN_UNARY_OPERATORS;\nconst NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexports.NUMBER_UNARY_OPERATORS = NUMBER_UNARY_OPERATORS;\nconst STRING_UNARY_OPERATORS = [\"typeof\"];\nexports.STRING_UNARY_OPERATORS = STRING_UNARY_OPERATORS;\nconst UNARY_OPERATORS = [\"void\", \"throw\", ...BOOLEAN_UNARY_OPERATORS, ...NUMBER_UNARY_OPERATORS, ...STRING_UNARY_OPERATORS];\nexports.UNARY_OPERATORS = UNARY_OPERATORS;\nconst INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"]\n};\nexports.INHERIT_KEYS = INHERIT_KEYS;\nconst BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexports.BLOCK_SCOPED_SYMBOL = BLOCK_SCOPED_SYMBOL;\nconst NOT_LOCAL_BINDING = Symbol.for(\"should not be considered a local binding\");\nexports.NOT_LOCAL_BINDING = NOT_LOCAL_BINDING;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VISITOR_KEYS = exports.NODE_PARENT_VALIDATIONS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.ALIAS_KEYS = void 0;\nexports.arrayOf = arrayOf;\nexports.arrayOfType = arrayOfType;\nexports.assertEach = assertEach;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertNodeType = assertNodeType;\nexports.assertOneOf = assertOneOf;\nexports.assertOptionalChainStart = assertOptionalChainStart;\nexports.assertShape = assertShape;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\nexports.defineAliasedType = defineAliasedType;\nexports.typeIs = typeIs;\nexports.validate = validate;\nexports.validateArrayOfType = validateArrayOfType;\nexports.validateOptional = validateOptional;\nexports.validateOptionalType = validateOptionalType;\nexports.validateType = validateType;\n\nvar _is = require(\"../validators/is\");\n\nvar _validate = require(\"../validators/validate\");\n\nconst VISITOR_KEYS = {};\nexports.VISITOR_KEYS = VISITOR_KEYS;\nconst ALIAS_KEYS = {};\nexports.ALIAS_KEYS = ALIAS_KEYS;\nconst FLIPPED_ALIAS_KEYS = {};\nexports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;\nconst NODE_FIELDS = {};\nexports.NODE_FIELDS = NODE_FIELDS;\nconst BUILDER_KEYS = {};\nexports.BUILDER_KEYS = BUILDER_KEYS;\nconst DEPRECATED_KEYS = {};\nexports.DEPRECATED_KEYS = DEPRECATED_KEYS;\nconst NODE_PARENT_VALIDATIONS = {};\nexports.NODE_PARENT_VALIDATIONS = NODE_PARENT_VALIDATIONS;\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\nfunction validate(validate) {\n  return {\n    validate\n  };\n}\n\nfunction typeIs(typeName) {\n  return typeof typeName === \"string\" ? assertNodeType(typeName) : assertNodeType(...typeName);\n}\n\nfunction validateType(typeName) {\n  return validate(typeIs(typeName));\n}\n\nfunction validateOptional(validate) {\n  return {\n    validate,\n    optional: true\n  };\n}\n\nfunction validateOptionalType(typeName) {\n  return {\n    validate: typeIs(typeName),\n    optional: true\n  };\n}\n\nfunction arrayOf(elementType) {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nfunction arrayOfType(typeName) {\n  return arrayOf(typeIs(typeName));\n}\n\nfunction validateArrayOfType(typeName) {\n  return validate(arrayOfType(typeName));\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      if (process.env.BABEL_TYPES_8_BREAKING) (0, _validate.validateChild)(node, subkey, v);\n    }\n  }\n\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf(...values) {\n  function validate(node, key, val) {\n    if (values.indexOf(val) < 0) {\n      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);\n    }\n  }\n\n  validate.oneOf = values;\n  return validate;\n}\n\nfunction assertNodeType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if ((0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeTypes = types;\n  return validate;\n}\n\nfunction assertNodeOrValueType(...types) {\n  function validate(node, key, val) {\n    for (const type of types) {\n      if (getType(val) === type || (0, _is.default)(type, val)) {\n        (0, _validate.validateChild)(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);\n    }\n  }\n\n  validate.type = type;\n  return validate;\n}\n\nfunction assertShape(shape) {\n  function validate(node, key, val) {\n    const errors = [];\n\n    for (const property of Object.keys(shape)) {\n      try {\n        (0, _validate.validateField)(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n\n        throw error;\n      }\n    }\n\n    if (errors.length) {\n      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\\n${errors.join(\"\\n\")}`);\n    }\n  }\n\n  validate.shapeOf = shape;\n  return validate;\n}\n\nfunction assertOptionalChainStart() {\n  function validate(node) {\n    var _current;\n\n    let current = node;\n\n    while (node) {\n      const {\n        type\n      } = current;\n\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(`Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${(_current = current) == null ? void 0 : _current.type}`);\n  }\n\n  return validate;\n}\n\nfunction chain(...fns) {\n  function validate(...args) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n\n  validate.chainOf = fns;\n\n  if (fns.length >= 2 && \"type\" in fns[0] && fns[0].type === \"array\" && !(\"each\" in fns[1])) {\n    throw new Error(`An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`);\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = [\"aliases\", \"builder\", \"deprecatedAlias\", \"fields\", \"inherits\", \"visitor\", \"validate\"];\nconst validFieldKeys = [\"default\", \"optional\", \"validate\"];\n\nfunction defineAliasedType(...aliases) {\n  return (type, opts = {}) => {\n    let defined = opts.aliases;\n\n    if (!defined) {\n      var _store$opts$inherits$, _defined;\n\n      if (opts.inherits) defined = (_store$opts$inherits$ = store[opts.inherits].aliases) == null ? void 0 : _store$opts$inherits$.slice();\n      (_defined = defined) != null ? _defined : defined = [];\n      opts.aliases = defined;\n    }\n\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    return defineType(type, opts);\n  };\n}\n\nfunction defineType(type, opts = {}) {\n  const inherits = opts.inherits && store[opts.inherits] || {};\n  let fields = opts.fields;\n\n  if (!fields) {\n    fields = {};\n\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n\n        if (Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\") {\n          throw new Error(\"field defaults can only be primitives or empty arrays currently\");\n        }\n\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          validate: field.validate\n        };\n      }\n    }\n  }\n\n  const visitor = opts.visitor || inherits.visitor || [];\n  const aliases = opts.aliases || inherits.aliases || [];\n  const builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (validTypeOpts.indexOf(k) === -1) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (validFieldKeys.indexOf(k) === -1) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n\nconst store = {};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patternLikeCommon = exports.functionTypeAnnotationCommon = exports.functionDeclarationCommon = exports.functionCommon = exports.classMethodOrPropertyCommon = exports.classMethodOrDeclareMethodCommon = void 0;\n\nvar _is = require(\"../validators/is\");\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _helperStringParser = require(\"@babel/helper-string-parser\");\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Standardized\");\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"Expression\", \"SpreadElement\"))),\n      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertValueType)(\"string\");\n        }\n\n        const identifier = (0, _utils.assertOneOf)(..._constants.ASSIGNMENT_OPERATORS);\n        const pattern = (0, _utils.assertOneOf)(\"=\");\n        return function (node, key, val) {\n          const validator = (0, _is.default)(\"Pattern\", node.left) ? pattern : identifier;\n          validator(node, key, val);\n        };\n      }()\n    },\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: function () {\n        const expression = (0, _utils.assertNodeType)(\"Expression\");\n        const inOp = (0, _utils.assertNodeType)(\"Expression\", \"PrivateName\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.operator === \"in\" ? inOp : expression;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"]\n});\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"DirectiveLiteral\")\n    }\n  }\n});\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\n});\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: Object.assign({\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {}, {\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\"]\n});\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    alternate: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\", \"Conditional\"]\n});\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\n});\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"]\n});\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\n});\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    },\n    comments: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? Object.assign(() => {}, {\n        each: {\n          oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"]\n        }\n      }) : (0, _utils.assertEach)((0, _utils.assertNodeType)(\"CommentBlock\", \"CommentLine\")),\n      optional: true\n    },\n    tokens: {\n      validate: (0, _utils.assertEach)(Object.assign(() => {}, {\n        type: \"any\"\n      })),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\") : (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: (0, _utils.assertNodeType)(\"VariableDeclaration\", \"Expression\"),\n      optional: true\n    },\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    update: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\nconst functionCommon = () => ({\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\")))\n  },\n  generator: {\n    default: false\n  },\n  async: {\n    default: false\n  }\n});\n\nexports.functionCommon = functionCommon;\n\nconst functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\nexports.functionTypeAnnotationCommon = functionTypeAnnotationCommon;\n\nconst functionDeclarationCommon = () => Object.assign({}, functionCommon(), {\n  declare: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  id: {\n    validate: (0, _utils.assertNodeType)(\"Identifier\"),\n    optional: true\n  }\n});\n\nexports.functionDeclarationCommon = functionDeclarationCommon;\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, functionDeclarationCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  }),\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"],\n  validate: function () {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\n\nconst patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.patternLikeCommon = patternLikeCommon;\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\"],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    name: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!(0, _isValidIdentifier.default)(val, false)) {\n          throw new TypeError(`\"${val}\" is not a valid identifier name`);\n        }\n      }, {\n        type: \"string\"\n      }))\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /\\.(\\w+)$/.exec(key);\n    if (!match) return;\n    const [, parentKey] = match;\n    const nonComp = {\n      computed: false\n    };\n\n    if (parentKey === \"property\") {\n      if ((0, _is.default)(\"MemberExpression\", parent, nonComp)) return;\n      if ((0, _is.default)(\"OptionalMemberExpression\", parent, nonComp)) return;\n    } else if (parentKey === \"key\") {\n      if ((0, _is.default)(\"Property\", parent, nonComp)) return;\n      if ((0, _is.default)(\"Method\", parent, nonComp)) return;\n    } else if (parentKey === \"exported\") {\n      if ((0, _is.default)(\"ExportSpecifier\", parent)) return;\n    } else if (parentKey === \"imported\") {\n      if ((0, _is.default)(\"ImportSpecifier\", parent, {\n        imported: node\n      })) return;\n    } else if (parentKey === \"meta\") {\n      if ((0, _is.default)(\"MetaProperty\", parent, {\n        meta: node\n      })) return;\n    }\n\n    if (((0, _helperValidatorIdentifier.isKeyword)(node.name) || (0, _helperValidatorIdentifier.isReservedWord)(node.name, false)) && node.name !== \"this\") {\n      throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n    }\n  }\n\n});\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    alternate: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"number\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    flags: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        const invalid = /[^gimsuy]/.exec(val);\n\n        if (invalid) {\n          throw new TypeError(`\"${invalid[0]}\" is not a valid RegExp flag`);\n        }\n      }, {\n        type: \"string\"\n      })),\n      default: \"\"\n    }\n  }\n});\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"MemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"optional\"] : [])],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: Object.assign({\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"Super\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    }\n  }, !process.env.BABEL_TYPES_8_BREAKING ? {\n    optional: {\n      validate: (0, _utils.assertOneOf)(true, false),\n      optional: true\n    }\n  } : {})\n});\ndefineType(\"NewExpression\", {\n  inherits: \"CallExpression\"\n});\ndefineType(\"Program\", {\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceFile: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    sourceType: {\n      validate: (0, _utils.assertOneOf)(\"script\", \"module\"),\n      default: \"script\"\n    },\n    interpreter: {\n      validate: (0, _utils.assertNodeType)(\"InterpreterDirective\"),\n      default: null,\n      optional: true\n    },\n    directives: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"]\n});\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectMethod\", \"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    kind: Object.assign({\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }, !process.env.BABEL_TYPES_8_BREAKING ? {\n      default: \"method\"\n    } : {}),\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n\n        const validator = function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\"];\n        return validator;\n      }()\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }),\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\n});\ndefineType(\"ObjectProperty\", {\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", ...(!process.env.BABEL_TYPES_8_BREAKING ? [\"decorators\"] : [])],\n  fields: {\n    computed: {\n      default: false\n    },\n    key: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"DecimalLiteral\", \"PrivateName\"]\n        });\n        return validator;\n      }()\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"PatternLike\")\n    },\n    shorthand: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.computed) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if computed is true\");\n        }\n      }, {\n        type: \"boolean\"\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !(0, _is.default)(\"Identifier\", node.key)) {\n          throw new TypeError(\"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\");\n        }\n      }),\n      default: false\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate: function () {\n    const pattern = (0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"TSAsExpression\", \"TSNonNullExpression\", \"TSTypeAssertion\");\n    const expression = (0, _utils.assertNodeType)(\"Expression\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n      const validator = (0, _is.default)(\"ObjectPattern\", parent) ? pattern : expression;\n      validator(node, \"value\", node.value);\n    };\n  }()\n});\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: Object.assign({}, patternLikeCommon(), {\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"LVal\") : (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  }),\n\n  validate(parent, key) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n    if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n    const [, listKey, index] = match;\n\n    if (parent[listKey].length > +index + 1) {\n      throw new TypeError(`RestElement must be last element of ${listKey}`);\n    }\n  }\n\n});\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    consequent: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  }\n});\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    cases: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"SwitchCase\")))\n    }\n  }\n});\ndefineType(\"ThisExpression\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"BlockStatement\"), Object.assign(function (node) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (!node.handler && !node.finalizer) {\n          throw new TypeError(\"TryStatement expects either a handler or finalizer, or both\");\n        }\n      }, {\n        oneOfNodeTypes: [\"BlockStatement\"]\n      }))\n    },\n    handler: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"CatchClause\")\n    },\n    finalizer: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true\n    },\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"]\n});\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false\n    },\n    argument: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)(\"Expression\") : (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\")\n    },\n    operator: {\n      validate: (0, _utils.assertOneOf)(..._constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"]\n});\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"var\", \"let\", \"const\")\n    },\n    declarations: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"VariableDeclarator\")))\n    }\n  },\n\n  validate(parent, key, node) {\n    if (!process.env.BABEL_TYPES_8_BREAKING) return;\n    if (!(0, _is.default)(\"ForXStatement\", parent, {\n      left: node\n    })) return;\n\n    if (node.declarations.length !== 1) {\n      throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`);\n    }\n  }\n\n});\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"LVal\");\n        }\n\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\");\n        const without = (0, _utils.assertNodeType)(\"Identifier\");\n        return function (node, key, val) {\n          const validator = node.init ? normal : without;\n          validator(node, key, val);\n        };\n      }()\n    },\n    definite: {\n      optional: true,\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    init: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    }\n  }\n});\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\"],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    left: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"ObjectPattern\", \"ArrayPattern\", \"MemberExpression\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\")\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)(\"null\", \"PatternLike\", \"LVal\")))\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    optional: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"params\", \"body\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: Object.assign({}, functionCommon(), functionTypeAnnotationCommon(), {\n    expression: {\n      validate: (0, _utils.assertValueType)(\"boolean\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\", \"Expression\")\n    },\n    predicate: {\n      validate: (0, _utils.assertNodeType)(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ClassMethod\", \"ClassPrivateMethod\", \"ClassProperty\", \"ClassPrivateProperty\", \"ClassAccessorProperty\", \"TSDeclareMethod\", \"TSIndexSignature\", \"StaticBlock\")))\n    }\n  }\n});\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\"id\", \"body\", \"superClass\", \"mixins\", \"typeParameters\", \"superTypeParameters\", \"implements\", \"decorators\"],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\", \"Noop\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"ClassBody\")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    superTypeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    },\n    implements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSExpressionWithTypeArguments\", \"ClassImplements\"))),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    mixins: {\n      validate: (0, _utils.assertNodeType)(\"InterfaceExtends\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    abstract: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  },\n  validate: function () {\n    const identifier = (0, _utils.assertNodeType)(\"Identifier\");\n    return function (parent, key, node) {\n      if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n      if (!(0, _is.default)(\"ExportDefaultDeclaration\", parent)) {\n        identifier(node, \"id\", node.id);\n      }\n    };\n  }()\n});\ndefineType(\"ExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\")),\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    }\n  }\n});\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      validate: (0, _utils.assertNodeType)(\"TSDeclareFunction\", \"FunctionDeclaration\", \"ClassDeclaration\", \"Expression\")\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"value\"))\n  }\n});\ndefineType(\"ExportNamedDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\", \"ExportDeclaration\"],\n  fields: {\n    declaration: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Declaration\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.specifiers.length) {\n          throw new TypeError(\"Only declaration or specifiers is allowed on ExportNamedDeclaration\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Declaration\"]\n      }), function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && node.source) {\n          throw new TypeError(\"Cannot export a declaration from a source\");\n        }\n      })\n    },\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      default: [],\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)(function () {\n        const sourced = (0, _utils.assertNodeType)(\"ExportSpecifier\", \"ExportDefaultSpecifier\", \"ExportNamespaceSpecifier\");\n        const sourceless = (0, _utils.assertNodeType)(\"ExportSpecifier\");\n        if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;\n        return function (node, key, val) {\n          const validator = node.source ? sourced : sourceless;\n          validator(node, key, val);\n        };\n      }()))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\"),\n      optional: true\n    },\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    exportKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: function () {\n        if (!process.env.BABEL_TYPES_8_BREAKING) {\n          return (0, _utils.assertNodeType)(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = (0, _utils.assertNodeType)(\"VariableDeclaration\");\n        const lval = (0, _utils.assertNodeType)(\"Identifier\", \"MemberExpression\", \"ArrayPattern\", \"ObjectPattern\", \"TSAsExpression\", \"TSTypeAssertion\", \"TSNonNullExpression\");\n        return function (node, key, val) {\n          if ((0, _is.default)(\"VariableDeclaration\", val)) {\n            declaration(node, key, val);\n          } else {\n            lval(node, key, val);\n          }\n        };\n      }()\n    },\n    right: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Statement\")\n    },\n    await: {\n      default: false\n    }\n  }\n});\ndefineType(\"ImportDeclaration\", {\n  visitor: [\"specifiers\", \"source\"],\n  aliases: [\"Statement\", \"Declaration\", \"ModuleDeclaration\"],\n  fields: {\n    assertions: {\n      optional: true,\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportAttribute\")))\n    },\n    specifiers: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ImportSpecifier\", \"ImportDefaultSpecifier\", \"ImportNamespaceSpecifier\")))\n    },\n    source: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    imported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"typeof\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate: (0, _utils.chain)((0, _utils.assertNodeType)(\"Identifier\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n        let property;\n\n        switch (val.name) {\n          case \"function\":\n            property = \"sent\";\n            break;\n\n          case \"new\":\n            property = \"target\";\n            break;\n\n          case \"import\":\n            property = \"meta\";\n            break;\n        }\n\n        if (!(0, _is.default)(\"Identifier\", node.property, {\n          name: property\n        })) {\n          throw new TypeError(\"Unrecognised MetaProperty\");\n        }\n      }, {\n        oneOfNodeTypes: [\"Identifier\"]\n      }))\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\nconst classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  accessibility: {\n    validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n    optional: true\n  },\n  static: {\n    default: false\n  },\n  override: {\n    default: false\n  },\n  computed: {\n    default: false\n  },\n  optional: {\n    validate: (0, _utils.assertValueType)(\"boolean\"),\n    optional: true\n  },\n  key: {\n    validate: (0, _utils.chain)(function () {\n      const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\");\n      const computed = (0, _utils.assertNodeType)(\"Expression\");\n      return function (node, key, val) {\n        const validator = node.computed ? computed : normal;\n        validator(node, key, val);\n      };\n    }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\"))\n  }\n});\n\nexports.classMethodOrPropertyCommon = classMethodOrPropertyCommon;\n\nconst classMethodOrDeclareMethodCommon = () => Object.assign({}, functionCommon(), classMethodOrPropertyCommon(), {\n  params: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Identifier\", \"Pattern\", \"RestElement\", \"TSParameterProperty\")))\n  },\n  kind: {\n    validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\"\n  },\n  access: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"string\"), (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\")),\n    optional: true\n  },\n  decorators: {\n    validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n    optional: true\n  }\n});\n\nexports.classMethodOrDeclareMethodCommon = classMethodOrDeclareMethodCommon;\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\", \"generator\", \"async\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"ObjectPattern\", {\n  visitor: [\"properties\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: Object.assign({}, patternLikeCommon(), {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"RestElement\", \"ObjectProperty\")))\n    }\n  })\n});\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Super\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: [\"tag\", \"quasi\", \"typeParameters\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    quasi: {\n      validate: (0, _utils.assertNodeType)(\"TemplateLiteral\")\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: (0, _utils.chain)((0, _utils.assertShape)({\n        raw: {\n          validate: (0, _utils.assertValueType)(\"string\")\n        },\n        cooked: {\n          validate: (0, _utils.assertValueType)(\"string\"),\n          optional: true\n        }\n      }), function templateElementCookedValidator(node) {\n        const raw = node.value.raw;\n        let str,\n            containsInvalid,\n            unterminatedCalled = false;\n\n        try {\n          const error = () => {\n            throw new Error();\n          };\n\n          ({\n            str,\n            containsInvalid\n          } = (0, _helperStringParser.readStringContents)(\"template\", raw, 0, 0, 0, {\n            unterminated() {\n              unterminatedCalled = true;\n            },\n\n            strictNumericEscape: error,\n            invalidEscapeSequence: error,\n            numericSeparatorInEscapeSequence: error,\n            unexpectedNumericSeparator: error,\n            invalidDigit: error,\n            invalidCodePoint: error\n          }));\n        } catch (_unused) {\n          unterminatedCalled = true;\n          containsInvalid = true;\n        }\n\n        if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n        node.value.cooked = containsInvalid ? null : str;\n      })\n    },\n    tail: {\n      default: false\n    }\n  }\n});\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TemplateElement\")))\n    },\n    expressions: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"TSType\")), function (node, key, val) {\n        if (node.quasis.length !== val.length + 1) {\n          throw new TypeError(`Number of ${node.type} quasis should be exactly one more than the number of expressions.\\nExpected ${val.length + 1} quasis but got ${node.quasis.length}`);\n        }\n      })\n    }\n  }\n});\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), Object.assign(function (node, key, val) {\n        if (!process.env.BABEL_TYPES_8_BREAKING) return;\n\n        if (val && !node.argument) {\n          throw new TypeError(\"Property delegate of YieldExpression cannot be true if there is no argument\");\n        }\n      }, {\n        type: \"boolean\"\n      })),\n      default: false\n    },\n    argument: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"Import\", {\n  aliases: [\"Expression\"]\n});\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        const validator = Object.assign(function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        }, {\n          oneOfNodeTypes: [\"Expression\", \"Identifier\"]\n        });\n        return validator;\n      }()\n    },\n    computed: {\n      default: false\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    }\n  }\n});\ndefineType(\"OptionalCallExpression\", {\n  visitor: [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\", \"JSXNamespacedName\", \"ArgumentPlaceholder\")))\n    },\n    optional: {\n      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)(\"boolean\") : (0, _utils.chain)((0, _utils.assertValueType)(\"boolean\"), (0, _utils.assertOptionalChainStart)())\n    },\n    typeArguments: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\"),\n      optional: true\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: Object.assign({}, classMethodOrPropertyCommon(), {\n    key: {\n      validate: (0, _utils.chain)(function () {\n        const normal = (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"PrivateName\");\n        const computed = (0, _utils.assertNodeType)(\"Expression\");\n        return function (node, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      }(), (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\", \"NumericLiteral\", \"BigIntLiteral\", \"Expression\", \"PrivateName\"))\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\", \"typeAnnotation\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    static: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    variance: {\n      validate: (0, _utils.assertNodeType)(\"Variance\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, classMethodOrDeclareMethodCommon(), functionTypeAnnotationCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\", \"method\"),\n      default: \"method\"\n    },\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"]\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Flow\");\n\nconst defineInterfaceishType = name => {\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\"id\", \"typeParameters\", \"extends\", \"mixins\", \"implements\", \"body\"],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: (0, _utils.validateType)(\"Identifier\"),\n      typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"ClassImplements\")),\n      body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n    }\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"DeclareClass\");\ndefineType(\"DeclareFunction\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    predicate: (0, _utils.validateOptionalType)(\"DeclaredPredicate\")\n  }\n});\ndefineInterfaceishType(\"DeclareInterface\");\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)(\"BlockStatement\"),\n    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"CommonJS\", \"ES\"))\n  }\n});\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateOptionalType)(\"FlowType\")\n  }\n});\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: (0, _utils.validateOptionalType)(\"Flow\"),\n    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)([\"ExportSpecifier\", \"ExportNamespaceSpecifier\"])),\n    source: (0, _utils.validateOptionalType)(\"StringLiteral\"),\n    default: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: (0, _utils.validateType)(\"StringLiteral\"),\n    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)(\"type\", \"value\"))\n  }\n});\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: (0, _utils.validateType)(\"Flow\")\n  }\n});\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"]\n});\ndefineType(\"FunctionTypeAnnotation\", {\n  visitor: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FunctionTypeParam\")),\n    rest: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    this: (0, _utils.validateOptionalType)(\"FunctionTypeParam\"),\n    returnType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: (0, _utils.validateOptionalType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"]\n});\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterInstantiation\")\n  }\n});\ndefineInterfaceishType(\"InterfaceDeclaration\");\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"InterfaceExtends\")),\n    body: (0, _utils.validateType)(\"ObjectTypeAnnotation\")\n  }\n});\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"number\"))\n  }\n});\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\", \"exact\"],\n  fields: {\n    properties: (0, _utils.validate)((0, _utils.arrayOfType)([\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"])),\n    indexers: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeIndexer\"),\n      optional: true,\n      default: []\n    },\n    callProperties: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeCallProperty\"),\n      optional: true,\n      default: []\n    },\n    internalSlots: {\n      validate: (0, _utils.arrayOfType)(\"ObjectTypeInternalSlot\"),\n      optional: true,\n      default: []\n    },\n    exact: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    },\n    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: (0, _utils.validateOptionalType)(\"Identifier\"),\n    key: (0, _utils.validateType)(\"FlowType\"),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    value: (0, _utils.validateType)(\"FlowType\"),\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"init\", \"get\", \"set\")),\n    static: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    proto: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    variance: (0, _utils.validateOptionalType)(\"Variance\"),\n    method: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    supertype: (0, _utils.validateOptionalType)(\"FlowType\"),\n    impltype: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"id\", \"qualification\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    qualification: (0, _utils.validateType)([\"Identifier\", \"QualifiedTypeIdentifier\"])\n  }\n});\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: (0, _utils.validate)((0, _utils.assertValueType)(\"string\"))\n  }\n});\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TypeParameterDeclaration\"),\n    right: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TypeAnnotation\")\n  }\n});\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    bound: (0, _utils.validateOptionalType)(\"TypeAnnotation\"),\n    default: (0, _utils.validateOptionalType)(\"FlowType\"),\n    variance: (0, _utils.validateOptionalType)(\"Variance\")\n  }\n});\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"TypeParameter\"))\n  }\n});\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: (0, _utils.validate)((0, _utils.arrayOfType)(\"FlowType\"))\n  }\n});\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: (0, _utils.validate)((0, _utils.assertOneOf)(\"minus\", \"plus\"))\n  }\n});\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"]\n});\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    body: (0, _utils.validateType)([\"EnumBooleanBody\", \"EnumNumberBody\", \"EnumStringBody\", \"EnumSymbolBody\"])\n  }\n});\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumBooleanMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)(\"EnumNumberMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\")),\n    members: (0, _utils.validateArrayOfType)([\"EnumStringMember\", \"EnumDefaultedMember\"]),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"EnumDefaultedMember\"),\n    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"BooleanLiteral\")\n  }\n});\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"NumericLiteral\")\n  }\n});\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\"),\n    init: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\")\n  }\n});\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"FlowType\"),\n    indexType: (0, _utils.validateType)(\"FlowType\"),\n    optional: (0, _utils.validate)((0, _utils.assertValueType)(\"boolean\"))\n  }\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"JSX\");\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    }\n  }\n});\ndefineType(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: Object.assign({\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }, {\n    selfClosing: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\ndefineType(\"JSXEmptyExpression\", {});\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    },\n    selfClosing: {\n      default: false\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"]\n});\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"]\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PLACEHOLDERS_FLIPPED_ALIAS = exports.PLACEHOLDERS_ALIAS = exports.PLACEHOLDERS = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst PLACEHOLDERS = [\"Identifier\", \"StringLiteral\", \"Expression\", \"Statement\", \"Declaration\", \"BlockStatement\", \"ClassBody\", \"Pattern\"];\nexports.PLACEHOLDERS = PLACEHOLDERS;\nconst PLACEHOLDERS_ALIAS = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"]\n};\nexports.PLACEHOLDERS_ALIAS = PLACEHOLDERS_ALIAS;\n\nfor (const type of PLACEHOLDERS) {\n  const alias = _utils.ALIAS_KEYS[type];\n  if (alias != null && alias.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nconst PLACEHOLDERS_FLIPPED_ALIAS = {};\nexports.PLACEHOLDERS_FLIPPED_ALIAS = PLACEHOLDERS_FLIPPED_ALIAS;\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"Miscellaneous\");\n{\n  defineType(\"Noop\", {\n    visitor: []\n  });\n}\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    expectedNode: {\n      validate: (0, _utils.assertOneOf)(..._placeholders.PLACEHOLDERS)\n    }\n  }\n});\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    },\n    async: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      default: false\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"TopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});", "\"use strict\";\n\nvar _utils = require(\"./utils\");\n\nvar _core = require(\"./core\");\n\nvar _is = require(\"../validators/is\");\n\nconst defineType = (0, _utils.defineAliasedType)(\"TypeScript\");\nconst bool = (0, _utils.assertValueType)(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true\n  },\n  typeParameters: {\n    validate: (0, _utils.assertNodeType)(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true\n  }\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"],\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: (0, _utils.assertOneOf)(\"public\", \"private\", \"protected\"),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    parameter: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"AssignmentPattern\")\n    },\n    override: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.functionDeclarationCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: Object.assign({}, (0, _core.classMethodOrDeclareMethodCommon)(), tSFunctionTypeAnnotationCommon())\n});\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: (0, _utils.validateType)(\"TSEntityName\"),\n    right: (0, _utils.validateType)(\"Identifier\")\n  }\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n  [\"parameters\"]: (0, _utils.validateArrayOfType)([\"Identifier\", \"RestElement\"]),\n  [\"typeAnnotation\"]: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: signatureDeclarationCommon()\n};\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\"TSConstructSignatureDeclaration\", callConstructSignatureDeclaration);\n\nconst namedTypeElementCommon = () => ({\n  key: (0, _utils.validateType)(\"Expression\"),\n  computed: {\n    default: false\n  },\n  optional: (0, _utils.validateOptional)(bool)\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\", \"initializer\"],\n  fields: Object.assign({}, namedTypeElementCommon(), {\n    readonly: (0, _utils.validateOptional)(bool),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\"),\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeParameters\", \"parameters\", \"typeAnnotation\"],\n  fields: Object.assign({}, signatureDeclarationCommon(), namedTypeElementCommon(), {\n    kind: {\n      validate: (0, _utils.assertOneOf)(\"method\", \"get\", \"set\")\n    }\n  })\n});\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)(bool),\n    static: (0, _utils.validateOptional)(bool),\n    parameters: (0, _utils.validateArrayOfType)(\"Identifier\"),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\")\n  }\n});\nconst tsKeywordTypes = [\"TSAnyKeyword\", \"TSBooleanKeyword\", \"TSBigIntKeyword\", \"TSIntrinsicKeyword\", \"TSNeverKeyword\", \"TSNullKeyword\", \"TSNumberKeyword\", \"TSObjectKeyword\", \"TSStringKeyword\", \"TSSymbolKeyword\", \"TSUndefinedKeyword\", \"TSUnknownKeyword\", \"TSVoidKeyword\"];\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {}\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {}\n});\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameters\", \"parameters\", \"typeAnnotation\"]\n};\ndefineType(\"TSFunctionType\", Object.assign({}, fnOrCtrBase, {\n  fields: signatureDeclarationCommon()\n}));\ndefineType(\"TSConstructorType\", Object.assign({}, fnOrCtrBase, {\n  fields: Object.assign({}, signatureDeclarationCommon(), {\n    abstract: (0, _utils.validateOptional)(bool)\n  })\n}));\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeName\", \"typeParameters\"],\n  fields: {\n    typeName: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: (0, _utils.validateType)([\"Identifier\", \"TSThisType\"]),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSTypeAnnotation\"),\n    asserts: (0, _utils.validateOptional)(bool)\n  }\n});\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\"exprName\", \"typeParameters\"],\n  fields: {\n    exprName: (0, _utils.validateType)([\"TSEntityName\", \"TSImportType\"]),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: (0, _utils.validateArrayOfType)([\"TSType\", \"TSNamedTupleMember\"])\n  }\n});\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: (0, _utils.validateType)(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false\n    },\n    elementType: (0, _utils.validateType)(\"TSType\")\n  }\n});\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: (0, _utils.validateArrayOfType)(\"TSType\")\n  }\n};\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: (0, _utils.validateType)(\"TSType\"),\n    extendsType: (0, _utils.validateType)(\"TSType\"),\n    trueType: (0, _utils.validateType)(\"TSType\"),\n    falseType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\")\n  }\n});\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: (0, _utils.validate)((0, _utils.assertValueType)(\"string\")),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: (0, _utils.validateType)(\"TSType\"),\n    indexType: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    readonly: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeParameter: (0, _utils.validateType)(\"TSTypeParameter\"),\n    optional: (0, _utils.validateOptional)((0, _utils.assertOneOf)(true, false, \"+\", \"-\")),\n    typeAnnotation: (0, _utils.validateOptionalType)(\"TSType\"),\n    nameType: (0, _utils.validateOptionalType)(\"TSType\")\n  }\n});\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: function () {\n        const unaryExpression = (0, _utils.assertNodeType)(\"NumericLiteral\", \"BigIntLiteral\");\n        const unaryOperator = (0, _utils.assertOneOf)(\"-\");\n        const literal = (0, _utils.assertNodeType)(\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\", \"TemplateLiteral\");\n\n        function validator(parent, key, node) {\n          if ((0, _is.default)(\"UnaryExpression\", node)) {\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\"NumericLiteral\", \"StringLiteral\", \"BooleanLiteral\", \"BigIntLiteral\", \"TemplateLiteral\", \"UnaryExpression\"];\n        return validator;\n      }()\n    }\n  }\n});\ndefineType(\"TSExpressionWithTypeArguments\", {\n  aliases: [\"TSType\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSInterfaceDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)(\"TSExpressionWithTypeArguments\")),\n    body: (0, _utils.validateType)(\"TSInterfaceBody\")\n  }\n});\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"TSTypeElement\")\n  }\n});\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSAsExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\"),\n    typeAnnotation: (0, _utils.validateType)(\"TSType\")\n  }\n});\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: (0, _utils.validateType)(\"TSType\"),\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"members\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    const: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    members: (0, _utils.validateArrayOfType)(\"TSEnumMember\"),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    initializer: (0, _utils.validateOptionalType)(\"Expression\")\n  }\n});\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    declare: (0, _utils.validateOptional)(bool),\n    global: (0, _utils.validateOptional)(bool),\n    id: (0, _utils.validateType)([\"Identifier\", \"StringLiteral\"]),\n    body: (0, _utils.validateType)([\"TSModuleBlock\", \"TSModuleDeclaration\"])\n  }\n});\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: (0, _utils.validateArrayOfType)(\"Statement\")\n  }\n});\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"argument\", \"qualifier\", \"typeParameters\"],\n  fields: {\n    argument: (0, _utils.validateType)(\"StringLiteral\"),\n    qualifier: (0, _utils.validateOptionalType)(\"TSEntityName\"),\n    typeParameters: (0, _utils.validateOptionalType)(\"TSTypeParameterInstantiation\")\n  }\n});\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    isExport: (0, _utils.validate)(bool),\n    id: (0, _utils.validateType)(\"Identifier\"),\n    moduleReference: (0, _utils.validateType)([\"TSEntityName\", \"TSExternalModuleReference\"]),\n    importKind: {\n      validate: (0, _utils.assertOneOf)(\"type\", \"value\"),\n      optional: true\n    }\n  }\n});\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"StringLiteral\")\n  }\n});\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: (0, _utils.validateType)(\"Expression\")\n  }\n});\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: (0, _utils.validateType)(\"Identifier\")\n  }\n});\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TSType\")\n    }\n  }\n});\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSType\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"TSTypeParameter\")))\n    }\n  }\n});\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    },\n    in: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    out: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    constraint: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    },\n    default: {\n      validate: (0, _utils.assertNodeType)(\"TSType\"),\n      optional: true\n    }\n  }\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"BUILDER_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.BUILDER_KEYS;\n  }\n});\nObject.defineProperty(exports, \"DEPRECATED_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.DEPRECATED_KEYS;\n  }\n});\nObject.defineProperty(exports, \"FLIPPED_ALIAS_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.FLIPPED_ALIAS_KEYS;\n  }\n});\nObject.defineProperty(exports, \"NODE_FIELDS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_FIELDS;\n  }\n});\nObject.defineProperty(exports, \"NODE_PARENT_VALIDATIONS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.NODE_PARENT_VALIDATIONS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_ALIAS;\n  }\n});\nObject.defineProperty(exports, \"PLACEHOLDERS_FLIPPED_ALIAS\", {\n  enumerable: true,\n  get: function () {\n    return _placeholders.PLACEHOLDERS_FLIPPED_ALIAS;\n  }\n});\nexports.TYPES = void 0;\nObject.defineProperty(exports, \"VISITOR_KEYS\", {\n  enumerable: true,\n  get: function () {\n    return _utils.VISITOR_KEYS;\n  }\n});\n\nvar _toFastProperties = require(\"to-fast-properties\");\n\nrequire(\"./core\");\n\nrequire(\"./flow\");\n\nrequire(\"./jsx\");\n\nrequire(\"./misc\");\n\nrequire(\"./experimental\");\n\nrequire(\"./typescript\");\n\nvar _utils = require(\"./utils\");\n\nvar _placeholders = require(\"./placeholders\");\n\n_toFastProperties(_utils.VISITOR_KEYS);\n\n_toFastProperties(_utils.ALIAS_KEYS);\n\n_toFastProperties(_utils.FLIPPED_ALIAS_KEYS);\n\n_toFastProperties(_utils.NODE_FIELDS);\n\n_toFastProperties(_utils.BUILDER_KEYS);\n\n_toFastProperties(_utils.DEPRECATED_KEYS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_ALIAS);\n\n_toFastProperties(_placeholders.PLACEHOLDERS_FLIPPED_ALIAS);\n\nconst TYPES = [].concat(Object.keys(_utils.VISITOR_KEYS), Object.keys(_utils.FLIPPED_ALIAS_KEYS), Object.keys(_utils.DEPRECATED_KEYS));\nexports.TYPES = TYPES;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validate;\nexports.validateChild = validateChild;\nexports.validateField = validateField;\n\nvar _definitions = require(\"../definitions\");\n\nfunction validate(node, key, val) {\n  if (!node) return;\n  const fields = _definitions.NODE_FIELDS[node.type];\n  if (!fields) return;\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nfunction validateField(node, key, val, field) {\n  if (!(field != null && field.validate)) return;\n  if (field.optional && val == null) return;\n  field.validate(node, key, val);\n}\n\nfunction validateChild(node, key, val) {\n  if (val == null) return;\n  const validate = _definitions.NODE_PARENT_VALIDATIONS[val.type];\n  if (!validate) return;\n  validate(node, key, val);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateNode;\n\nvar _validate = require(\"../validators/validate\");\n\nvar _ = require(\"..\");\n\nfunction validateNode(node) {\n  const keys = _.BUILDER_KEYS[node.type];\n\n  for (const key of keys) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInstantiationExpression = exports.tsInstantiationExpression = tsInstantiationExpression;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _validateNode = require(\"../validateNode\");\n\nfunction arrayExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"ArrayExpression\",\n    elements\n  });\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction binaryExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction interpreterDirective(value) {\n  return (0, _validateNode.default)({\n    type: \"InterpreterDirective\",\n    value\n  });\n}\n\nfunction directive(value) {\n  return (0, _validateNode.default)({\n    type: \"Directive\",\n    value\n  });\n}\n\nfunction directiveLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DirectiveLiteral\",\n    value\n  });\n}\n\nfunction blockStatement(body, directives = []) {\n  return (0, _validateNode.default)({\n    type: \"BlockStatement\",\n    body,\n    directives\n  });\n}\n\nfunction breakStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"BreakStatement\",\n    label\n  });\n}\n\nfunction callExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction catchClause(param = null, body) {\n  return (0, _validateNode.default)({\n    type: \"CatchClause\",\n    param,\n    body\n  });\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return (0, _validateNode.default)({\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction continueStatement(label = null) {\n  return (0, _validateNode.default)({\n    type: \"ContinueStatement\",\n    label\n  });\n}\n\nfunction debuggerStatement() {\n  return {\n    type: \"DebuggerStatement\"\n  };\n}\n\nfunction doWhileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"DoWhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction emptyStatement() {\n  return {\n    type: \"EmptyStatement\"\n  };\n}\n\nfunction expressionStatement(expression) {\n  return (0, _validateNode.default)({\n    type: \"ExpressionStatement\",\n    expression\n  });\n}\n\nfunction file(program, comments = null, tokens = null) {\n  return (0, _validateNode.default)({\n    type: \"File\",\n    program,\n    comments,\n    tokens\n  });\n}\n\nfunction forInStatement(left, right, body) {\n  return (0, _validateNode.default)({\n    type: \"ForInStatement\",\n    left,\n    right,\n    body\n  });\n}\n\nfunction forStatement(init = null, test = null, update = null, body) {\n  return (0, _validateNode.default)({\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body\n  });\n}\n\nfunction functionDeclaration(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction functionExpression(id = null, params, body, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async\n  });\n}\n\nfunction identifier(name) {\n  return (0, _validateNode.default)({\n    type: \"Identifier\",\n    name\n  });\n}\n\nfunction ifStatement(test, consequent, alternate = null) {\n  return (0, _validateNode.default)({\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate\n  });\n}\n\nfunction labeledStatement(label, body) {\n  return (0, _validateNode.default)({\n    type: \"LabeledStatement\",\n    label,\n    body\n  });\n}\n\nfunction stringLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteral\",\n    value\n  });\n}\n\nfunction numericLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"NumericLiteral\",\n    value\n  });\n}\n\nfunction nullLiteral() {\n  return {\n    type: \"NullLiteral\"\n  };\n}\n\nfunction booleanLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteral\",\n    value\n  });\n}\n\nfunction regExpLiteral(pattern, flags = \"\") {\n  return (0, _validateNode.default)({\n    type: \"RegExpLiteral\",\n    pattern,\n    flags\n  });\n}\n\nfunction logicalExpression(operator, left, right) {\n  return (0, _validateNode.default)({\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right\n  });\n}\n\nfunction memberExpression(object, property, computed = false, optional = null) {\n  return (0, _validateNode.default)({\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction newExpression(callee, _arguments) {\n  return (0, _validateNode.default)({\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments\n  });\n}\n\nfunction program(body, directives = [], sourceType = \"script\", interpreter = null) {\n  return (0, _validateNode.default)({\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n    sourceFile: null\n  });\n}\n\nfunction objectExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectExpression\",\n    properties\n  });\n}\n\nfunction objectMethod(kind = \"method\", key, params, body, computed = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async\n  });\n}\n\nfunction objectProperty(key, value, computed = false, shorthand = false, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators\n  });\n}\n\nfunction restElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"RestElement\",\n    argument\n  });\n}\n\nfunction returnStatement(argument = null) {\n  return (0, _validateNode.default)({\n    type: \"ReturnStatement\",\n    argument\n  });\n}\n\nfunction sequenceExpression(expressions) {\n  return (0, _validateNode.default)({\n    type: \"SequenceExpression\",\n    expressions\n  });\n}\n\nfunction parenthesizedExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"ParenthesizedExpression\",\n    expression\n  });\n}\n\nfunction switchCase(test = null, consequent) {\n  return (0, _validateNode.default)({\n    type: \"SwitchCase\",\n    test,\n    consequent\n  });\n}\n\nfunction switchStatement(discriminant, cases) {\n  return (0, _validateNode.default)({\n    type: \"SwitchStatement\",\n    discriminant,\n    cases\n  });\n}\n\nfunction thisExpression() {\n  return {\n    type: \"ThisExpression\"\n  };\n}\n\nfunction throwStatement(argument) {\n  return (0, _validateNode.default)({\n    type: \"ThrowStatement\",\n    argument\n  });\n}\n\nfunction tryStatement(block, handler = null, finalizer = null) {\n  return (0, _validateNode.default)({\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer\n  });\n}\n\nfunction unaryExpression(operator, argument, prefix = true) {\n  return (0, _validateNode.default)({\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction updateExpression(operator, argument, prefix = false) {\n  return (0, _validateNode.default)({\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix\n  });\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclaration\",\n    kind,\n    declarations\n  });\n}\n\nfunction variableDeclarator(id, init = null) {\n  return (0, _validateNode.default)({\n    type: \"VariableDeclarator\",\n    id,\n    init\n  });\n}\n\nfunction whileStatement(test, body) {\n  return (0, _validateNode.default)({\n    type: \"WhileStatement\",\n    test,\n    body\n  });\n}\n\nfunction withStatement(object, body) {\n  return (0, _validateNode.default)({\n    type: \"WithStatement\",\n    object,\n    body\n  });\n}\n\nfunction assignmentPattern(left, right) {\n  return (0, _validateNode.default)({\n    type: \"AssignmentPattern\",\n    left,\n    right\n  });\n}\n\nfunction arrayPattern(elements) {\n  return (0, _validateNode.default)({\n    type: \"ArrayPattern\",\n    elements\n  });\n}\n\nfunction arrowFunctionExpression(params, body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null\n  });\n}\n\nfunction classBody(body) {\n  return (0, _validateNode.default)({\n    type: \"ClassBody\",\n    body\n  });\n}\n\nfunction classExpression(id = null, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction classDeclaration(id, superClass = null, body, decorators = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators\n  });\n}\n\nfunction exportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"ExportAllDeclaration\",\n    source\n  });\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultDeclaration\",\n    declaration\n  });\n}\n\nfunction exportNamedDeclaration(declaration = null, specifiers = [], source = null) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction exportSpecifier(local, exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportSpecifier\",\n    local,\n    exported\n  });\n}\n\nfunction forOfStatement(left, right, body, _await = false) {\n  return (0, _validateNode.default)({\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await\n  });\n}\n\nfunction importDeclaration(specifiers, source) {\n  return (0, _validateNode.default)({\n    type: \"ImportDeclaration\",\n    specifiers,\n    source\n  });\n}\n\nfunction importDefaultSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportDefaultSpecifier\",\n    local\n  });\n}\n\nfunction importNamespaceSpecifier(local) {\n  return (0, _validateNode.default)({\n    type: \"ImportNamespaceSpecifier\",\n    local\n  });\n}\n\nfunction importSpecifier(local, imported) {\n  return (0, _validateNode.default)({\n    type: \"ImportSpecifier\",\n    local,\n    imported\n  });\n}\n\nfunction metaProperty(meta, property) {\n  return (0, _validateNode.default)({\n    type: \"MetaProperty\",\n    meta,\n    property\n  });\n}\n\nfunction classMethod(kind = \"method\", key, params, body, computed = false, _static = false, generator = false, async = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async\n  });\n}\n\nfunction objectPattern(properties) {\n  return (0, _validateNode.default)({\n    type: \"ObjectPattern\",\n    properties\n  });\n}\n\nfunction spreadElement(argument) {\n  return (0, _validateNode.default)({\n    type: \"SpreadElement\",\n    argument\n  });\n}\n\nfunction _super() {\n  return {\n    type: \"Super\"\n  };\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return (0, _validateNode.default)({\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi\n  });\n}\n\nfunction templateElement(value, tail = false) {\n  return (0, _validateNode.default)({\n    type: \"TemplateElement\",\n    value,\n    tail\n  });\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return (0, _validateNode.default)({\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions\n  });\n}\n\nfunction yieldExpression(argument = null, delegate = false) {\n  return (0, _validateNode.default)({\n    type: \"YieldExpression\",\n    argument,\n    delegate\n  });\n}\n\nfunction awaitExpression(argument) {\n  return (0, _validateNode.default)({\n    type: \"AwaitExpression\",\n    argument\n  });\n}\n\nfunction _import() {\n  return {\n    type: \"Import\"\n  };\n}\n\nfunction bigIntLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"BigIntLiteral\",\n    value\n  });\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportNamespaceSpecifier\",\n    exported\n  });\n}\n\nfunction optionalMemberExpression(object, property, computed = false, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional\n  });\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return (0, _validateNode.default)({\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional\n  });\n}\n\nfunction classProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classAccessorProperty(key, value = null, typeAnnotation = null, decorators = null, computed = false, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static\n  });\n}\n\nfunction classPrivateProperty(key, value = null, decorators = null, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static\n  });\n}\n\nfunction classPrivateMethod(kind = \"method\", key, params, body, _static = false) {\n  return (0, _validateNode.default)({\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static\n  });\n}\n\nfunction privateName(id) {\n  return (0, _validateNode.default)({\n    type: \"PrivateName\",\n    id\n  });\n}\n\nfunction staticBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"StaticBlock\",\n    body\n  });\n}\n\nfunction anyTypeAnnotation() {\n  return {\n    type: \"AnyTypeAnnotation\"\n  };\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return (0, _validateNode.default)({\n    type: \"ArrayTypeAnnotation\",\n    elementType\n  });\n}\n\nfunction booleanTypeAnnotation() {\n  return {\n    type: \"BooleanTypeAnnotation\"\n  };\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"BooleanLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return {\n    type: \"NullLiteralTypeAnnotation\"\n  };\n}\n\nfunction classImplements(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"ClassImplements\",\n    id,\n    typeParameters\n  });\n}\n\nfunction declareClass(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareFunction(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareFunction\",\n    id\n  });\n}\n\nfunction declareInterface(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction declareModule(id, body, kind = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind\n  });\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"DeclareModuleExports\",\n    typeAnnotation\n  });\n}\n\nfunction declareTypeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction declareOpaqueType(id, typeParameters = null, supertype = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype\n  });\n}\n\nfunction declareVariable(id) {\n  return (0, _validateNode.default)({\n    type: \"DeclareVariable\",\n    id\n  });\n}\n\nfunction declareExportDeclaration(declaration = null, specifiers = null, source = null) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source\n  });\n}\n\nfunction declareExportAllDeclaration(source) {\n  return (0, _validateNode.default)({\n    type: \"DeclareExportAllDeclaration\",\n    source\n  });\n}\n\nfunction declaredPredicate(value) {\n  return (0, _validateNode.default)({\n    type: \"DeclaredPredicate\",\n    value\n  });\n}\n\nfunction existsTypeAnnotation() {\n  return {\n    type: \"ExistsTypeAnnotation\"\n  };\n}\n\nfunction functionTypeAnnotation(typeParameters = null, params, rest = null, returnType) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType\n  });\n}\n\nfunction functionTypeParam(name = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation\n  });\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters\n  });\n}\n\nfunction inferredPredicate() {\n  return {\n    type: \"InferredPredicate\"\n  };\n}\n\nfunction interfaceExtends(id, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters\n  });\n}\n\nfunction interfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction interfaceTypeAnnotation(_extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body\n  });\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"IntersectionTypeAnnotation\",\n    types\n  });\n}\n\nfunction mixedTypeAnnotation() {\n  return {\n    type: \"MixedTypeAnnotation\"\n  };\n}\n\nfunction emptyTypeAnnotation() {\n  return {\n    type: \"EmptyTypeAnnotation\"\n  };\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"NumberLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction numberTypeAnnotation() {\n  return {\n    type: \"NumberTypeAnnotation\"\n  };\n}\n\nfunction objectTypeAnnotation(properties, indexers = [], callProperties = [], internalSlots = [], exact = false) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact\n  });\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method\n  });\n}\n\nfunction objectTypeCallProperty(value) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null\n  });\n}\n\nfunction objectTypeIndexer(id = null, key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null\n  });\n}\n\nfunction objectTypeProperty(key, value, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null\n  });\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return (0, _validateNode.default)({\n    type: \"ObjectTypeSpreadProperty\",\n    argument\n  });\n}\n\nfunction opaqueType(id, typeParameters = null, supertype = null, impltype) {\n  return (0, _validateNode.default)({\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype\n  });\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return (0, _validateNode.default)({\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification\n  });\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return (0, _validateNode.default)({\n    type: \"StringLiteralTypeAnnotation\",\n    value\n  });\n}\n\nfunction stringTypeAnnotation() {\n  return {\n    type: \"StringTypeAnnotation\"\n  };\n}\n\nfunction symbolTypeAnnotation() {\n  return {\n    type: \"SymbolTypeAnnotation\"\n  };\n}\n\nfunction thisTypeAnnotation() {\n  return {\n    type: \"ThisTypeAnnotation\"\n  };\n}\n\nfunction tupleTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"TupleTypeAnnotation\",\n    types\n  });\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return (0, _validateNode.default)({\n    type: \"TypeofTypeAnnotation\",\n    argument\n  });\n}\n\nfunction typeAlias(id, typeParameters = null, right) {\n  return (0, _validateNode.default)({\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right\n  });\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction typeParameter(bound = null, _default = null, variance = null) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null\n  });\n}\n\nfunction typeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction typeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction unionTypeAnnotation(types) {\n  return (0, _validateNode.default)({\n    type: \"UnionTypeAnnotation\",\n    types\n  });\n}\n\nfunction variance(kind) {\n  return (0, _validateNode.default)({\n    type: \"Variance\",\n    kind\n  });\n}\n\nfunction voidTypeAnnotation() {\n  return {\n    type: \"VoidTypeAnnotation\"\n  };\n}\n\nfunction enumDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"EnumDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction enumBooleanBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumNumberBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumStringBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumSymbolBody(members) {\n  return (0, _validateNode.default)({\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null\n  });\n}\n\nfunction enumBooleanMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumBooleanMember\",\n    id,\n    init: null\n  });\n}\n\nfunction enumNumberMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumNumberMember\",\n    id,\n    init\n  });\n}\n\nfunction enumStringMember(id, init) {\n  return (0, _validateNode.default)({\n    type: \"EnumStringMember\",\n    id,\n    init\n  });\n}\n\nfunction enumDefaultedMember(id) {\n  return (0, _validateNode.default)({\n    type: \"EnumDefaultedMember\",\n    id\n  });\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null\n  });\n}\n\nfunction jsxAttribute(name, value = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXAttribute\",\n    name,\n    value\n  });\n}\n\nfunction jsxClosingElement(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXClosingElement\",\n    name\n  });\n}\n\nfunction jsxElement(openingElement, closingElement = null, children, selfClosing = null) {\n  return (0, _validateNode.default)({\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing\n  });\n}\n\nfunction jsxEmptyExpression() {\n  return {\n    type: \"JSXEmptyExpression\"\n  };\n}\n\nfunction jsxExpressionContainer(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXExpressionContainer\",\n    expression\n  });\n}\n\nfunction jsxSpreadChild(expression) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadChild\",\n    expression\n  });\n}\n\nfunction jsxIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"JSXIdentifier\",\n    name\n  });\n}\n\nfunction jsxMemberExpression(object, property) {\n  return (0, _validateNode.default)({\n    type: \"JSXMemberExpression\",\n    object,\n    property\n  });\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return (0, _validateNode.default)({\n    type: \"JSXNamespacedName\",\n    namespace,\n    name\n  });\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing = false) {\n  return (0, _validateNode.default)({\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing\n  });\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return (0, _validateNode.default)({\n    type: \"JSXSpreadAttribute\",\n    argument\n  });\n}\n\nfunction jsxText(value) {\n  return (0, _validateNode.default)({\n    type: \"JSXText\",\n    value\n  });\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return (0, _validateNode.default)({\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children\n  });\n}\n\nfunction jsxOpeningFragment() {\n  return {\n    type: \"JSXOpeningFragment\"\n  };\n}\n\nfunction jsxClosingFragment() {\n  return {\n    type: \"JSXClosingFragment\"\n  };\n}\n\nfunction noop() {\n  return {\n    type: \"Noop\"\n  };\n}\n\nfunction placeholder(expectedNode, name) {\n  return (0, _validateNode.default)({\n    type: \"Placeholder\",\n    expectedNode,\n    name\n  });\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return (0, _validateNode.default)({\n    type: \"V8IntrinsicIdentifier\",\n    name\n  });\n}\n\nfunction argumentPlaceholder() {\n  return {\n    type: \"ArgumentPlaceholder\"\n  };\n}\n\nfunction bindExpression(object, callee) {\n  return (0, _validateNode.default)({\n    type: \"BindExpression\",\n    object,\n    callee\n  });\n}\n\nfunction importAttribute(key, value) {\n  return (0, _validateNode.default)({\n    type: \"ImportAttribute\",\n    key,\n    value\n  });\n}\n\nfunction decorator(expression) {\n  return (0, _validateNode.default)({\n    type: \"Decorator\",\n    expression\n  });\n}\n\nfunction doExpression(body, async = false) {\n  return (0, _validateNode.default)({\n    type: \"DoExpression\",\n    body,\n    async\n  });\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return (0, _validateNode.default)({\n    type: \"ExportDefaultSpecifier\",\n    exported\n  });\n}\n\nfunction recordExpression(properties) {\n  return (0, _validateNode.default)({\n    type: \"RecordExpression\",\n    properties\n  });\n}\n\nfunction tupleExpression(elements = []) {\n  return (0, _validateNode.default)({\n    type: \"TupleExpression\",\n    elements\n  });\n}\n\nfunction decimalLiteral(value) {\n  return (0, _validateNode.default)({\n    type: \"DecimalLiteral\",\n    value\n  });\n}\n\nfunction moduleExpression(body) {\n  return (0, _validateNode.default)({\n    type: \"ModuleExpression\",\n    body\n  });\n}\n\nfunction topicReference() {\n  return {\n    type: \"TopicReference\"\n  };\n}\n\nfunction pipelineTopicExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"PipelineTopicExpression\",\n    expression\n  });\n}\n\nfunction pipelineBareFunction(callee) {\n  return (0, _validateNode.default)({\n    type: \"PipelineBareFunction\",\n    callee\n  });\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return {\n    type: \"PipelinePrimaryTopicReference\"\n  };\n}\n\nfunction tsParameterProperty(parameter) {\n  return (0, _validateNode.default)({\n    type: \"TSParameterProperty\",\n    parameter\n  });\n}\n\nfunction tsDeclareFunction(id = null, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsDeclareMethod(decorators = null, key, typeParameters = null, params, returnType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType\n  });\n}\n\nfunction tsQualifiedName(left, right) {\n  return (0, _validateNode.default)({\n    type: \"TSQualifiedName\",\n    left,\n    right\n  });\n}\n\nfunction tsCallSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsPropertySignature(key, typeAnnotation = null, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n    initializer,\n    kind: null\n  });\n}\n\nfunction tsMethodSignature(key, typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null\n  });\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsAnyKeyword() {\n  return {\n    type: \"TSAnyKeyword\"\n  };\n}\n\nfunction tsBooleanKeyword() {\n  return {\n    type: \"TSBooleanKeyword\"\n  };\n}\n\nfunction tsBigIntKeyword() {\n  return {\n    type: \"TSBigIntKeyword\"\n  };\n}\n\nfunction tsIntrinsicKeyword() {\n  return {\n    type: \"TSIntrinsicKeyword\"\n  };\n}\n\nfunction tsNeverKeyword() {\n  return {\n    type: \"TSNeverKeyword\"\n  };\n}\n\nfunction tsNullKeyword() {\n  return {\n    type: \"TSNullKeyword\"\n  };\n}\n\nfunction tsNumberKeyword() {\n  return {\n    type: \"TSNumberKeyword\"\n  };\n}\n\nfunction tsObjectKeyword() {\n  return {\n    type: \"TSObjectKeyword\"\n  };\n}\n\nfunction tsStringKeyword() {\n  return {\n    type: \"TSStringKeyword\"\n  };\n}\n\nfunction tsSymbolKeyword() {\n  return {\n    type: \"TSSymbolKeyword\"\n  };\n}\n\nfunction tsUndefinedKeyword() {\n  return {\n    type: \"TSUndefinedKeyword\"\n  };\n}\n\nfunction tsUnknownKeyword() {\n  return {\n    type: \"TSUnknownKeyword\"\n  };\n}\n\nfunction tsVoidKeyword() {\n  return {\n    type: \"TSVoidKeyword\"\n  };\n}\n\nfunction tsThisType() {\n  return {\n    type: \"TSThisType\"\n  };\n}\n\nfunction tsFunctionType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsConstructorType(typeParameters = null, parameters, typeAnnotation = null) {\n  return (0, _validateNode.default)({\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeReference(typeName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters\n  });\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation = null, asserts = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts\n  });\n}\n\nfunction tsTypeQuery(exprName, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters\n  });\n}\n\nfunction tsTypeLiteral(members) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeLiteral\",\n    members\n  });\n}\n\nfunction tsArrayType(elementType) {\n  return (0, _validateNode.default)({\n    type: \"TSArrayType\",\n    elementType\n  });\n}\n\nfunction tsTupleType(elementTypes) {\n  return (0, _validateNode.default)({\n    type: \"TSTupleType\",\n    elementTypes\n  });\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSOptionalType\",\n    typeAnnotation\n  });\n}\n\nfunction tsRestType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSRestType\",\n    typeAnnotation\n  });\n}\n\nfunction tsNamedTupleMember(label, elementType, optional = false) {\n  return (0, _validateNode.default)({\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional\n  });\n}\n\nfunction tsUnionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSUnionType\",\n    types\n  });\n}\n\nfunction tsIntersectionType(types) {\n  return (0, _validateNode.default)({\n    type: \"TSIntersectionType\",\n    types\n  });\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return (0, _validateNode.default)({\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType\n  });\n}\n\nfunction tsInferType(typeParameter) {\n  return (0, _validateNode.default)({\n    type: \"TSInferType\",\n    typeParameter\n  });\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSParenthesizedType\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null\n  });\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return (0, _validateNode.default)({\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType\n  });\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation = null, nameType = null) {\n  return (0, _validateNode.default)({\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType\n  });\n}\n\nfunction tsLiteralType(literal) {\n  return (0, _validateNode.default)({\n    type: \"TSLiteralType\",\n    literal\n  });\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters = null, _extends = null, body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body\n  });\n}\n\nfunction tsInterfaceBody(body) {\n  return (0, _validateNode.default)({\n    type: \"TSInterfaceBody\",\n    body\n  });\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters = null, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation\n  });\n}\n\nfunction tsInstantiationExpression(expression, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters\n  });\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation\n  });\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression\n  });\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumDeclaration\",\n    id,\n    members\n  });\n}\n\nfunction tsEnumMember(id, initializer = null) {\n  return (0, _validateNode.default)({\n    type: \"TSEnumMember\",\n    id,\n    initializer\n  });\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleDeclaration\",\n    id,\n    body\n  });\n}\n\nfunction tsModuleBlock(body) {\n  return (0, _validateNode.default)({\n    type: \"TSModuleBlock\",\n    body\n  });\n}\n\nfunction tsImportType(argument, qualifier = null, typeParameters = null) {\n  return (0, _validateNode.default)({\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters\n  });\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return (0, _validateNode.default)({\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null\n  });\n}\n\nfunction tsExternalModuleReference(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExternalModuleReference\",\n    expression\n  });\n}\n\nfunction tsNonNullExpression(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSNonNullExpression\",\n    expression\n  });\n}\n\nfunction tsExportAssignment(expression) {\n  return (0, _validateNode.default)({\n    type: \"TSExportAssignment\",\n    expression\n  });\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return (0, _validateNode.default)({\n    type: \"TSNamespaceExportDeclaration\",\n    id\n  });\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeAnnotation\",\n    typeAnnotation\n  });\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterInstantiation\",\n    params\n  });\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameterDeclaration\",\n    params\n  });\n}\n\nfunction tsTypeParameter(constraint = null, _default = null, name) {\n  return (0, _validateNode.default)({\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name\n  });\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return numericLiteral(value);\n}\n\nfunction RegexLiteral(pattern, flags = \"\") {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return regExpLiteral(pattern, flags);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return restElement(argument);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return spreadElement(argument);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cleanJSXElementLiteralChild;\n\nvar _generated = require(\"../../builders/generated\");\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push((0, _generated.stringLiteral)(str));\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildChildren;\n\nvar _generated = require(\"../../validators/generated\");\n\nvar _cleanJSXElementLiteralChild = require(\"../../utils/react/cleanJSXElementLiteralChild\");\n\nfunction buildChildren(node) {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child = node.children[i];\n\n    if ((0, _generated.isJSXText)(child)) {\n      (0, _cleanJSXElementLiteralChild.default)(child, elements);\n      continue;\n    }\n\n    if ((0, _generated.isJSXExpressionContainer)(child)) child = child.expression;\n    if ((0, _generated.isJSXEmptyExpression)(child)) continue;\n    elements.push(child);\n  }\n\n  return elements;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNode;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNode(node) {\n  return !!(node && _definitions.VISITOR_KEYS[node.type]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertAccessor = assertAccessor;\nexports.assertAnyTypeAnnotation = assertAnyTypeAnnotation;\nexports.assertArgumentPlaceholder = assertArgumentPlaceholder;\nexports.assertArrayExpression = assertArrayExpression;\nexports.assertArrayPattern = assertArrayPattern;\nexports.assertArrayTypeAnnotation = assertArrayTypeAnnotation;\nexports.assertArrowFunctionExpression = assertArrowFunctionExpression;\nexports.assertAssignmentExpression = assertAssignmentExpression;\nexports.assertAssignmentPattern = assertAssignmentPattern;\nexports.assertAwaitExpression = assertAwaitExpression;\nexports.assertBigIntLiteral = assertBigIntLiteral;\nexports.assertBinary = assertBinary;\nexports.assertBinaryExpression = assertBinaryExpression;\nexports.assertBindExpression = assertBindExpression;\nexports.assertBlock = assertBlock;\nexports.assertBlockParent = assertBlockParent;\nexports.assertBlockStatement = assertBlockStatement;\nexports.assertBooleanLiteral = assertBooleanLiteral;\nexports.assertBooleanLiteralTypeAnnotation = assertBooleanLiteralTypeAnnotation;\nexports.assertBooleanTypeAnnotation = assertBooleanTypeAnnotation;\nexports.assertBreakStatement = assertBreakStatement;\nexports.assertCallExpression = assertCallExpression;\nexports.assertCatchClause = assertCatchClause;\nexports.assertClass = assertClass;\nexports.assertClassAccessorProperty = assertClassAccessorProperty;\nexports.assertClassBody = assertClassBody;\nexports.assertClassDeclaration = assertClassDeclaration;\nexports.assertClassExpression = assertClassExpression;\nexports.assertClassImplements = assertClassImplements;\nexports.assertClassMethod = assertClassMethod;\nexports.assertClassPrivateMethod = assertClassPrivateMethod;\nexports.assertClassPrivateProperty = assertClassPrivateProperty;\nexports.assertClassProperty = assertClassProperty;\nexports.assertCompletionStatement = assertCompletionStatement;\nexports.assertConditional = assertConditional;\nexports.assertConditionalExpression = assertConditionalExpression;\nexports.assertContinueStatement = assertContinueStatement;\nexports.assertDebuggerStatement = assertDebuggerStatement;\nexports.assertDecimalLiteral = assertDecimalLiteral;\nexports.assertDeclaration = assertDeclaration;\nexports.assertDeclareClass = assertDeclareClass;\nexports.assertDeclareExportAllDeclaration = assertDeclareExportAllDeclaration;\nexports.assertDeclareExportDeclaration = assertDeclareExportDeclaration;\nexports.assertDeclareFunction = assertDeclareFunction;\nexports.assertDeclareInterface = assertDeclareInterface;\nexports.assertDeclareModule = assertDeclareModule;\nexports.assertDeclareModuleExports = assertDeclareModuleExports;\nexports.assertDeclareOpaqueType = assertDeclareOpaqueType;\nexports.assertDeclareTypeAlias = assertDeclareTypeAlias;\nexports.assertDeclareVariable = assertDeclareVariable;\nexports.assertDeclaredPredicate = assertDeclaredPredicate;\nexports.assertDecorator = assertDecorator;\nexports.assertDirective = assertDirective;\nexports.assertDirectiveLiteral = assertDirectiveLiteral;\nexports.assertDoExpression = assertDoExpression;\nexports.assertDoWhileStatement = assertDoWhileStatement;\nexports.assertEmptyStatement = assertEmptyStatement;\nexports.assertEmptyTypeAnnotation = assertEmptyTypeAnnotation;\nexports.assertEnumBody = assertEnumBody;\nexports.assertEnumBooleanBody = assertEnumBooleanBody;\nexports.assertEnumBooleanMember = assertEnumBooleanMember;\nexports.assertEnumDeclaration = assertEnumDeclaration;\nexports.assertEnumDefaultedMember = assertEnumDefaultedMember;\nexports.assertEnumMember = assertEnumMember;\nexports.assertEnumNumberBody = assertEnumNumberBody;\nexports.assertEnumNumberMember = assertEnumNumberMember;\nexports.assertEnumStringBody = assertEnumStringBody;\nexports.assertEnumStringMember = assertEnumStringMember;\nexports.assertEnumSymbolBody = assertEnumSymbolBody;\nexports.assertExistsTypeAnnotation = assertExistsTypeAnnotation;\nexports.assertExportAllDeclaration = assertExportAllDeclaration;\nexports.assertExportDeclaration = assertExportDeclaration;\nexports.assertExportDefaultDeclaration = assertExportDefaultDeclaration;\nexports.assertExportDefaultSpecifier = assertExportDefaultSpecifier;\nexports.assertExportNamedDeclaration = assertExportNamedDeclaration;\nexports.assertExportNamespaceSpecifier = assertExportNamespaceSpecifier;\nexports.assertExportSpecifier = assertExportSpecifier;\nexports.assertExpression = assertExpression;\nexports.assertExpressionStatement = assertExpressionStatement;\nexports.assertExpressionWrapper = assertExpressionWrapper;\nexports.assertFile = assertFile;\nexports.assertFlow = assertFlow;\nexports.assertFlowBaseAnnotation = assertFlowBaseAnnotation;\nexports.assertFlowDeclaration = assertFlowDeclaration;\nexports.assertFlowPredicate = assertFlowPredicate;\nexports.assertFlowType = assertFlowType;\nexports.assertFor = assertFor;\nexports.assertForInStatement = assertForInStatement;\nexports.assertForOfStatement = assertForOfStatement;\nexports.assertForStatement = assertForStatement;\nexports.assertForXStatement = assertForXStatement;\nexports.assertFunction = assertFunction;\nexports.assertFunctionDeclaration = assertFunctionDeclaration;\nexports.assertFunctionExpression = assertFunctionExpression;\nexports.assertFunctionParent = assertFunctionParent;\nexports.assertFunctionTypeAnnotation = assertFunctionTypeAnnotation;\nexports.assertFunctionTypeParam = assertFunctionTypeParam;\nexports.assertGenericTypeAnnotation = assertGenericTypeAnnotation;\nexports.assertIdentifier = assertIdentifier;\nexports.assertIfStatement = assertIfStatement;\nexports.assertImmutable = assertImmutable;\nexports.assertImport = assertImport;\nexports.assertImportAttribute = assertImportAttribute;\nexports.assertImportDeclaration = assertImportDeclaration;\nexports.assertImportDefaultSpecifier = assertImportDefaultSpecifier;\nexports.assertImportNamespaceSpecifier = assertImportNamespaceSpecifier;\nexports.assertImportSpecifier = assertImportSpecifier;\nexports.assertIndexedAccessType = assertIndexedAccessType;\nexports.assertInferredPredicate = assertInferredPredicate;\nexports.assertInterfaceDeclaration = assertInterfaceDeclaration;\nexports.assertInterfaceExtends = assertInterfaceExtends;\nexports.assertInterfaceTypeAnnotation = assertInterfaceTypeAnnotation;\nexports.assertInterpreterDirective = assertInterpreterDirective;\nexports.assertIntersectionTypeAnnotation = assertIntersectionTypeAnnotation;\nexports.assertJSX = assertJSX;\nexports.assertJSXAttribute = assertJSXAttribute;\nexports.assertJSXClosingElement = assertJSXClosingElement;\nexports.assertJSXClosingFragment = assertJSXClosingFragment;\nexports.assertJSXElement = assertJSXElement;\nexports.assertJSXEmptyExpression = assertJSXEmptyExpression;\nexports.assertJSXExpressionContainer = assertJSXExpressionContainer;\nexports.assertJSXFragment = assertJSXFragment;\nexports.assertJSXIdentifier = assertJSXIdentifier;\nexports.assertJSXMemberExpression = assertJSXMemberExpression;\nexports.assertJSXNamespacedName = assertJSXNamespacedName;\nexports.assertJSXOpeningElement = assertJSXOpeningElement;\nexports.assertJSXOpeningFragment = assertJSXOpeningFragment;\nexports.assertJSXSpreadAttribute = assertJSXSpreadAttribute;\nexports.assertJSXSpreadChild = assertJSXSpreadChild;\nexports.assertJSXText = assertJSXText;\nexports.assertLVal = assertLVal;\nexports.assertLabeledStatement = assertLabeledStatement;\nexports.assertLiteral = assertLiteral;\nexports.assertLogicalExpression = assertLogicalExpression;\nexports.assertLoop = assertLoop;\nexports.assertMemberExpression = assertMemberExpression;\nexports.assertMetaProperty = assertMetaProperty;\nexports.assertMethod = assertMethod;\nexports.assertMiscellaneous = assertMiscellaneous;\nexports.assertMixedTypeAnnotation = assertMixedTypeAnnotation;\nexports.assertModuleDeclaration = assertModuleDeclaration;\nexports.assertModuleExpression = assertModuleExpression;\nexports.assertModuleSpecifier = assertModuleSpecifier;\nexports.assertNewExpression = assertNewExpression;\nexports.assertNoop = assertNoop;\nexports.assertNullLiteral = assertNullLiteral;\nexports.assertNullLiteralTypeAnnotation = assertNullLiteralTypeAnnotation;\nexports.assertNullableTypeAnnotation = assertNullableTypeAnnotation;\nexports.assertNumberLiteral = assertNumberLiteral;\nexports.assertNumberLiteralTypeAnnotation = assertNumberLiteralTypeAnnotation;\nexports.assertNumberTypeAnnotation = assertNumberTypeAnnotation;\nexports.assertNumericLiteral = assertNumericLiteral;\nexports.assertObjectExpression = assertObjectExpression;\nexports.assertObjectMember = assertObjectMember;\nexports.assertObjectMethod = assertObjectMethod;\nexports.assertObjectPattern = assertObjectPattern;\nexports.assertObjectProperty = assertObjectProperty;\nexports.assertObjectTypeAnnotation = assertObjectTypeAnnotation;\nexports.assertObjectTypeCallProperty = assertObjectTypeCallProperty;\nexports.assertObjectTypeIndexer = assertObjectTypeIndexer;\nexports.assertObjectTypeInternalSlot = assertObjectTypeInternalSlot;\nexports.assertObjectTypeProperty = assertObjectTypeProperty;\nexports.assertObjectTypeSpreadProperty = assertObjectTypeSpreadProperty;\nexports.assertOpaqueType = assertOpaqueType;\nexports.assertOptionalCallExpression = assertOptionalCallExpression;\nexports.assertOptionalIndexedAccessType = assertOptionalIndexedAccessType;\nexports.assertOptionalMemberExpression = assertOptionalMemberExpression;\nexports.assertParenthesizedExpression = assertParenthesizedExpression;\nexports.assertPattern = assertPattern;\nexports.assertPatternLike = assertPatternLike;\nexports.assertPipelineBareFunction = assertPipelineBareFunction;\nexports.assertPipelinePrimaryTopicReference = assertPipelinePrimaryTopicReference;\nexports.assertPipelineTopicExpression = assertPipelineTopicExpression;\nexports.assertPlaceholder = assertPlaceholder;\nexports.assertPrivate = assertPrivate;\nexports.assertPrivateName = assertPrivateName;\nexports.assertProgram = assertProgram;\nexports.assertProperty = assertProperty;\nexports.assertPureish = assertPureish;\nexports.assertQualifiedTypeIdentifier = assertQualifiedTypeIdentifier;\nexports.assertRecordExpression = assertRecordExpression;\nexports.assertRegExpLiteral = assertRegExpLiteral;\nexports.assertRegexLiteral = assertRegexLiteral;\nexports.assertRestElement = assertRestElement;\nexports.assertRestProperty = assertRestProperty;\nexports.assertReturnStatement = assertReturnStatement;\nexports.assertScopable = assertScopable;\nexports.assertSequenceExpression = assertSequenceExpression;\nexports.assertSpreadElement = assertSpreadElement;\nexports.assertSpreadProperty = assertSpreadProperty;\nexports.assertStandardized = assertStandardized;\nexports.assertStatement = assertStatement;\nexports.assertStaticBlock = assertStaticBlock;\nexports.assertStringLiteral = assertStringLiteral;\nexports.assertStringLiteralTypeAnnotation = assertStringLiteralTypeAnnotation;\nexports.assertStringTypeAnnotation = assertStringTypeAnnotation;\nexports.assertSuper = assertSuper;\nexports.assertSwitchCase = assertSwitchCase;\nexports.assertSwitchStatement = assertSwitchStatement;\nexports.assertSymbolTypeAnnotation = assertSymbolTypeAnnotation;\nexports.assertTSAnyKeyword = assertTSAnyKeyword;\nexports.assertTSArrayType = assertTSArrayType;\nexports.assertTSAsExpression = assertTSAsExpression;\nexports.assertTSBaseType = assertTSBaseType;\nexports.assertTSBigIntKeyword = assertTSBigIntKeyword;\nexports.assertTSBooleanKeyword = assertTSBooleanKeyword;\nexports.assertTSCallSignatureDeclaration = assertTSCallSignatureDeclaration;\nexports.assertTSConditionalType = assertTSConditionalType;\nexports.assertTSConstructSignatureDeclaration = assertTSConstructSignatureDeclaration;\nexports.assertTSConstructorType = assertTSConstructorType;\nexports.assertTSDeclareFunction = assertTSDeclareFunction;\nexports.assertTSDeclareMethod = assertTSDeclareMethod;\nexports.assertTSEntityName = assertTSEntityName;\nexports.assertTSEnumDeclaration = assertTSEnumDeclaration;\nexports.assertTSEnumMember = assertTSEnumMember;\nexports.assertTSExportAssignment = assertTSExportAssignment;\nexports.assertTSExpressionWithTypeArguments = assertTSExpressionWithTypeArguments;\nexports.assertTSExternalModuleReference = assertTSExternalModuleReference;\nexports.assertTSFunctionType = assertTSFunctionType;\nexports.assertTSImportEqualsDeclaration = assertTSImportEqualsDeclaration;\nexports.assertTSImportType = assertTSImportType;\nexports.assertTSIndexSignature = assertTSIndexSignature;\nexports.assertTSIndexedAccessType = assertTSIndexedAccessType;\nexports.assertTSInferType = assertTSInferType;\nexports.assertTSInstantiationExpression = assertTSInstantiationExpression;\nexports.assertTSInterfaceBody = assertTSInterfaceBody;\nexports.assertTSInterfaceDeclaration = assertTSInterfaceDeclaration;\nexports.assertTSIntersectionType = assertTSIntersectionType;\nexports.assertTSIntrinsicKeyword = assertTSIntrinsicKeyword;\nexports.assertTSLiteralType = assertTSLiteralType;\nexports.assertTSMappedType = assertTSMappedType;\nexports.assertTSMethodSignature = assertTSMethodSignature;\nexports.assertTSModuleBlock = assertTSModuleBlock;\nexports.assertTSModuleDeclaration = assertTSModuleDeclaration;\nexports.assertTSNamedTupleMember = assertTSNamedTupleMember;\nexports.assertTSNamespaceExportDeclaration = assertTSNamespaceExportDeclaration;\nexports.assertTSNeverKeyword = assertTSNeverKeyword;\nexports.assertTSNonNullExpression = assertTSNonNullExpression;\nexports.assertTSNullKeyword = assertTSNullKeyword;\nexports.assertTSNumberKeyword = assertTSNumberKeyword;\nexports.assertTSObjectKeyword = assertTSObjectKeyword;\nexports.assertTSOptionalType = assertTSOptionalType;\nexports.assertTSParameterProperty = assertTSParameterProperty;\nexports.assertTSParenthesizedType = assertTSParenthesizedType;\nexports.assertTSPropertySignature = assertTSPropertySignature;\nexports.assertTSQualifiedName = assertTSQualifiedName;\nexports.assertTSRestType = assertTSRestType;\nexports.assertTSStringKeyword = assertTSStringKeyword;\nexports.assertTSSymbolKeyword = assertTSSymbolKeyword;\nexports.assertTSThisType = assertTSThisType;\nexports.assertTSTupleType = assertTSTupleType;\nexports.assertTSType = assertTSType;\nexports.assertTSTypeAliasDeclaration = assertTSTypeAliasDeclaration;\nexports.assertTSTypeAnnotation = assertTSTypeAnnotation;\nexports.assertTSTypeAssertion = assertTSTypeAssertion;\nexports.assertTSTypeElement = assertTSTypeElement;\nexports.assertTSTypeLiteral = assertTSTypeLiteral;\nexports.assertTSTypeOperator = assertTSTypeOperator;\nexports.assertTSTypeParameter = assertTSTypeParameter;\nexports.assertTSTypeParameterDeclaration = assertTSTypeParameterDeclaration;\nexports.assertTSTypeParameterInstantiation = assertTSTypeParameterInstantiation;\nexports.assertTSTypePredicate = assertTSTypePredicate;\nexports.assertTSTypeQuery = assertTSTypeQuery;\nexports.assertTSTypeReference = assertTSTypeReference;\nexports.assertTSUndefinedKeyword = assertTSUndefinedKeyword;\nexports.assertTSUnionType = assertTSUnionType;\nexports.assertTSUnknownKeyword = assertTSUnknownKeyword;\nexports.assertTSVoidKeyword = assertTSVoidKeyword;\nexports.assertTaggedTemplateExpression = assertTaggedTemplateExpression;\nexports.assertTemplateElement = assertTemplateElement;\nexports.assertTemplateLiteral = assertTemplateLiteral;\nexports.assertTerminatorless = assertTerminatorless;\nexports.assertThisExpression = assertThisExpression;\nexports.assertThisTypeAnnotation = assertThisTypeAnnotation;\nexports.assertThrowStatement = assertThrowStatement;\nexports.assertTopicReference = assertTopicReference;\nexports.assertTryStatement = assertTryStatement;\nexports.assertTupleExpression = assertTupleExpression;\nexports.assertTupleTypeAnnotation = assertTupleTypeAnnotation;\nexports.assertTypeAlias = assertTypeAlias;\nexports.assertTypeAnnotation = assertTypeAnnotation;\nexports.assertTypeCastExpression = assertTypeCastExpression;\nexports.assertTypeParameter = assertTypeParameter;\nexports.assertTypeParameterDeclaration = assertTypeParameterDeclaration;\nexports.assertTypeParameterInstantiation = assertTypeParameterInstantiation;\nexports.assertTypeScript = assertTypeScript;\nexports.assertTypeofTypeAnnotation = assertTypeofTypeAnnotation;\nexports.assertUnaryExpression = assertUnaryExpression;\nexports.assertUnaryLike = assertUnaryLike;\nexports.assertUnionTypeAnnotation = assertUnionTypeAnnotation;\nexports.assertUpdateExpression = assertUpdateExpression;\nexports.assertUserWhitespacable = assertUserWhitespacable;\nexports.assertV8IntrinsicIdentifier = assertV8IntrinsicIdentifier;\nexports.assertVariableDeclaration = assertVariableDeclaration;\nexports.assertVariableDeclarator = assertVariableDeclarator;\nexports.assertVariance = assertVariance;\nexports.assertVoidTypeAnnotation = assertVoidTypeAnnotation;\nexports.assertWhile = assertWhile;\nexports.assertWhileStatement = assertWhileStatement;\nexports.assertWithStatement = assertWithStatement;\nexports.assertYieldExpression = assertYieldExpression;\n\nvar _is = require(\"../../validators/is\");\n\nfunction assert(type, node, opts) {\n  if (!(0, _is.default)(type, node, opts)) {\n    throw new Error(`Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` + `but instead got \"${node.type}\".`);\n  }\n}\n\nfunction assertArrayExpression(node, opts) {\n  assert(\"ArrayExpression\", node, opts);\n}\n\nfunction assertAssignmentExpression(node, opts) {\n  assert(\"AssignmentExpression\", node, opts);\n}\n\nfunction assertBinaryExpression(node, opts) {\n  assert(\"BinaryExpression\", node, opts);\n}\n\nfunction assertInterpreterDirective(node, opts) {\n  assert(\"InterpreterDirective\", node, opts);\n}\n\nfunction assertDirective(node, opts) {\n  assert(\"Directive\", node, opts);\n}\n\nfunction assertDirectiveLiteral(node, opts) {\n  assert(\"DirectiveLiteral\", node, opts);\n}\n\nfunction assertBlockStatement(node, opts) {\n  assert(\"BlockStatement\", node, opts);\n}\n\nfunction assertBreakStatement(node, opts) {\n  assert(\"BreakStatement\", node, opts);\n}\n\nfunction assertCallExpression(node, opts) {\n  assert(\"CallExpression\", node, opts);\n}\n\nfunction assertCatchClause(node, opts) {\n  assert(\"CatchClause\", node, opts);\n}\n\nfunction assertConditionalExpression(node, opts) {\n  assert(\"ConditionalExpression\", node, opts);\n}\n\nfunction assertContinueStatement(node, opts) {\n  assert(\"ContinueStatement\", node, opts);\n}\n\nfunction assertDebuggerStatement(node, opts) {\n  assert(\"DebuggerStatement\", node, opts);\n}\n\nfunction assertDoWhileStatement(node, opts) {\n  assert(\"DoWhileStatement\", node, opts);\n}\n\nfunction assertEmptyStatement(node, opts) {\n  assert(\"EmptyStatement\", node, opts);\n}\n\nfunction assertExpressionStatement(node, opts) {\n  assert(\"ExpressionStatement\", node, opts);\n}\n\nfunction assertFile(node, opts) {\n  assert(\"File\", node, opts);\n}\n\nfunction assertForInStatement(node, opts) {\n  assert(\"ForInStatement\", node, opts);\n}\n\nfunction assertForStatement(node, opts) {\n  assert(\"ForStatement\", node, opts);\n}\n\nfunction assertFunctionDeclaration(node, opts) {\n  assert(\"FunctionDeclaration\", node, opts);\n}\n\nfunction assertFunctionExpression(node, opts) {\n  assert(\"FunctionExpression\", node, opts);\n}\n\nfunction assertIdentifier(node, opts) {\n  assert(\"Identifier\", node, opts);\n}\n\nfunction assertIfStatement(node, opts) {\n  assert(\"IfStatement\", node, opts);\n}\n\nfunction assertLabeledStatement(node, opts) {\n  assert(\"LabeledStatement\", node, opts);\n}\n\nfunction assertStringLiteral(node, opts) {\n  assert(\"StringLiteral\", node, opts);\n}\n\nfunction assertNumericLiteral(node, opts) {\n  assert(\"NumericLiteral\", node, opts);\n}\n\nfunction assertNullLiteral(node, opts) {\n  assert(\"NullLiteral\", node, opts);\n}\n\nfunction assertBooleanLiteral(node, opts) {\n  assert(\"BooleanLiteral\", node, opts);\n}\n\nfunction assertRegExpLiteral(node, opts) {\n  assert(\"RegExpLiteral\", node, opts);\n}\n\nfunction assertLogicalExpression(node, opts) {\n  assert(\"LogicalExpression\", node, opts);\n}\n\nfunction assertMemberExpression(node, opts) {\n  assert(\"MemberExpression\", node, opts);\n}\n\nfunction assertNewExpression(node, opts) {\n  assert(\"NewExpression\", node, opts);\n}\n\nfunction assertProgram(node, opts) {\n  assert(\"Program\", node, opts);\n}\n\nfunction assertObjectExpression(node, opts) {\n  assert(\"ObjectExpression\", node, opts);\n}\n\nfunction assertObjectMethod(node, opts) {\n  assert(\"ObjectMethod\", node, opts);\n}\n\nfunction assertObjectProperty(node, opts) {\n  assert(\"ObjectProperty\", node, opts);\n}\n\nfunction assertRestElement(node, opts) {\n  assert(\"RestElement\", node, opts);\n}\n\nfunction assertReturnStatement(node, opts) {\n  assert(\"ReturnStatement\", node, opts);\n}\n\nfunction assertSequenceExpression(node, opts) {\n  assert(\"SequenceExpression\", node, opts);\n}\n\nfunction assertParenthesizedExpression(node, opts) {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\n\nfunction assertSwitchCase(node, opts) {\n  assert(\"SwitchCase\", node, opts);\n}\n\nfunction assertSwitchStatement(node, opts) {\n  assert(\"SwitchStatement\", node, opts);\n}\n\nfunction assertThisExpression(node, opts) {\n  assert(\"ThisExpression\", node, opts);\n}\n\nfunction assertThrowStatement(node, opts) {\n  assert(\"ThrowStatement\", node, opts);\n}\n\nfunction assertTryStatement(node, opts) {\n  assert(\"TryStatement\", node, opts);\n}\n\nfunction assertUnaryExpression(node, opts) {\n  assert(\"UnaryExpression\", node, opts);\n}\n\nfunction assertUpdateExpression(node, opts) {\n  assert(\"UpdateExpression\", node, opts);\n}\n\nfunction assertVariableDeclaration(node, opts) {\n  assert(\"VariableDeclaration\", node, opts);\n}\n\nfunction assertVariableDeclarator(node, opts) {\n  assert(\"VariableDeclarator\", node, opts);\n}\n\nfunction assertWhileStatement(node, opts) {\n  assert(\"WhileStatement\", node, opts);\n}\n\nfunction assertWithStatement(node, opts) {\n  assert(\"WithStatement\", node, opts);\n}\n\nfunction assertAssignmentPattern(node, opts) {\n  assert(\"AssignmentPattern\", node, opts);\n}\n\nfunction assertArrayPattern(node, opts) {\n  assert(\"ArrayPattern\", node, opts);\n}\n\nfunction assertArrowFunctionExpression(node, opts) {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\n\nfunction assertClassBody(node, opts) {\n  assert(\"ClassBody\", node, opts);\n}\n\nfunction assertClassExpression(node, opts) {\n  assert(\"ClassExpression\", node, opts);\n}\n\nfunction assertClassDeclaration(node, opts) {\n  assert(\"ClassDeclaration\", node, opts);\n}\n\nfunction assertExportAllDeclaration(node, opts) {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\n\nfunction assertExportDefaultDeclaration(node, opts) {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\n\nfunction assertExportNamedDeclaration(node, opts) {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\n\nfunction assertExportSpecifier(node, opts) {\n  assert(\"ExportSpecifier\", node, opts);\n}\n\nfunction assertForOfStatement(node, opts) {\n  assert(\"ForOfStatement\", node, opts);\n}\n\nfunction assertImportDeclaration(node, opts) {\n  assert(\"ImportDeclaration\", node, opts);\n}\n\nfunction assertImportDefaultSpecifier(node, opts) {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\n\nfunction assertImportNamespaceSpecifier(node, opts) {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertImportSpecifier(node, opts) {\n  assert(\"ImportSpecifier\", node, opts);\n}\n\nfunction assertMetaProperty(node, opts) {\n  assert(\"MetaProperty\", node, opts);\n}\n\nfunction assertClassMethod(node, opts) {\n  assert(\"ClassMethod\", node, opts);\n}\n\nfunction assertObjectPattern(node, opts) {\n  assert(\"ObjectPattern\", node, opts);\n}\n\nfunction assertSpreadElement(node, opts) {\n  assert(\"SpreadElement\", node, opts);\n}\n\nfunction assertSuper(node, opts) {\n  assert(\"Super\", node, opts);\n}\n\nfunction assertTaggedTemplateExpression(node, opts) {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\n\nfunction assertTemplateElement(node, opts) {\n  assert(\"TemplateElement\", node, opts);\n}\n\nfunction assertTemplateLiteral(node, opts) {\n  assert(\"TemplateLiteral\", node, opts);\n}\n\nfunction assertYieldExpression(node, opts) {\n  assert(\"YieldExpression\", node, opts);\n}\n\nfunction assertAwaitExpression(node, opts) {\n  assert(\"AwaitExpression\", node, opts);\n}\n\nfunction assertImport(node, opts) {\n  assert(\"Import\", node, opts);\n}\n\nfunction assertBigIntLiteral(node, opts) {\n  assert(\"BigIntLiteral\", node, opts);\n}\n\nfunction assertExportNamespaceSpecifier(node, opts) {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\n\nfunction assertOptionalMemberExpression(node, opts) {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\n\nfunction assertOptionalCallExpression(node, opts) {\n  assert(\"OptionalCallExpression\", node, opts);\n}\n\nfunction assertClassProperty(node, opts) {\n  assert(\"ClassProperty\", node, opts);\n}\n\nfunction assertClassAccessorProperty(node, opts) {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\n\nfunction assertClassPrivateProperty(node, opts) {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\n\nfunction assertClassPrivateMethod(node, opts) {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\n\nfunction assertPrivateName(node, opts) {\n  assert(\"PrivateName\", node, opts);\n}\n\nfunction assertStaticBlock(node, opts) {\n  assert(\"StaticBlock\", node, opts);\n}\n\nfunction assertAnyTypeAnnotation(node, opts) {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\n\nfunction assertArrayTypeAnnotation(node, opts) {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanTypeAnnotation(node, opts) {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\n\nfunction assertBooleanLiteralTypeAnnotation(node, opts) {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNullLiteralTypeAnnotation(node, opts) {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertClassImplements(node, opts) {\n  assert(\"ClassImplements\", node, opts);\n}\n\nfunction assertDeclareClass(node, opts) {\n  assert(\"DeclareClass\", node, opts);\n}\n\nfunction assertDeclareFunction(node, opts) {\n  assert(\"DeclareFunction\", node, opts);\n}\n\nfunction assertDeclareInterface(node, opts) {\n  assert(\"DeclareInterface\", node, opts);\n}\n\nfunction assertDeclareModule(node, opts) {\n  assert(\"DeclareModule\", node, opts);\n}\n\nfunction assertDeclareModuleExports(node, opts) {\n  assert(\"DeclareModuleExports\", node, opts);\n}\n\nfunction assertDeclareTypeAlias(node, opts) {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\n\nfunction assertDeclareOpaqueType(node, opts) {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\n\nfunction assertDeclareVariable(node, opts) {\n  assert(\"DeclareVariable\", node, opts);\n}\n\nfunction assertDeclareExportDeclaration(node, opts) {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\n\nfunction assertDeclareExportAllDeclaration(node, opts) {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\n\nfunction assertDeclaredPredicate(node, opts) {\n  assert(\"DeclaredPredicate\", node, opts);\n}\n\nfunction assertExistsTypeAnnotation(node, opts) {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeAnnotation(node, opts) {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\n\nfunction assertFunctionTypeParam(node, opts) {\n  assert(\"FunctionTypeParam\", node, opts);\n}\n\nfunction assertGenericTypeAnnotation(node, opts) {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\n\nfunction assertInferredPredicate(node, opts) {\n  assert(\"InferredPredicate\", node, opts);\n}\n\nfunction assertInterfaceExtends(node, opts) {\n  assert(\"InterfaceExtends\", node, opts);\n}\n\nfunction assertInterfaceDeclaration(node, opts) {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\n\nfunction assertInterfaceTypeAnnotation(node, opts) {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\n\nfunction assertIntersectionTypeAnnotation(node, opts) {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\n\nfunction assertMixedTypeAnnotation(node, opts) {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\n\nfunction assertEmptyTypeAnnotation(node, opts) {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\n\nfunction assertNullableTypeAnnotation(node, opts) {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberLiteralTypeAnnotation(node, opts) {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertNumberTypeAnnotation(node, opts) {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeAnnotation(node, opts) {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\n\nfunction assertObjectTypeInternalSlot(node, opts) {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\n\nfunction assertObjectTypeCallProperty(node, opts) {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\n\nfunction assertObjectTypeIndexer(node, opts) {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\n\nfunction assertObjectTypeProperty(node, opts) {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\n\nfunction assertObjectTypeSpreadProperty(node, opts) {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\n\nfunction assertOpaqueType(node, opts) {\n  assert(\"OpaqueType\", node, opts);\n}\n\nfunction assertQualifiedTypeIdentifier(node, opts) {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\n\nfunction assertStringLiteralTypeAnnotation(node, opts) {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\n\nfunction assertStringTypeAnnotation(node, opts) {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\n\nfunction assertSymbolTypeAnnotation(node, opts) {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\n\nfunction assertThisTypeAnnotation(node, opts) {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\n\nfunction assertTupleTypeAnnotation(node, opts) {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeofTypeAnnotation(node, opts) {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\n\nfunction assertTypeAlias(node, opts) {\n  assert(\"TypeAlias\", node, opts);\n}\n\nfunction assertTypeAnnotation(node, opts) {\n  assert(\"TypeAnnotation\", node, opts);\n}\n\nfunction assertTypeCastExpression(node, opts) {\n  assert(\"TypeCastExpression\", node, opts);\n}\n\nfunction assertTypeParameter(node, opts) {\n  assert(\"TypeParameter\", node, opts);\n}\n\nfunction assertTypeParameterDeclaration(node, opts) {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTypeParameterInstantiation(node, opts) {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\n\nfunction assertUnionTypeAnnotation(node, opts) {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\n\nfunction assertVariance(node, opts) {\n  assert(\"Variance\", node, opts);\n}\n\nfunction assertVoidTypeAnnotation(node, opts) {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\n\nfunction assertEnumDeclaration(node, opts) {\n  assert(\"EnumDeclaration\", node, opts);\n}\n\nfunction assertEnumBooleanBody(node, opts) {\n  assert(\"EnumBooleanBody\", node, opts);\n}\n\nfunction assertEnumNumberBody(node, opts) {\n  assert(\"EnumNumberBody\", node, opts);\n}\n\nfunction assertEnumStringBody(node, opts) {\n  assert(\"EnumStringBody\", node, opts);\n}\n\nfunction assertEnumSymbolBody(node, opts) {\n  assert(\"EnumSymbolBody\", node, opts);\n}\n\nfunction assertEnumBooleanMember(node, opts) {\n  assert(\"EnumBooleanMember\", node, opts);\n}\n\nfunction assertEnumNumberMember(node, opts) {\n  assert(\"EnumNumberMember\", node, opts);\n}\n\nfunction assertEnumStringMember(node, opts) {\n  assert(\"EnumStringMember\", node, opts);\n}\n\nfunction assertEnumDefaultedMember(node, opts) {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\n\nfunction assertIndexedAccessType(node, opts) {\n  assert(\"IndexedAccessType\", node, opts);\n}\n\nfunction assertOptionalIndexedAccessType(node, opts) {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\n\nfunction assertJSXAttribute(node, opts) {\n  assert(\"JSXAttribute\", node, opts);\n}\n\nfunction assertJSXClosingElement(node, opts) {\n  assert(\"JSXClosingElement\", node, opts);\n}\n\nfunction assertJSXElement(node, opts) {\n  assert(\"JSXElement\", node, opts);\n}\n\nfunction assertJSXEmptyExpression(node, opts) {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\n\nfunction assertJSXExpressionContainer(node, opts) {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\n\nfunction assertJSXSpreadChild(node, opts) {\n  assert(\"JSXSpreadChild\", node, opts);\n}\n\nfunction assertJSXIdentifier(node, opts) {\n  assert(\"JSXIdentifier\", node, opts);\n}\n\nfunction assertJSXMemberExpression(node, opts) {\n  assert(\"JSXMemberExpression\", node, opts);\n}\n\nfunction assertJSXNamespacedName(node, opts) {\n  assert(\"JSXNamespacedName\", node, opts);\n}\n\nfunction assertJSXOpeningElement(node, opts) {\n  assert(\"JSXOpeningElement\", node, opts);\n}\n\nfunction assertJSXSpreadAttribute(node, opts) {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\n\nfunction assertJSXText(node, opts) {\n  assert(\"JSXText\", node, opts);\n}\n\nfunction assertJSXFragment(node, opts) {\n  assert(\"JSXFragment\", node, opts);\n}\n\nfunction assertJSXOpeningFragment(node, opts) {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\n\nfunction assertJSXClosingFragment(node, opts) {\n  assert(\"JSXClosingFragment\", node, opts);\n}\n\nfunction assertNoop(node, opts) {\n  assert(\"Noop\", node, opts);\n}\n\nfunction assertPlaceholder(node, opts) {\n  assert(\"Placeholder\", node, opts);\n}\n\nfunction assertV8IntrinsicIdentifier(node, opts) {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\n\nfunction assertArgumentPlaceholder(node, opts) {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\n\nfunction assertBindExpression(node, opts) {\n  assert(\"BindExpression\", node, opts);\n}\n\nfunction assertImportAttribute(node, opts) {\n  assert(\"ImportAttribute\", node, opts);\n}\n\nfunction assertDecorator(node, opts) {\n  assert(\"Decorator\", node, opts);\n}\n\nfunction assertDoExpression(node, opts) {\n  assert(\"DoExpression\", node, opts);\n}\n\nfunction assertExportDefaultSpecifier(node, opts) {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\n\nfunction assertRecordExpression(node, opts) {\n  assert(\"RecordExpression\", node, opts);\n}\n\nfunction assertTupleExpression(node, opts) {\n  assert(\"TupleExpression\", node, opts);\n}\n\nfunction assertDecimalLiteral(node, opts) {\n  assert(\"DecimalLiteral\", node, opts);\n}\n\nfunction assertModuleExpression(node, opts) {\n  assert(\"ModuleExpression\", node, opts);\n}\n\nfunction assertTopicReference(node, opts) {\n  assert(\"TopicReference\", node, opts);\n}\n\nfunction assertPipelineTopicExpression(node, opts) {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\n\nfunction assertPipelineBareFunction(node, opts) {\n  assert(\"PipelineBareFunction\", node, opts);\n}\n\nfunction assertPipelinePrimaryTopicReference(node, opts) {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\n\nfunction assertTSParameterProperty(node, opts) {\n  assert(\"TSParameterProperty\", node, opts);\n}\n\nfunction assertTSDeclareFunction(node, opts) {\n  assert(\"TSDeclareFunction\", node, opts);\n}\n\nfunction assertTSDeclareMethod(node, opts) {\n  assert(\"TSDeclareMethod\", node, opts);\n}\n\nfunction assertTSQualifiedName(node, opts) {\n  assert(\"TSQualifiedName\", node, opts);\n}\n\nfunction assertTSCallSignatureDeclaration(node, opts) {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSConstructSignatureDeclaration(node, opts) {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\n\nfunction assertTSPropertySignature(node, opts) {\n  assert(\"TSPropertySignature\", node, opts);\n}\n\nfunction assertTSMethodSignature(node, opts) {\n  assert(\"TSMethodSignature\", node, opts);\n}\n\nfunction assertTSIndexSignature(node, opts) {\n  assert(\"TSIndexSignature\", node, opts);\n}\n\nfunction assertTSAnyKeyword(node, opts) {\n  assert(\"TSAnyKeyword\", node, opts);\n}\n\nfunction assertTSBooleanKeyword(node, opts) {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\n\nfunction assertTSBigIntKeyword(node, opts) {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\n\nfunction assertTSIntrinsicKeyword(node, opts) {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\n\nfunction assertTSNeverKeyword(node, opts) {\n  assert(\"TSNeverKeyword\", node, opts);\n}\n\nfunction assertTSNullKeyword(node, opts) {\n  assert(\"TSNullKeyword\", node, opts);\n}\n\nfunction assertTSNumberKeyword(node, opts) {\n  assert(\"TSNumberKeyword\", node, opts);\n}\n\nfunction assertTSObjectKeyword(node, opts) {\n  assert(\"TSObjectKeyword\", node, opts);\n}\n\nfunction assertTSStringKeyword(node, opts) {\n  assert(\"TSStringKeyword\", node, opts);\n}\n\nfunction assertTSSymbolKeyword(node, opts) {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\n\nfunction assertTSUndefinedKeyword(node, opts) {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\n\nfunction assertTSUnknownKeyword(node, opts) {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\n\nfunction assertTSVoidKeyword(node, opts) {\n  assert(\"TSVoidKeyword\", node, opts);\n}\n\nfunction assertTSThisType(node, opts) {\n  assert(\"TSThisType\", node, opts);\n}\n\nfunction assertTSFunctionType(node, opts) {\n  assert(\"TSFunctionType\", node, opts);\n}\n\nfunction assertTSConstructorType(node, opts) {\n  assert(\"TSConstructorType\", node, opts);\n}\n\nfunction assertTSTypeReference(node, opts) {\n  assert(\"TSTypeReference\", node, opts);\n}\n\nfunction assertTSTypePredicate(node, opts) {\n  assert(\"TSTypePredicate\", node, opts);\n}\n\nfunction assertTSTypeQuery(node, opts) {\n  assert(\"TSTypeQuery\", node, opts);\n}\n\nfunction assertTSTypeLiteral(node, opts) {\n  assert(\"TSTypeLiteral\", node, opts);\n}\n\nfunction assertTSArrayType(node, opts) {\n  assert(\"TSArrayType\", node, opts);\n}\n\nfunction assertTSTupleType(node, opts) {\n  assert(\"TSTupleType\", node, opts);\n}\n\nfunction assertTSOptionalType(node, opts) {\n  assert(\"TSOptionalType\", node, opts);\n}\n\nfunction assertTSRestType(node, opts) {\n  assert(\"TSRestType\", node, opts);\n}\n\nfunction assertTSNamedTupleMember(node, opts) {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\n\nfunction assertTSUnionType(node, opts) {\n  assert(\"TSUnionType\", node, opts);\n}\n\nfunction assertTSIntersectionType(node, opts) {\n  assert(\"TSIntersectionType\", node, opts);\n}\n\nfunction assertTSConditionalType(node, opts) {\n  assert(\"TSConditionalType\", node, opts);\n}\n\nfunction assertTSInferType(node, opts) {\n  assert(\"TSInferType\", node, opts);\n}\n\nfunction assertTSParenthesizedType(node, opts) {\n  assert(\"TSParenthesizedType\", node, opts);\n}\n\nfunction assertTSTypeOperator(node, opts) {\n  assert(\"TSTypeOperator\", node, opts);\n}\n\nfunction assertTSIndexedAccessType(node, opts) {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\n\nfunction assertTSMappedType(node, opts) {\n  assert(\"TSMappedType\", node, opts);\n}\n\nfunction assertTSLiteralType(node, opts) {\n  assert(\"TSLiteralType\", node, opts);\n}\n\nfunction assertTSExpressionWithTypeArguments(node, opts) {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\n\nfunction assertTSInterfaceDeclaration(node, opts) {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\n\nfunction assertTSInterfaceBody(node, opts) {\n  assert(\"TSInterfaceBody\", node, opts);\n}\n\nfunction assertTSTypeAliasDeclaration(node, opts) {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\n\nfunction assertTSInstantiationExpression(node, opts) {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\n\nfunction assertTSAsExpression(node, opts) {\n  assert(\"TSAsExpression\", node, opts);\n}\n\nfunction assertTSTypeAssertion(node, opts) {\n  assert(\"TSTypeAssertion\", node, opts);\n}\n\nfunction assertTSEnumDeclaration(node, opts) {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\n\nfunction assertTSEnumMember(node, opts) {\n  assert(\"TSEnumMember\", node, opts);\n}\n\nfunction assertTSModuleDeclaration(node, opts) {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\n\nfunction assertTSModuleBlock(node, opts) {\n  assert(\"TSModuleBlock\", node, opts);\n}\n\nfunction assertTSImportType(node, opts) {\n  assert(\"TSImportType\", node, opts);\n}\n\nfunction assertTSImportEqualsDeclaration(node, opts) {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\n\nfunction assertTSExternalModuleReference(node, opts) {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\n\nfunction assertTSNonNullExpression(node, opts) {\n  assert(\"TSNonNullExpression\", node, opts);\n}\n\nfunction assertTSExportAssignment(node, opts) {\n  assert(\"TSExportAssignment\", node, opts);\n}\n\nfunction assertTSNamespaceExportDeclaration(node, opts) {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\n\nfunction assertTSTypeAnnotation(node, opts) {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\n\nfunction assertTSTypeParameterInstantiation(node, opts) {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\n\nfunction assertTSTypeParameterDeclaration(node, opts) {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\n\nfunction assertTSTypeParameter(node, opts) {\n  assert(\"TSTypeParameter\", node, opts);\n}\n\nfunction assertStandardized(node, opts) {\n  assert(\"Standardized\", node, opts);\n}\n\nfunction assertExpression(node, opts) {\n  assert(\"Expression\", node, opts);\n}\n\nfunction assertBinary(node, opts) {\n  assert(\"Binary\", node, opts);\n}\n\nfunction assertScopable(node, opts) {\n  assert(\"Scopable\", node, opts);\n}\n\nfunction assertBlockParent(node, opts) {\n  assert(\"BlockParent\", node, opts);\n}\n\nfunction assertBlock(node, opts) {\n  assert(\"Block\", node, opts);\n}\n\nfunction assertStatement(node, opts) {\n  assert(\"Statement\", node, opts);\n}\n\nfunction assertTerminatorless(node, opts) {\n  assert(\"Terminatorless\", node, opts);\n}\n\nfunction assertCompletionStatement(node, opts) {\n  assert(\"CompletionStatement\", node, opts);\n}\n\nfunction assertConditional(node, opts) {\n  assert(\"Conditional\", node, opts);\n}\n\nfunction assertLoop(node, opts) {\n  assert(\"Loop\", node, opts);\n}\n\nfunction assertWhile(node, opts) {\n  assert(\"While\", node, opts);\n}\n\nfunction assertExpressionWrapper(node, opts) {\n  assert(\"ExpressionWrapper\", node, opts);\n}\n\nfunction assertFor(node, opts) {\n  assert(\"For\", node, opts);\n}\n\nfunction assertForXStatement(node, opts) {\n  assert(\"ForXStatement\", node, opts);\n}\n\nfunction assertFunction(node, opts) {\n  assert(\"Function\", node, opts);\n}\n\nfunction assertFunctionParent(node, opts) {\n  assert(\"FunctionParent\", node, opts);\n}\n\nfunction assertPureish(node, opts) {\n  assert(\"Pureish\", node, opts);\n}\n\nfunction assertDeclaration(node, opts) {\n  assert(\"Declaration\", node, opts);\n}\n\nfunction assertPatternLike(node, opts) {\n  assert(\"PatternLike\", node, opts);\n}\n\nfunction assertLVal(node, opts) {\n  assert(\"LVal\", node, opts);\n}\n\nfunction assertTSEntityName(node, opts) {\n  assert(\"TSEntityName\", node, opts);\n}\n\nfunction assertLiteral(node, opts) {\n  assert(\"Literal\", node, opts);\n}\n\nfunction assertImmutable(node, opts) {\n  assert(\"Immutable\", node, opts);\n}\n\nfunction assertUserWhitespacable(node, opts) {\n  assert(\"UserWhitespacable\", node, opts);\n}\n\nfunction assertMethod(node, opts) {\n  assert(\"Method\", node, opts);\n}\n\nfunction assertObjectMember(node, opts) {\n  assert(\"ObjectMember\", node, opts);\n}\n\nfunction assertProperty(node, opts) {\n  assert(\"Property\", node, opts);\n}\n\nfunction assertUnaryLike(node, opts) {\n  assert(\"UnaryLike\", node, opts);\n}\n\nfunction assertPattern(node, opts) {\n  assert(\"Pattern\", node, opts);\n}\n\nfunction assertClass(node, opts) {\n  assert(\"Class\", node, opts);\n}\n\nfunction assertModuleDeclaration(node, opts) {\n  assert(\"ModuleDeclaration\", node, opts);\n}\n\nfunction assertExportDeclaration(node, opts) {\n  assert(\"ExportDeclaration\", node, opts);\n}\n\nfunction assertModuleSpecifier(node, opts) {\n  assert(\"ModuleSpecifier\", node, opts);\n}\n\nfunction assertAccessor(node, opts) {\n  assert(\"Accessor\", node, opts);\n}\n\nfunction assertPrivate(node, opts) {\n  assert(\"Private\", node, opts);\n}\n\nfunction assertFlow(node, opts) {\n  assert(\"Flow\", node, opts);\n}\n\nfunction assertFlowType(node, opts) {\n  assert(\"FlowType\", node, opts);\n}\n\nfunction assertFlowBaseAnnotation(node, opts) {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\n\nfunction assertFlowDeclaration(node, opts) {\n  assert(\"FlowDeclaration\", node, opts);\n}\n\nfunction assertFlowPredicate(node, opts) {\n  assert(\"FlowPredicate\", node, opts);\n}\n\nfunction assertEnumBody(node, opts) {\n  assert(\"EnumBody\", node, opts);\n}\n\nfunction assertEnumMember(node, opts) {\n  assert(\"EnumMember\", node, opts);\n}\n\nfunction assertJSX(node, opts) {\n  assert(\"JSX\", node, opts);\n}\n\nfunction assertMiscellaneous(node, opts) {\n  assert(\"Miscellaneous\", node, opts);\n}\n\nfunction assertTypeScript(node, opts) {\n  assert(\"TypeScript\", node, opts);\n}\n\nfunction assertTSTypeElement(node, opts) {\n  assert(\"TSTypeElement\", node, opts);\n}\n\nfunction assertTSType(node, opts) {\n  assert(\"TSType\", node, opts);\n}\n\nfunction assertTSBaseType(node, opts) {\n  assert(\"TSBaseType\", node, opts);\n}\n\nfunction assertNumberLiteral(node, opts) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\n\nfunction assertRegexLiteral(node, opts) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\n\nfunction assertRestProperty(node, opts) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  assert(\"RestProperty\", node, opts);\n}\n\nfunction assertSpreadProperty(node, opts) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../generated\");\n\nvar _default = createTypeAnnotationBasedOnTypeof;\nexports.default = _default;\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  switch (type) {\n    case \"string\":\n      return (0, _generated.stringTypeAnnotation)();\n\n    case \"number\":\n      return (0, _generated.numberTypeAnnotation)();\n\n    case \"undefined\":\n      return (0, _generated.voidTypeAnnotation)();\n\n    case \"boolean\":\n      return (0, _generated.booleanTypeAnnotation)();\n\n    case \"function\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Function\"));\n\n    case \"object\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Object\"));\n\n    case \"symbol\":\n      return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)(\"Symbol\"));\n\n    case \"bigint\":\n      return (0, _generated.anyTypeAnnotation)();\n  }\n\n  throw new Error(\"Invalid typeof value: \" + type);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isAnyTypeAnnotation)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isFlowBaseAnnotation)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isUnionTypeAnnotation)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes = nodes.concat(node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isGenericTypeAnnotation)(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createFlowUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/flow/removeTypeDuplicates\");\n\nfunction createFlowUnionType(types) {\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.unionTypeAnnotation)(flattened);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeTypeDuplicates;\n\nvar _generated = require(\"../../validators/generated\");\n\nfunction getQualifiedName(node) {\n  return (0, _generated.isIdentifier)(node) ? node.name : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\nfunction removeTypeDuplicates(nodes) {\n  const generics = new Map();\n  const bases = new Map();\n  const typeGroups = new Set();\n  const types = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if ((0, _generated.isTSAnyKeyword)(node)) {\n      return [node];\n    }\n\n    if ((0, _generated.isTSBaseType)(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if ((0, _generated.isTSUnionType)(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isTSTypeReference)(node) && node.typeParameters) {\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing = generics.get(name);\n\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTSUnionType;\n\nvar _generated = require(\"../generated\");\n\nvar _removeTypeDuplicates = require(\"../../modifications/typescript/removeTypeDuplicates\");\n\nvar _index = require(\"../../validators/generated/index\");\n\nfunction createTSUnionType(typeAnnotations) {\n  const types = typeAnnotations.map(type => {\n    return (0, _index.isTSTypeAnnotation)(type) ? type.typeAnnotation : type;\n  });\n  const flattened = (0, _removeTypeDuplicates.default)(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return (0, _generated.tsUnionType)(flattened);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.anyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArgumentPlaceholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.argumentPlaceholder;\n  }\n});\nObject.defineProperty(exports, \"ArrayExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayExpression;\n  }\n});\nObject.defineProperty(exports, \"ArrayPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayPattern;\n  }\n});\nObject.defineProperty(exports, \"ArrayTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrayTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ArrowFunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.arrowFunctionExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentExpression;\n  }\n});\nObject.defineProperty(exports, \"AssignmentPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.assignmentPattern;\n  }\n});\nObject.defineProperty(exports, \"AwaitExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.awaitExpression;\n  }\n});\nObject.defineProperty(exports, \"BigIntLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.bigIntLiteral;\n  }\n});\nObject.defineProperty(exports, \"BinaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.binaryExpression;\n  }\n});\nObject.defineProperty(exports, \"BindExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.bindExpression;\n  }\n});\nObject.defineProperty(exports, \"BlockStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.blockStatement;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteral;\n  }\n});\nObject.defineProperty(exports, \"BooleanLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BooleanTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.booleanTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"BreakStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.breakStatement;\n  }\n});\nObject.defineProperty(exports, \"CallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.callExpression;\n  }\n});\nObject.defineProperty(exports, \"CatchClause\", {\n  enumerable: true,\n  get: function () {\n    return _index.catchClause;\n  }\n});\nObject.defineProperty(exports, \"ClassAccessorProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classAccessorProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.classBody;\n  }\n});\nObject.defineProperty(exports, \"ClassDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.classDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ClassExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.classExpression;\n  }\n});\nObject.defineProperty(exports, \"ClassImplements\", {\n  enumerable: true,\n  get: function () {\n    return _index.classImplements;\n  }\n});\nObject.defineProperty(exports, \"ClassMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateMethod;\n  }\n});\nObject.defineProperty(exports, \"ClassPrivateProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classPrivateProperty;\n  }\n});\nObject.defineProperty(exports, \"ClassProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.classProperty;\n  }\n});\nObject.defineProperty(exports, \"ConditionalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.conditionalExpression;\n  }\n});\nObject.defineProperty(exports, \"ContinueStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.continueStatement;\n  }\n});\nObject.defineProperty(exports, \"DebuggerStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.debuggerStatement;\n  }\n});\nObject.defineProperty(exports, \"DecimalLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.decimalLiteral;\n  }\n});\nObject.defineProperty(exports, \"DeclareClass\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareClass;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"DeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareFunction;\n  }\n});\nObject.defineProperty(exports, \"DeclareInterface\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareInterface;\n  }\n});\nObject.defineProperty(exports, \"DeclareModule\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModule;\n  }\n});\nObject.defineProperty(exports, \"DeclareModuleExports\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareModuleExports;\n  }\n});\nObject.defineProperty(exports, \"DeclareOpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareOpaqueType;\n  }\n});\nObject.defineProperty(exports, \"DeclareTypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareTypeAlias;\n  }\n});\nObject.defineProperty(exports, \"DeclareVariable\", {\n  enumerable: true,\n  get: function () {\n    return _index.declareVariable;\n  }\n});\nObject.defineProperty(exports, \"DeclaredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.declaredPredicate;\n  }\n});\nObject.defineProperty(exports, \"Decorator\", {\n  enumerable: true,\n  get: function () {\n    return _index.decorator;\n  }\n});\nObject.defineProperty(exports, \"Directive\", {\n  enumerable: true,\n  get: function () {\n    return _index.directive;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.directiveLiteral;\n  }\n});\nObject.defineProperty(exports, \"DoExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.doExpression;\n  }\n});\nObject.defineProperty(exports, \"DoWhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.doWhileStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyStatement;\n  }\n});\nObject.defineProperty(exports, \"EmptyTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.emptyTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanBody;\n  }\n});\nObject.defineProperty(exports, \"EnumBooleanMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumBooleanMember;\n  }\n});\nObject.defineProperty(exports, \"EnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"EnumDefaultedMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumDefaultedMember;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberBody;\n  }\n});\nObject.defineProperty(exports, \"EnumNumberMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumNumberMember;\n  }\n});\nObject.defineProperty(exports, \"EnumStringBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringBody;\n  }\n});\nObject.defineProperty(exports, \"EnumStringMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumStringMember;\n  }\n});\nObject.defineProperty(exports, \"EnumSymbolBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.enumSymbolBody;\n  }\n});\nObject.defineProperty(exports, \"ExistsTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.existsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ExportAllDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportAllDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportNamedDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamedDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ExportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.exportSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ExpressionStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.expressionStatement;\n  }\n});\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function () {\n    return _index.file;\n  }\n});\nObject.defineProperty(exports, \"ForInStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forInStatement;\n  }\n});\nObject.defineProperty(exports, \"ForOfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forOfStatement;\n  }\n});\nObject.defineProperty(exports, \"ForStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.forStatement;\n  }\n});\nObject.defineProperty(exports, \"FunctionDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionDeclaration;\n  }\n});\nObject.defineProperty(exports, \"FunctionExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionExpression;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"FunctionTypeParam\", {\n  enumerable: true,\n  get: function () {\n    return _index.functionTypeParam;\n  }\n});\nObject.defineProperty(exports, \"GenericTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.genericTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.identifier;\n  }\n});\nObject.defineProperty(exports, \"IfStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.ifStatement;\n  }\n});\nObject.defineProperty(exports, \"Import\", {\n  enumerable: true,\n  get: function () {\n    return _index.import;\n  }\n});\nObject.defineProperty(exports, \"ImportAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.importAttribute;\n  }\n});\nObject.defineProperty(exports, \"ImportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDeclaration;\n  }\n});\nObject.defineProperty(exports, \"ImportDefaultSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importDefaultSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportNamespaceSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importNamespaceSpecifier;\n  }\n});\nObject.defineProperty(exports, \"ImportSpecifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.importSpecifier;\n  }\n});\nObject.defineProperty(exports, \"IndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.indexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"InferredPredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.inferredPredicate;\n  }\n});\nObject.defineProperty(exports, \"InterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"InterfaceExtends\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceExtends;\n  }\n});\nObject.defineProperty(exports, \"InterfaceTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.interfaceTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"InterpreterDirective\", {\n  enumerable: true,\n  get: function () {\n    return _index.interpreterDirective;\n  }\n});\nObject.defineProperty(exports, \"IntersectionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.intersectionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"JSXAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingElement;\n  }\n});\nObject.defineProperty(exports, \"JSXClosingFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxClosingFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxElement;\n  }\n});\nObject.defineProperty(exports, \"JSXEmptyExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxEmptyExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXExpressionContainer\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxExpressionContainer;\n  }\n});\nObject.defineProperty(exports, \"JSXFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxIdentifier;\n  }\n});\nObject.defineProperty(exports, \"JSXMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"JSXNamespacedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxNamespacedName;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningElement;\n  }\n});\nObject.defineProperty(exports, \"JSXOpeningFragment\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxOpeningFragment;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadAttribute\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadAttribute;\n  }\n});\nObject.defineProperty(exports, \"JSXSpreadChild\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxSpreadChild;\n  }\n});\nObject.defineProperty(exports, \"JSXText\", {\n  enumerable: true,\n  get: function () {\n    return _index.jsxText;\n  }\n});\nObject.defineProperty(exports, \"LabeledStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.labeledStatement;\n  }\n});\nObject.defineProperty(exports, \"LogicalExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.logicalExpression;\n  }\n});\nObject.defineProperty(exports, \"MemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.memberExpression;\n  }\n});\nObject.defineProperty(exports, \"MetaProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.metaProperty;\n  }\n});\nObject.defineProperty(exports, \"MixedTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.mixedTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ModuleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.moduleExpression;\n  }\n});\nObject.defineProperty(exports, \"NewExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.newExpression;\n  }\n});\nObject.defineProperty(exports, \"Noop\", {\n  enumerable: true,\n  get: function () {\n    return _index.noop;\n  }\n});\nObject.defineProperty(exports, \"NullLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteral;\n  }\n});\nObject.defineProperty(exports, \"NullLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NullableTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.nullableTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteral;\n  }\n});\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumberTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.numberTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"NumericLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.numericLiteral;\n  }\n});\nObject.defineProperty(exports, \"ObjectExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectExpression;\n  }\n});\nObject.defineProperty(exports, \"ObjectMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectMethod;\n  }\n});\nObject.defineProperty(exports, \"ObjectPattern\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectPattern;\n  }\n});\nObject.defineProperty(exports, \"ObjectProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeCallProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeCallProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeIndexer\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeIndexer;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeInternalSlot\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeInternalSlot;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeProperty;\n  }\n});\nObject.defineProperty(exports, \"ObjectTypeSpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.objectTypeSpreadProperty;\n  }\n});\nObject.defineProperty(exports, \"OpaqueType\", {\n  enumerable: true,\n  get: function () {\n    return _index.opaqueType;\n  }\n});\nObject.defineProperty(exports, \"OptionalCallExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalCallExpression;\n  }\n});\nObject.defineProperty(exports, \"OptionalIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"OptionalMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.optionalMemberExpression;\n  }\n});\nObject.defineProperty(exports, \"ParenthesizedExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.parenthesizedExpression;\n  }\n});\nObject.defineProperty(exports, \"PipelineBareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineBareFunction;\n  }\n});\nObject.defineProperty(exports, \"PipelinePrimaryTopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelinePrimaryTopicReference;\n  }\n});\nObject.defineProperty(exports, \"PipelineTopicExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.pipelineTopicExpression;\n  }\n});\nObject.defineProperty(exports, \"Placeholder\", {\n  enumerable: true,\n  get: function () {\n    return _index.placeholder;\n  }\n});\nObject.defineProperty(exports, \"PrivateName\", {\n  enumerable: true,\n  get: function () {\n    return _index.privateName;\n  }\n});\nObject.defineProperty(exports, \"Program\", {\n  enumerable: true,\n  get: function () {\n    return _index.program;\n  }\n});\nObject.defineProperty(exports, \"QualifiedTypeIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.qualifiedTypeIdentifier;\n  }\n});\nObject.defineProperty(exports, \"RecordExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.recordExpression;\n  }\n});\nObject.defineProperty(exports, \"RegExpLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regExpLiteral;\n  }\n});\nObject.defineProperty(exports, \"RegexLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.regexLiteral;\n  }\n});\nObject.defineProperty(exports, \"RestElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.restElement;\n  }\n});\nObject.defineProperty(exports, \"RestProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.restProperty;\n  }\n});\nObject.defineProperty(exports, \"ReturnStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.returnStatement;\n  }\n});\nObject.defineProperty(exports, \"SequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.sequenceExpression;\n  }\n});\nObject.defineProperty(exports, \"SpreadElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadElement;\n  }\n});\nObject.defineProperty(exports, \"SpreadProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.spreadProperty;\n  }\n});\nObject.defineProperty(exports, \"StaticBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.staticBlock;\n  }\n});\nObject.defineProperty(exports, \"StringLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringLiteralTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"StringTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.stringTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"Super\", {\n  enumerable: true,\n  get: function () {\n    return _index.super;\n  }\n});\nObject.defineProperty(exports, \"SwitchCase\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchCase;\n  }\n});\nObject.defineProperty(exports, \"SwitchStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.switchStatement;\n  }\n});\nObject.defineProperty(exports, \"SymbolTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.symbolTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSAnyKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAnyKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSArrayType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsArrayType;\n  }\n});\nObject.defineProperty(exports, \"TSAsExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsAsExpression;\n  }\n});\nObject.defineProperty(exports, \"TSBigIntKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBigIntKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSBooleanKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsBooleanKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSCallSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsCallSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConditionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConditionalType;\n  }\n});\nObject.defineProperty(exports, \"TSConstructSignatureDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructSignatureDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSConstructorType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsConstructorType;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareFunction\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareFunction;\n  }\n});\nObject.defineProperty(exports, \"TSDeclareMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsDeclareMethod;\n  }\n});\nObject.defineProperty(exports, \"TSEnumDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSEnumMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsEnumMember;\n  }\n});\nObject.defineProperty(exports, \"TSExportAssignment\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExportAssignment;\n  }\n});\nObject.defineProperty(exports, \"TSExpressionWithTypeArguments\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExpressionWithTypeArguments;\n  }\n});\nObject.defineProperty(exports, \"TSExternalModuleReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsExternalModuleReference;\n  }\n});\nObject.defineProperty(exports, \"TSFunctionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsFunctionType;\n  }\n});\nObject.defineProperty(exports, \"TSImportEqualsDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportEqualsDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSImportType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsImportType;\n  }\n});\nObject.defineProperty(exports, \"TSIndexSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexSignature;\n  }\n});\nObject.defineProperty(exports, \"TSIndexedAccessType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIndexedAccessType;\n  }\n});\nObject.defineProperty(exports, \"TSInferType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInferType;\n  }\n});\nObject.defineProperty(exports, \"TSInstantiationExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInstantiationExpression;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceBody\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceBody;\n  }\n});\nObject.defineProperty(exports, \"TSInterfaceDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsInterfaceDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSIntersectionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntersectionType;\n  }\n});\nObject.defineProperty(exports, \"TSIntrinsicKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsIntrinsicKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSLiteralType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsLiteralType;\n  }\n});\nObject.defineProperty(exports, \"TSMappedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMappedType;\n  }\n});\nObject.defineProperty(exports, \"TSMethodSignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsMethodSignature;\n  }\n});\nObject.defineProperty(exports, \"TSModuleBlock\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleBlock;\n  }\n});\nObject.defineProperty(exports, \"TSModuleDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsModuleDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNamedTupleMember\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamedTupleMember;\n  }\n});\nObject.defineProperty(exports, \"TSNamespaceExportDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNamespaceExportDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSNeverKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNeverKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNonNullExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNonNullExpression;\n  }\n});\nObject.defineProperty(exports, \"TSNullKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNullKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSNumberKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsNumberKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSObjectKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsObjectKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSOptionalType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsOptionalType;\n  }\n});\nObject.defineProperty(exports, \"TSParameterProperty\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParameterProperty;\n  }\n});\nObject.defineProperty(exports, \"TSParenthesizedType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsParenthesizedType;\n  }\n});\nObject.defineProperty(exports, \"TSPropertySignature\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsPropertySignature;\n  }\n});\nObject.defineProperty(exports, \"TSQualifiedName\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsQualifiedName;\n  }\n});\nObject.defineProperty(exports, \"TSRestType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsRestType;\n  }\n});\nObject.defineProperty(exports, \"TSStringKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsStringKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSSymbolKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsSymbolKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSThisType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsThisType;\n  }\n});\nObject.defineProperty(exports, \"TSTupleType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTupleType;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAliasDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAliasDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TSTypeAssertion\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeAssertion;\n  }\n});\nObject.defineProperty(exports, \"TSTypeLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeLiteral;\n  }\n});\nObject.defineProperty(exports, \"TSTypeOperator\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeOperator;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameter;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TSTypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TSTypePredicate\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypePredicate;\n  }\n});\nObject.defineProperty(exports, \"TSTypeQuery\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeQuery;\n  }\n});\nObject.defineProperty(exports, \"TSTypeReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsTypeReference;\n  }\n});\nObject.defineProperty(exports, \"TSUndefinedKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUndefinedKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnionType;\n  }\n});\nObject.defineProperty(exports, \"TSUnknownKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsUnknownKeyword;\n  }\n});\nObject.defineProperty(exports, \"TSVoidKeyword\", {\n  enumerable: true,\n  get: function () {\n    return _index.tsVoidKeyword;\n  }\n});\nObject.defineProperty(exports, \"TaggedTemplateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.taggedTemplateExpression;\n  }\n});\nObject.defineProperty(exports, \"TemplateElement\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateElement;\n  }\n});\nObject.defineProperty(exports, \"TemplateLiteral\", {\n  enumerable: true,\n  get: function () {\n    return _index.templateLiteral;\n  }\n});\nObject.defineProperty(exports, \"ThisExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisExpression;\n  }\n});\nObject.defineProperty(exports, \"ThisTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.thisTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"ThrowStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.throwStatement;\n  }\n});\nObject.defineProperty(exports, \"TopicReference\", {\n  enumerable: true,\n  get: function () {\n    return _index.topicReference;\n  }\n});\nObject.defineProperty(exports, \"TryStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.tryStatement;\n  }\n});\nObject.defineProperty(exports, \"TupleExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleExpression;\n  }\n});\nObject.defineProperty(exports, \"TupleTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.tupleTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeAlias\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAlias;\n  }\n});\nObject.defineProperty(exports, \"TypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"TypeCastExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeCastExpression;\n  }\n});\nObject.defineProperty(exports, \"TypeParameter\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameter;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterDeclaration;\n  }\n});\nObject.defineProperty(exports, \"TypeParameterInstantiation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeParameterInstantiation;\n  }\n});\nObject.defineProperty(exports, \"TypeofTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.typeofTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UnaryExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.unaryExpression;\n  }\n});\nObject.defineProperty(exports, \"UnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.unionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"UpdateExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.updateExpression;\n  }\n});\nObject.defineProperty(exports, \"V8IntrinsicIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _index.v8IntrinsicIdentifier;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclaration\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclaration;\n  }\n});\nObject.defineProperty(exports, \"VariableDeclarator\", {\n  enumerable: true,\n  get: function () {\n    return _index.variableDeclarator;\n  }\n});\nObject.defineProperty(exports, \"Variance\", {\n  enumerable: true,\n  get: function () {\n    return _index.variance;\n  }\n});\nObject.defineProperty(exports, \"VoidTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _index.voidTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, \"WhileStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.whileStatement;\n  }\n});\nObject.defineProperty(exports, \"WithStatement\", {\n  enumerable: true,\n  get: function () {\n    return _index.withStatement;\n  }\n});\nObject.defineProperty(exports, \"YieldExpression\", {\n  enumerable: true,\n  get: function () {\n    return _index.yieldExpression;\n  }\n});\n\nvar _index = require(\"./index\");", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNode;\n\nvar _definitions = require(\"../definitions\");\n\nvar _generated = require(\"../validators/generated\");\n\nconst has = Function.call.bind(Object.prototype.hasOwnProperty);\n\nfunction cloneIfNode(obj, deep, withoutLoc, commentsCache) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(obj, deep, withoutLoc, commentsCache) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\nfunction cloneNode(node, deep = true, withoutLoc = false) {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal(node, deep = true, withoutLoc = false, commentsCache) {\n  if (!node) return node;\n  const {\n    type\n  } = node;\n  const newNode = {\n    type: node.type\n  };\n\n  if ((0, _generated.isIdentifier)(node)) {\n    newNode.name = node.name;\n\n    if (has(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (has(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true, withoutLoc, commentsCache) : node.typeAnnotation;\n    }\n  } else if (!has(_definitions.NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {\n      if (has(node, field)) {\n        if (deep) {\n          newNode[field] = (0, _generated.isFile)(node) && field === \"comments\" ? maybeCloneComments(node.comments, deep, withoutLoc, commentsCache) : cloneIfNodeOrArray(node[field], true, withoutLoc, commentsCache);\n        } else {\n          newNode[field] = node[field];\n        }\n      }\n    }\n  }\n\n  if (has(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n\n  if (has(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(node.leadingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(node.innerComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(node.trailingComments, deep, withoutLoc, commentsCache);\n  }\n\n  if (has(node, \"extra\")) {\n    newNode.extra = Object.assign({}, node.extra);\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments(comments, deep, withoutLoc, commentsCache) {\n  if (!comments || !deep) {\n    return comments;\n  }\n\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n    const {\n      type,\n      value,\n      loc\n    } = comment;\n    const ret = {\n      type,\n      value,\n      loc\n    };\n\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n    return ret;\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clone;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction clone(node) {\n  return (0, _cloneNode.default)(node, false);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeep;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeep(node) {\n  return (0, _cloneNode.default)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneDeepWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneDeepWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, true, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneWithoutLoc;\n\nvar _cloneNode = require(\"./cloneNode\");\n\nfunction cloneWithoutLoc(node) {\n  return (0, _cloneNode.default)(node, false, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComments;\n\nfunction addComments(node, type, comments) {\n  if (!comments || !node) return node;\n  const key = `${type}Comments`;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addComment;\n\nvar _addComments = require(\"./addComments\");\n\nfunction addComment(node, type, content, line) {\n  return (0, _addComments.default)(node, type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherit;\n\nfunction inherit(key, child, parent) {\n  if (child && parent) {\n    child[key] = Array.from(new Set([].concat(child[key], parent[key]).filter(Boolean)));\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritInnerComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritInnerComments(child, parent) {\n  (0, _inherit.default)(\"innerComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritLeadingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritLeadingComments(child, parent) {\n  (0, _inherit.default)(\"leadingComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritTrailingComments;\n\nvar _inherit = require(\"../utils/inherit\");\n\nfunction inheritTrailingComments(child, parent) {\n  (0, _inherit.default)(\"trailingComments\", child, parent);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inheritsComments;\n\nvar _inheritTrailingComments = require(\"./inheritTrailingComments\");\n\nvar _inheritLeadingComments = require(\"./inheritLeadingComments\");\n\nvar _inheritInnerComments = require(\"./inheritInnerComments\");\n\nfunction inheritsComments(child, parent) {\n  (0, _inheritTrailingComments.default)(child, parent);\n  (0, _inheritLeadingComments.default)(child, parent);\n  (0, _inheritInnerComments.default)(child, parent);\n  return child;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeComments;\n\nvar _constants = require(\"../constants\");\n\nfunction removeComments(node) {\n  _constants.COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WHILE_TYPES = exports.USERWHITESPACABLE_TYPES = exports.UNARYLIKE_TYPES = exports.TYPESCRIPT_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.TSENTITYNAME_TYPES = exports.TSBASETYPE_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.STANDARDIZED_TYPES = exports.SCOPABLE_TYPES = exports.PUREISH_TYPES = exports.PROPERTY_TYPES = exports.PRIVATE_TYPES = exports.PATTERN_TYPES = exports.PATTERNLIKE_TYPES = exports.OBJECTMEMBER_TYPES = exports.MODULESPECIFIER_TYPES = exports.MODULEDECLARATION_TYPES = exports.MISCELLANEOUS_TYPES = exports.METHOD_TYPES = exports.LVAL_TYPES = exports.LOOP_TYPES = exports.LITERAL_TYPES = exports.JSX_TYPES = exports.IMMUTABLE_TYPES = exports.FUNCTION_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FOR_TYPES = exports.FORXSTATEMENT_TYPES = exports.FLOW_TYPES = exports.FLOWTYPE_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.EXPRESSION_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.DECLARATION_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.CLASS_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.BINARY_TYPES = exports.ACCESSOR_TYPES = void 0;\n\nvar _definitions = require(\"../../definitions\");\n\nconst STANDARDIZED_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexports.STANDARDIZED_TYPES = STANDARDIZED_TYPES;\nconst EXPRESSION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Expression\"];\nexports.EXPRESSION_TYPES = EXPRESSION_TYPES;\nconst BINARY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Binary\"];\nexports.BINARY_TYPES = BINARY_TYPES;\nconst SCOPABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexports.SCOPABLE_TYPES = SCOPABLE_TYPES;\nconst BLOCKPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexports.BLOCKPARENT_TYPES = BLOCKPARENT_TYPES;\nconst BLOCK_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Block\"];\nexports.BLOCK_TYPES = BLOCK_TYPES;\nconst STATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Statement\"];\nexports.STATEMENT_TYPES = STATEMENT_TYPES;\nconst TERMINATORLESS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexports.TERMINATORLESS_TYPES = TERMINATORLESS_TYPES;\nconst COMPLETIONSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexports.COMPLETIONSTATEMENT_TYPES = COMPLETIONSTATEMENT_TYPES;\nconst CONDITIONAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexports.CONDITIONAL_TYPES = CONDITIONAL_TYPES;\nconst LOOP_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Loop\"];\nexports.LOOP_TYPES = LOOP_TYPES;\nconst WHILE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"While\"];\nexports.WHILE_TYPES = WHILE_TYPES;\nconst EXPRESSIONWRAPPER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexports.EXPRESSIONWRAPPER_TYPES = EXPRESSIONWRAPPER_TYPES;\nconst FOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"For\"];\nexports.FOR_TYPES = FOR_TYPES;\nconst FORXSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexports.FORXSTATEMENT_TYPES = FORXSTATEMENT_TYPES;\nconst FUNCTION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Function\"];\nexports.FUNCTION_TYPES = FUNCTION_TYPES;\nconst FUNCTIONPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexports.FUNCTIONPARENT_TYPES = FUNCTIONPARENT_TYPES;\nconst PUREISH_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexports.PUREISH_TYPES = PUREISH_TYPES;\nconst DECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexports.DECLARATION_TYPES = DECLARATION_TYPES;\nconst PATTERNLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexports.PATTERNLIKE_TYPES = PATTERNLIKE_TYPES;\nconst LVAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"LVal\"];\nexports.LVAL_TYPES = LVAL_TYPES;\nconst TSENTITYNAME_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexports.TSENTITYNAME_TYPES = TSENTITYNAME_TYPES;\nconst LITERAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Literal\"];\nexports.LITERAL_TYPES = LITERAL_TYPES;\nconst IMMUTABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexports.IMMUTABLE_TYPES = IMMUTABLE_TYPES;\nconst USERWHITESPACABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexports.USERWHITESPACABLE_TYPES = USERWHITESPACABLE_TYPES;\nconst METHOD_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Method\"];\nexports.METHOD_TYPES = METHOD_TYPES;\nconst OBJECTMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexports.OBJECTMEMBER_TYPES = OBJECTMEMBER_TYPES;\nconst PROPERTY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Property\"];\nexports.PROPERTY_TYPES = PROPERTY_TYPES;\nconst UNARYLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexports.UNARYLIKE_TYPES = UNARYLIKE_TYPES;\nconst PATTERN_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexports.PATTERN_TYPES = PATTERN_TYPES;\nconst CLASS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Class\"];\nexports.CLASS_TYPES = CLASS_TYPES;\nconst MODULEDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleDeclaration\"];\nexports.MODULEDECLARATION_TYPES = MODULEDECLARATION_TYPES;\nconst EXPORTDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexports.EXPORTDECLARATION_TYPES = EXPORTDECLARATION_TYPES;\nconst MODULESPECIFIER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexports.MODULESPECIFIER_TYPES = MODULESPECIFIER_TYPES;\nconst ACCESSOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexports.ACCESSOR_TYPES = ACCESSOR_TYPES;\nconst PRIVATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Private\"];\nexports.PRIVATE_TYPES = PRIVATE_TYPES;\nconst FLOW_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Flow\"];\nexports.FLOW_TYPES = FLOW_TYPES;\nconst FLOWTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexports.FLOWTYPE_TYPES = FLOWTYPE_TYPES;\nconst FLOWBASEANNOTATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexports.FLOWBASEANNOTATION_TYPES = FLOWBASEANNOTATION_TYPES;\nconst FLOWDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexports.FLOWDECLARATION_TYPES = FLOWDECLARATION_TYPES;\nconst FLOWPREDICATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexports.FLOWPREDICATE_TYPES = FLOWPREDICATE_TYPES;\nconst ENUMBODY_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexports.ENUMBODY_TYPES = ENUMBODY_TYPES;\nconst ENUMMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexports.ENUMMEMBER_TYPES = ENUMMEMBER_TYPES;\nconst JSX_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"JSX\"];\nexports.JSX_TYPES = JSX_TYPES;\nconst MISCELLANEOUS_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexports.MISCELLANEOUS_TYPES = MISCELLANEOUS_TYPES;\nconst TYPESCRIPT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexports.TYPESCRIPT_TYPES = TYPESCRIPT_TYPES;\nconst TSTYPEELEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexports.TSTYPEELEMENT_TYPES = TSTYPEELEMENT_TYPES;\nconst TSTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSType\"];\nexports.TSTYPE_TYPES = TSTYPE_TYPES;\nconst TSBASETYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\nexports.TSBASETYPE_TYPES = TSBASETYPE_TYPES;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBlock;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toBlock(node, parent) {\n  if ((0, _generated.isBlockStatement)(node)) {\n    return node;\n  }\n\n  let blockNodes = [];\n\n  if ((0, _generated.isEmptyStatement)(node)) {\n    blockNodes = [];\n  } else {\n    if (!(0, _generated.isStatement)(node)) {\n      if ((0, _generated.isFunction)(parent)) {\n        node = (0, _generated2.returnStatement)(node);\n      } else {\n        node = (0, _generated2.expressionStatement)(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return (0, _generated2.blockStatement)(blockNodes);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ensureBlock;\n\nvar _toBlock = require(\"./toBlock\");\n\nfunction ensureBlock(node, key = \"body\") {\n  const result = (0, _toBlock.default)(node[key], node);\n  node[key] = result;\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  let name = \"\";\n\n  for (const c of input) {\n    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBindingIdentifierName;\n\nvar _toIdentifier = require(\"./toIdentifier\");\n\nfunction toBindingIdentifierName(name) {\n  name = (0, _toIdentifier.default)(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toComputedKey;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nfunction toComputedKey(node, key = node.key || node.property) {\n  if (!node.computed && (0, _generated.isIdentifier)(key)) key = (0, _generated2.stringLiteral)(key.name);\n  return key;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _default = toExpression;\nexports.default = _default;\n\nfunction toExpression(node) {\n  if ((0, _generated.isExpressionStatement)(node)) {\n    node = node.expression;\n  }\n\n  if ((0, _generated.isExpression)(node)) {\n    return node;\n  }\n\n  if ((0, _generated.isClass)(node)) {\n    node.type = \"ClassExpression\";\n  } else if ((0, _generated.isFunction)(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!(0, _generated.isExpression)(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverseFast;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  opts = opts || {};\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeProperties;\n\nvar _constants = require(\"../constants\");\n\nconst CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\nconst CLEAR_KEYS_PLUS_COMMENTS = [..._constants.COMMENT_KEYS, \"comments\", ...CLEAR_KEYS];\n\nfunction removeProperties(node, opts = {}) {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n\n  for (const key of map) {\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols = Object.getOwnPropertySymbols(node);\n\n  for (const sym of symbols) {\n    node[sym] = null;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removePropertiesDeep;\n\nvar _traverseFast = require(\"../traverse/traverseFast\");\n\nvar _removeProperties = require(\"./removeProperties\");\n\nfunction removePropertiesDeep(tree, opts) {\n  (0, _traverseFast.default)(tree, _removeProperties.default, opts);\n  return tree;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toKeyAlias;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nvar _removePropertiesDeep = require(\"../modifications/removePropertiesDeep\");\n\nfunction toKeyAlias(node, key = node.key) {\n  let alias;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if ((0, _generated.isIdentifier)(key)) {\n    alias = key.name;\n  } else if ((0, _generated.isStringLiteral)(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify((0, _removePropertiesDeep.default)((0, _cloneNode.default)(key)));\n  }\n\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBindingIdentifiers;\n\nvar _generated = require(\"../validators/generated\");\n\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\n  const search = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if ((0, _generated.isIdentifier)(id)) {\n      if (duplicates) {\n        const _ids = ids[id.name] = ids[id.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {\n      if ((0, _generated.isDeclaration)(id.declaration)) {\n        search.push(id.declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if ((0, _generated.isFunctionDeclaration)(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if ((0, _generated.isFunctionExpression)(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes = id[key];\n\n        if (nodes) {\n          Array.isArray(nodes) ? search.push(...nodes) : search.push(nodes);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n  ObjectProperty: [\"value\"],\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"]\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    if (!(0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toSequenceExpression;\n\nvar _gatherSequenceExpressions = require(\"./gatherSequenceExpressions\");\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!(nodes != null && nodes.length)) return;\n  const declars = [];\n  const result = (0, _gatherSequenceExpressions.default)(nodes, scope, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _default = toStatement;\nexports.default = _default;\n\nfunction toStatement(node, ignore) {\n  if ((0, _generated.isStatement)(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if ((0, _generated.isClass)(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if ((0, _generated.isFunction)(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if ((0, _generated.isAssignmentExpression)(node)) {\n    return (0, _generated2.expressionStatement)(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  node.type = newType;\n  return node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _generated = require(\"../builders/generated\");\n\nvar _default = valueToNode;\nexports.default = _default;\nconst objectToString = Function.call.bind(Object.prototype.toString);\n\nfunction isRegExp(value) {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null || Object.prototype.toString.call(value) !== \"[object Object]\") {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(value);\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if (isPlainObject(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = appendToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nfunction appendToMemberExpression(member, append, computed = false) {\n  member.object = (0, _generated.memberExpression)(member.object, member.property, member.computed);\n  member.property = append;\n  member.computed = !!computed;\n  return member;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inherits;\n\nvar _constants = require(\"../constants\");\n\nvar _inheritsComments = require(\"../comments/inheritsComments\");\n\nfunction inherits(child, parent) {\n  if (!child || !parent) return child;\n\n  for (const key of _constants.INHERIT_KEYS.optional) {\n    if (child[key] == null) {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      child[key] = parent[key];\n    }\n  }\n\n  for (const key of _constants.INHERIT_KEYS.force) {\n    child[key] = parent[key];\n  }\n\n  (0, _inheritsComments.default)(child, parent);\n  return child;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prependToMemberExpression;\n\nvar _generated = require(\"../builders/generated\");\n\nvar _ = require(\"..\");\n\nfunction prependToMemberExpression(member, prepend) {\n  if ((0, _.isSuper)(member.object)) {\n    throw new Error(\"Cannot prepend node to super property access (`super.foo`).\");\n  }\n\n  member.object = (0, _generated.memberExpression)(prepend, member.object);\n  return member;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getBindingIdentifiers = require(\"./getBindingIdentifiers\");\n\nvar _default = getOuterBindingIdentifiers;\nexports.default = _default;\n\nfunction getOuterBindingIdentifiers(node, duplicates) {\n  return (0, _getBindingIdentifiers.default)(node, duplicates, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverse(node, handlers, state) {\n  if (typeof handlers === \"function\") {\n    handlers = {\n      enter: handlers\n    };\n  }\n\n  const {\n    enter,\n    exit\n  } = handlers;\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl(node, enter, exit, state, ancestors) {\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n        ancestors.push({\n          node,\n          key,\n          index: i\n        });\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key\n      });\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBinding;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nfunction isBinding(node, parent, grandparent) {\n  if (grandparent && node.type === \"Identifier\" && parent.type === \"ObjectProperty\" && grandparent.type === \"ObjectExpression\") {\n    return false;\n  }\n\n  const keys = _getBindingIdentifiers.default.keys[parent.type];\n\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val = parent[key];\n\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLet;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isLet(node) {\n  return (0, _generated.isVariableDeclaration)(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBlockScoped;\n\nvar _generated = require(\"./generated\");\n\nvar _isLet = require(\"./isLet\");\n\nfunction isBlockScoped(node) {\n  return (0, _generated.isFunctionDeclaration)(node) || (0, _generated.isClassDeclaration)(node) || (0, _isLet.default)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isImmutable;\n\nvar _isType = require(\"./isType\");\n\nvar _generated = require(\"./generated\");\n\nfunction isImmutable(node) {\n  if ((0, _isType.default)(node.type, \"Immutable\")) return true;\n\n  if ((0, _generated.isIdentifier)(node)) {\n    if (node.name === \"undefined\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNodesEquivalent;\n\nvar _definitions = require(\"../definitions\");\n\nfunction isNodesEquivalent(a, b) {\n  if (typeof a !== \"object\" || typeof b !== \"object\" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = _definitions.VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a = a[field];\n    const val_b = b[field];\n\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !(visitorKeys != null && visitorKeys.includes(field))) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isReferenced;\n\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    case \"PrivateName\":\n      return false;\n\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return false;\n\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    case \"LabeledStatement\":\n      return false;\n\n    case \"CatchClause\":\n      return false;\n\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    case \"ExportSpecifier\":\n      if (grandparent != null && grandparent.source) {\n        return false;\n      }\n\n      return parent.local === node;\n\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    case \"ImportAttribute\":\n      return false;\n\n    case \"JSXAttribute\":\n      return false;\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    case \"MetaProperty\":\n      return false;\n\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\n\nvar _generated = require(\"./generated\");\n\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return false;\n  }\n\n  if ((0, _generated.isPattern)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {\n    return true;\n  }\n\n  return (0, _generated.isScopable)(node);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSpecifierDefault;\n\nvar _generated = require(\"./generated\");\n\nfunction isSpecifierDefault(specifier) {\n  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {\n    name: \"default\"\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidES3Identifier;\n\nvar _isValidIdentifier = require(\"./isValidIdentifier\");\n\nconst RESERVED_WORDS_ES3_ONLY = new Set([\"abstract\", \"boolean\", \"byte\", \"char\", \"double\", \"enum\", \"final\", \"float\", \"goto\", \"implements\", \"int\", \"interface\", \"long\", \"native\", \"package\", \"private\", \"protected\", \"public\", \"short\", \"static\", \"synchronized\", \"throws\", \"transient\", \"volatile\"]);\n\nfunction isValidES3Identifier(name) {\n  return (0, _isValidIdentifier.default)(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVar;\n\nvar _generated = require(\"./generated\");\n\nvar _constants = require(\"../constants\");\n\nfunction isVar(node) {\n  return (0, _generated.isVariableDeclaration)(node, {\n    kind: \"var\"\n  }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}", "", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  react: true,\n  assertNode: true,\n  createTypeAnnotationBasedOnTypeof: true,\n  createUnionTypeAnnotation: true,\n  createFlowUnionType: true,\n  createTSUnionType: true,\n  cloneNode: true,\n  clone: true,\n  cloneDeep: true,\n  cloneDeepWithoutLoc: true,\n  cloneWithoutLoc: true,\n  addComment: true,\n  addComments: true,\n  inheritInnerComments: true,\n  inheritLeadingComments: true,\n  inheritsComments: true,\n  inheritTrailingComments: true,\n  removeComments: true,\n  ensureBlock: true,\n  toBindingIdentifierName: true,\n  toBlock: true,\n  toComputedKey: true,\n  toExpression: true,\n  toIdentifier: true,\n  toKeyAlias: true,\n  toSequenceExpression: true,\n  toStatement: true,\n  valueToNode: true,\n  appendToMemberExpression: true,\n  inherits: true,\n  prependToMemberExpression: true,\n  removeProperties: true,\n  removePropertiesDeep: true,\n  removeTypeDuplicates: true,\n  getBindingIdentifiers: true,\n  getOuterBindingIdentifiers: true,\n  traverse: true,\n  traverseFast: true,\n  shallowEqual: true,\n  is: true,\n  isBinding: true,\n  isBlockScoped: true,\n  isImmutable: true,\n  isLet: true,\n  isNode: true,\n  isNodesEquivalent: true,\n  isPlaceholderType: true,\n  isReferenced: true,\n  isScope: true,\n  isSpecifierDefault: true,\n  isType: true,\n  isValidES3Identifier: true,\n  isValidIdentifier: true,\n  isVar: true,\n  matchesPattern: true,\n  validate: true,\n  buildMatchMemberExpression: true\n};\nObject.defineProperty(exports, \"addComment\", {\n  enumerable: true,\n  get: function () {\n    return _addComment.default;\n  }\n});\nObject.defineProperty(exports, \"addComments\", {\n  enumerable: true,\n  get: function () {\n    return _addComments.default;\n  }\n});\nObject.defineProperty(exports, \"appendToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _appendToMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"assertNode\", {\n  enumerable: true,\n  get: function () {\n    return _assertNode.default;\n  }\n});\nObject.defineProperty(exports, \"buildMatchMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _buildMatchMemberExpression.default;\n  }\n});\nObject.defineProperty(exports, \"clone\", {\n  enumerable: true,\n  get: function () {\n    return _clone.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeep\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeep.default;\n  }\n});\nObject.defineProperty(exports, \"cloneDeepWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneDeepWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"cloneNode\", {\n  enumerable: true,\n  get: function () {\n    return _cloneNode.default;\n  }\n});\nObject.defineProperty(exports, \"cloneWithoutLoc\", {\n  enumerable: true,\n  get: function () {\n    return _cloneWithoutLoc.default;\n  }\n});\nObject.defineProperty(exports, \"createFlowUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTSUnionType\", {\n  enumerable: true,\n  get: function () {\n    return _createTSUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"createTypeAnnotationBasedOnTypeof\", {\n  enumerable: true,\n  get: function () {\n    return _createTypeAnnotationBasedOnTypeof.default;\n  }\n});\nObject.defineProperty(exports, \"createUnionTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _createFlowUnionType.default;\n  }\n});\nObject.defineProperty(exports, \"ensureBlock\", {\n  enumerable: true,\n  get: function () {\n    return _ensureBlock.default;\n  }\n});\nObject.defineProperty(exports, \"getBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"getOuterBindingIdentifiers\", {\n  enumerable: true,\n  get: function () {\n    return _getOuterBindingIdentifiers.default;\n  }\n});\nObject.defineProperty(exports, \"inheritInnerComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritInnerComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritLeadingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritLeadingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inheritTrailingComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritTrailingComments.default;\n  }\n});\nObject.defineProperty(exports, \"inherits\", {\n  enumerable: true,\n  get: function () {\n    return _inherits.default;\n  }\n});\nObject.defineProperty(exports, \"inheritsComments\", {\n  enumerable: true,\n  get: function () {\n    return _inheritsComments.default;\n  }\n});\nObject.defineProperty(exports, \"is\", {\n  enumerable: true,\n  get: function () {\n    return _is.default;\n  }\n});\nObject.defineProperty(exports, \"isBinding\", {\n  enumerable: true,\n  get: function () {\n    return _isBinding.default;\n  }\n});\nObject.defineProperty(exports, \"isBlockScoped\", {\n  enumerable: true,\n  get: function () {\n    return _isBlockScoped.default;\n  }\n});\nObject.defineProperty(exports, \"isImmutable\", {\n  enumerable: true,\n  get: function () {\n    return _isImmutable.default;\n  }\n});\nObject.defineProperty(exports, \"isLet\", {\n  enumerable: true,\n  get: function () {\n    return _isLet.default;\n  }\n});\nObject.defineProperty(exports, \"isNode\", {\n  enumerable: true,\n  get: function () {\n    return _isNode.default;\n  }\n});\nObject.defineProperty(exports, \"isNodesEquivalent\", {\n  enumerable: true,\n  get: function () {\n    return _isNodesEquivalent.default;\n  }\n});\nObject.defineProperty(exports, \"isPlaceholderType\", {\n  enumerable: true,\n  get: function () {\n    return _isPlaceholderType.default;\n  }\n});\nObject.defineProperty(exports, \"isReferenced\", {\n  enumerable: true,\n  get: function () {\n    return _isReferenced.default;\n  }\n});\nObject.defineProperty(exports, \"isScope\", {\n  enumerable: true,\n  get: function () {\n    return _isScope.default;\n  }\n});\nObject.defineProperty(exports, \"isSpecifierDefault\", {\n  enumerable: true,\n  get: function () {\n    return _isSpecifierDefault.default;\n  }\n});\nObject.defineProperty(exports, \"isType\", {\n  enumerable: true,\n  get: function () {\n    return _isType.default;\n  }\n});\nObject.defineProperty(exports, \"isValidES3Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidES3Identifier.default;\n  }\n});\nObject.defineProperty(exports, \"isValidIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _isValidIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"isVar\", {\n  enumerable: true,\n  get: function () {\n    return _isVar.default;\n  }\n});\nObject.defineProperty(exports, \"matchesPattern\", {\n  enumerable: true,\n  get: function () {\n    return _matchesPattern.default;\n  }\n});\nObject.defineProperty(exports, \"prependToMemberExpression\", {\n  enumerable: true,\n  get: function () {\n    return _prependToMemberExpression.default;\n  }\n});\nexports.react = void 0;\nObject.defineProperty(exports, \"removeComments\", {\n  enumerable: true,\n  get: function () {\n    return _removeComments.default;\n  }\n});\nObject.defineProperty(exports, \"removeProperties\", {\n  enumerable: true,\n  get: function () {\n    return _removeProperties.default;\n  }\n});\nObject.defineProperty(exports, \"removePropertiesDeep\", {\n  enumerable: true,\n  get: function () {\n    return _removePropertiesDeep.default;\n  }\n});\nObject.defineProperty(exports, \"removeTypeDuplicates\", {\n  enumerable: true,\n  get: function () {\n    return _removeTypeDuplicates.default;\n  }\n});\nObject.defineProperty(exports, \"shallowEqual\", {\n  enumerable: true,\n  get: function () {\n    return _shallowEqual.default;\n  }\n});\nObject.defineProperty(exports, \"toBindingIdentifierName\", {\n  enumerable: true,\n  get: function () {\n    return _toBindingIdentifierName.default;\n  }\n});\nObject.defineProperty(exports, \"toBlock\", {\n  enumerable: true,\n  get: function () {\n    return _toBlock.default;\n  }\n});\nObject.defineProperty(exports, \"toComputedKey\", {\n  enumerable: true,\n  get: function () {\n    return _toComputedKey.default;\n  }\n});\nObject.defineProperty(exports, \"toExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toIdentifier\", {\n  enumerable: true,\n  get: function () {\n    return _toIdentifier.default;\n  }\n});\nObject.defineProperty(exports, \"toKeyAlias\", {\n  enumerable: true,\n  get: function () {\n    return _toKeyAlias.default;\n  }\n});\nObject.defineProperty(exports, \"toSequenceExpression\", {\n  enumerable: true,\n  get: function () {\n    return _toSequenceExpression.default;\n  }\n});\nObject.defineProperty(exports, \"toStatement\", {\n  enumerable: true,\n  get: function () {\n    return _toStatement.default;\n  }\n});\nObject.defineProperty(exports, \"traverse\", {\n  enumerable: true,\n  get: function () {\n    return _traverse.default;\n  }\n});\nObject.defineProperty(exports, \"traverseFast\", {\n  enumerable: true,\n  get: function () {\n    return _traverseFast.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"valueToNode\", {\n  enumerable: true,\n  get: function () {\n    return _valueToNode.default;\n  }\n});\n\nvar _isReactComponent = require(\"./validators/react/isReactComponent\");\n\nvar _isCompatTag = require(\"./validators/react/isCompatTag\");\n\nvar _buildChildren = require(\"./builders/react/buildChildren\");\n\nvar _assertNode = require(\"./asserts/assertNode\");\n\nvar _generated = require(\"./asserts/generated\");\n\nObject.keys(_generated).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated[key];\n    }\n  });\n});\n\nvar _createTypeAnnotationBasedOnTypeof = require(\"./builders/flow/createTypeAnnotationBasedOnTypeof\");\n\nvar _createFlowUnionType = require(\"./builders/flow/createFlowUnionType\");\n\nvar _createTSUnionType = require(\"./builders/typescript/createTSUnionType\");\n\nvar _generated2 = require(\"./builders/generated\");\n\nObject.keys(_generated2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated2[key];\n    }\n  });\n});\n\nvar _uppercase = require(\"./builders/generated/uppercase\");\n\nObject.keys(_uppercase).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _uppercase[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _uppercase[key];\n    }\n  });\n});\n\nvar _cloneNode = require(\"./clone/cloneNode\");\n\nvar _clone = require(\"./clone/clone\");\n\nvar _cloneDeep = require(\"./clone/cloneDeep\");\n\nvar _cloneDeepWithoutLoc = require(\"./clone/cloneDeepWithoutLoc\");\n\nvar _cloneWithoutLoc = require(\"./clone/cloneWithoutLoc\");\n\nvar _addComment = require(\"./comments/addComment\");\n\nvar _addComments = require(\"./comments/addComments\");\n\nvar _inheritInnerComments = require(\"./comments/inheritInnerComments\");\n\nvar _inheritLeadingComments = require(\"./comments/inheritLeadingComments\");\n\nvar _inheritsComments = require(\"./comments/inheritsComments\");\n\nvar _inheritTrailingComments = require(\"./comments/inheritTrailingComments\");\n\nvar _removeComments = require(\"./comments/removeComments\");\n\nvar _generated3 = require(\"./constants/generated\");\n\nObject.keys(_generated3).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated3[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated3[key];\n    }\n  });\n});\n\nvar _constants = require(\"./constants\");\n\nObject.keys(_constants).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _constants[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _constants[key];\n    }\n  });\n});\n\nvar _ensureBlock = require(\"./converters/ensureBlock\");\n\nvar _toBindingIdentifierName = require(\"./converters/toBindingIdentifierName\");\n\nvar _toBlock = require(\"./converters/toBlock\");\n\nvar _toComputedKey = require(\"./converters/toComputedKey\");\n\nvar _toExpression = require(\"./converters/toExpression\");\n\nvar _toIdentifier = require(\"./converters/toIdentifier\");\n\nvar _toKeyAlias = require(\"./converters/toKeyAlias\");\n\nvar _toSequenceExpression = require(\"./converters/toSequenceExpression\");\n\nvar _toStatement = require(\"./converters/toStatement\");\n\nvar _valueToNode = require(\"./converters/valueToNode\");\n\nvar _definitions = require(\"./definitions\");\n\nObject.keys(_definitions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _definitions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _definitions[key];\n    }\n  });\n});\n\nvar _appendToMemberExpression = require(\"./modifications/appendToMemberExpression\");\n\nvar _inherits = require(\"./modifications/inherits\");\n\nvar _prependToMemberExpression = require(\"./modifications/prependToMemberExpression\");\n\nvar _removeProperties = require(\"./modifications/removeProperties\");\n\nvar _removePropertiesDeep = require(\"./modifications/removePropertiesDeep\");\n\nvar _removeTypeDuplicates = require(\"./modifications/flow/removeTypeDuplicates\");\n\nvar _getBindingIdentifiers = require(\"./retrievers/getBindingIdentifiers\");\n\nvar _getOuterBindingIdentifiers = require(\"./retrievers/getOuterBindingIdentifiers\");\n\nvar _traverse = require(\"./traverse/traverse\");\n\nObject.keys(_traverse).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _traverse[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _traverse[key];\n    }\n  });\n});\n\nvar _traverseFast = require(\"./traverse/traverseFast\");\n\nvar _shallowEqual = require(\"./utils/shallowEqual\");\n\nvar _is = require(\"./validators/is\");\n\nvar _isBinding = require(\"./validators/isBinding\");\n\nvar _isBlockScoped = require(\"./validators/isBlockScoped\");\n\nvar _isImmutable = require(\"./validators/isImmutable\");\n\nvar _isLet = require(\"./validators/isLet\");\n\nvar _isNode = require(\"./validators/isNode\");\n\nvar _isNodesEquivalent = require(\"./validators/isNodesEquivalent\");\n\nvar _isPlaceholderType = require(\"./validators/isPlaceholderType\");\n\nvar _isReferenced = require(\"./validators/isReferenced\");\n\nvar _isScope = require(\"./validators/isScope\");\n\nvar _isSpecifierDefault = require(\"./validators/isSpecifierDefault\");\n\nvar _isType = require(\"./validators/isType\");\n\nvar _isValidES3Identifier = require(\"./validators/isValidES3Identifier\");\n\nvar _isValidIdentifier = require(\"./validators/isValidIdentifier\");\n\nvar _isVar = require(\"./validators/isVar\");\n\nvar _matchesPattern = require(\"./validators/matchesPattern\");\n\nvar _validate = require(\"./validators/validate\");\n\nvar _buildMatchMemberExpression = require(\"./validators/buildMatchMemberExpression\");\n\nvar _generated4 = require(\"./validators/generated\");\n\nObject.keys(_generated4).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated4[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated4[key];\n    }\n  });\n});\n\nvar _generated5 = require(\"./ast-types/generated\");\n\nObject.keys(_generated5).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _generated5[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _generated5[key];\n    }\n  });\n});\nconst react = {\n  isReactComponent: _isReactComponent.default,\n  isCompatTag: _isCompatTag.default,\n  buildChildren: _buildChildren.default\n};\nexports.react = react;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.merge = merge;\nexports.verify = verify;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction isVirtualType(type) {\n  return type in virtualTypes;\n}\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    if (!isVirtualType(nodeType)) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(nodeType, fns[type]);\n    }\n\n    delete visitor[nodeType];\n    const types = virtualTypes[nodeType];\n\n    if (types !== null) {\n      for (const type of types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(nodeType, fn) {\n  const newFn = function (path) {\n    if (path[`is${nodeType}`]()) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = splitExportDeclaration;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  cloneNode,\n  exportNamedDeclaration,\n  exportSpecifier,\n  identifier,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction splitExportDeclaration(exportDeclaration) {\n  if (!exportDeclaration.isExportDeclaration() || exportDeclaration.isExportAllDeclaration()) {\n    throw new Error(\"Only default and named export declarations can be split.\");\n  }\n\n  if (exportDeclaration.isExportDefaultDeclaration()) {\n    const declaration = exportDeclaration.get(\"declaration\");\n    const standaloneDeclaration = declaration.isFunctionDeclaration() || declaration.isClassDeclaration();\n    const scope = declaration.isScope() ? declaration.scope.parent : declaration.scope;\n    let id = declaration.node.id;\n    let needBindingRegistration = false;\n\n    if (!id) {\n      needBindingRegistration = true;\n      id = scope.generateUidIdentifier(\"default\");\n\n      if (standaloneDeclaration || declaration.isFunctionExpression() || declaration.isClassExpression()) {\n        declaration.node.id = cloneNode(id);\n      }\n    }\n\n    const updatedDeclaration = standaloneDeclaration ? declaration.node : variableDeclaration(\"var\", [variableDeclarator(cloneNode(id), declaration.node)]);\n    const updatedExportDeclaration = exportNamedDeclaration(null, [exportSpecifier(cloneNode(id), identifier(\"default\"))]);\n    exportDeclaration.insertAfter(updatedExportDeclaration);\n    exportDeclaration.replaceWith(updatedDeclaration);\n\n    if (needBindingRegistration) {\n      scope.registerDeclaration(exportDeclaration);\n    }\n\n    return exportDeclaration;\n  } else if (exportDeclaration.get(\"specifiers\").length > 0) {\n    throw new Error(\"It doesn't make sense to split exported specifiers.\");\n  }\n\n  const declaration = exportDeclaration.get(\"declaration\");\n  const bindingIdentifiers = declaration.getOuterBindingIdentifiers();\n  const specifiers = Object.keys(bindingIdentifiers).map(name => {\n    return exportSpecifier(identifier(name), identifier(name));\n  });\n  const aliasDeclar = exportNamedDeclaration(null, specifiers);\n  exportDeclaration.insertAfter(aliasDeclar);\n  exportDeclaration.replaceWith(declaration.node);\n  return exportDeclaration;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.requeueComputedKeyAndDecorators = requeueComputedKeyAndDecorators;\nexports.skipAllButComputedKey = skipAllButComputedKey;\n\nfunction skipAllButComputedKey(path) {\n  path.skip();\n\n  if (path.node.computed) {\n    path.context.maybeQueue(path.get(\"key\"));\n  }\n}\n\nfunction requeueComputedKeyAndDecorators(path) {\n  const {\n    context,\n    node\n  } = path;\n\n  if (node.computed) {\n    context.maybeQueue(path.get(\"key\"));\n  }\n\n  if (node.decorators) {\n    for (const decorator of path.get(\"decorators\")) {\n      context.maybeQueue(decorator);\n    }\n  }\n}\n\nconst visitor = {\n  FunctionParent(path) {\n    if (path.isArrowFunctionExpression()) {\n      return;\n    } else {\n      path.skip();\n\n      if (path.isMethod()) {\n        requeueComputedKeyAndDecorators(path);\n      }\n    }\n  },\n\n  Property(path) {\n    if (path.isObjectProperty()) {\n      return;\n    }\n\n    path.skip();\n    requeueComputedKeyAndDecorators(path);\n  }\n\n};\nvar _default = visitor;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n\n      if (path.isMethod()) {\n        (0, _helperEnvironmentVisitor.requeueComputedKeyAndDecorators)(path);\n      }\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration()) {\n      const {\n        declaration\n      } = maybeExportDeclar.node;\n\n      if (t.isDeclaration(declaration) && !declaration.id) {\n        return;\n      }\n    }\n\n    if (maybeExportDeclar.isExportAllDeclaration()) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return path;\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return path;\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(path);\n      this.maybeConvertFromClassFunctionExpression(path);\n    }\n  }\n\n}\n\nexports.default = Renamer;", "'use strict';\nmodule.exports = require('./globals.json');\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isNullLiteral,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isRegExpLiteral,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator,\n  isRecordExpression,\n  isTupleExpression,\n  isObjectProperty,\n  isTopicReference,\n  isMetaProperty,\n  isPrivateName\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node) && !isNullLiteral(node) && !isRegExpLiteral(node) && !isTemplateLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      gatherNodeParts(node.name, parts);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const shouldSkip = path.key === \"key\" || path.listKey === \"decorators\";\n      path = path.parentPath;\n      if (shouldSkip && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node) || isTopicReference(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && kind === \"const\";\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      if (path.node.declare) return;\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isThisExpression(node) || isMetaProperty(node) || isTopicReference(node) || isPrivateName(node)) {\n      return true;\n    } else if (isClass(node)) {\n      var _node$decorators;\n\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      if (((_node$decorators = node.decorators) == null ? void 0 : _node$decorators.length) > 0) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node) || isTupleExpression(node)) {\n      for (const elem of node.elements) {\n        if (elem !== null && !this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node) || isRecordExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      var _node$decorators2;\n\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n\n      if (((_node$decorators2 = node.decorators) == null ? void 0 : _node$decorators2.length) > 0) {\n        return false;\n      }\n\n      return true;\n    } else if (isProperty(node)) {\n      var _node$decorators3;\n\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n\n      if (((_node$decorators3 = node.decorators) == null ? void 0 : _node$decorators3.length) > 0) {\n        return false;\n      }\n\n      if (isObjectProperty(node) || node.static) {\n        if (node.value !== null && !this.isPure(node.value, constantsOnly)) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (path.isPattern()) {\n      path = this.getPatternParent().path;\n    } else if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    const len = declarPath.node.declarations.push(declarator);\n    path.scope.registerBinding(kind, declarPath.get(\"declarations\")[len - 1]);\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getPatternParent() {\n    let scope = this;\n\n    do {\n      if (!scope.path.isPattern()) {\n        return scope.getBlockParent();\n      }\n    } while (scope = scope.parent.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\" && binding.kind !== \"local\") {} else {\n          return binding;\n        }\n      } else if (!binding && name === \"arguments\" && scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n        break;\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];", "/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nexport let get: (strarr: SetArray, key: string) => number | undefined;\n\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nexport let put: (strarr: SetArray, key: string) => number;\n\n/**\n * Pops the last added item out of the SetArray.\n */\nexport let pop: (strarr: SetArray) => void;\n\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nexport class SetArray {\n  private declare _indexes: { [key: string]: number | undefined };\n  declare array: readonly string[];\n\n  constructor() {\n    this._indexes = { __proto__: null } as any;\n    this.array = [];\n  }\n\n  static {\n    get = (strarr, key) => strarr._indexes[key];\n\n    put = (strarr, key) => {\n      // The key may or may not be present. If it is present, it's a number.\n      const index = get(strarr, key);\n      if (index !== undefined) return index;\n\n      const { array, _indexes: indexes } = strarr;\n\n      return (indexes[key] = (array as string[]).push(key) - 1);\n    };\n\n    pop = (strarr) => {\n      const { array, _indexes: indexes } = strarr;\n      if (array.length === 0) return;\n\n      const last = (array as string[]).pop()!;\n      indexes[last] = undefined;\n    };\n  }\n}\n", null, "// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may inclue \"/\", guaranteed.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/]*)?)?(\\/?.*)/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  relativePath: boolean;\n};\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/');\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path);\n}\n\nfunction makeUrl(scheme: string, user: string, host: string, port: string, path: string): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    relativePath: false,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.relativePath = true;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  // If we're not a relative path, then we're an absolute path, and it doesn't matter what base is.\n  if (!url.relativePath) return;\n\n  normalizePath(base);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n\n  // If the base path is absolute, then our path is now absolute too.\n  url.relativePath = base.relativePath;\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url) {\n  const { relativePath } = url;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (relativePath) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n\n  // If we have a base, and the input isn't already an absolute URL, then we need to merge.\n  if (base && !url.scheme) {\n    const baseUrl = parseUrl(base);\n    url.scheme = baseUrl.scheme;\n    // If there's no host, then we were just a path.\n    if (!url.host) {\n      // The host, user, and port are joined, you can't copy one without the others.\n      url.user = baseUrl.user;\n      url.host = baseUrl.host;\n      url.port = baseUrl.port;\n    }\n    mergePaths(url, baseUrl);\n  }\n\n  normalizePath(url);\n\n  // If the input (and base, if there was one) are both relative, then we need to output a relative.\n  if (url.relativePath) {\n    // The first char is always a \"/\".\n    const path = url.path.slice(1);\n    if (!path) return '.';\n\n    // If base started with a leading \".\", or there is no base and input started with a \".\", then we\n    // need to ensure that the relative path starts with a \".\". We don't know if relative starts\n    // with a \"..\", though, so check before prepending.\n    const keepRelative = (base || input).startsWith('.');\n    return !keepRelative || path.startsWith('.') ? path : './' + path;\n  }\n  // If there's no host (and no scheme/user/port), then we need to output an absolute path.\n  if (!url.scheme && !url.host) return url.path;\n  // We're outputting either an absolute URL, or a protocol relative one.\n  return `${url.scheme}//${url.user}${url.host}${url.port}${url.path}`;\n}\n", null, null, null, null, null, null, null, null, "type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n", "import { SetArray, put } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\nimport { TraceMap, decodedMappings } from '@jridgewell/trace-mapping';\n\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type { SourceMapInput } from '@jridgewell/trace-mapping';\nimport type { SourceMapSegment } from './sourcemap-segment';\nimport type { DecodedSourceMap, EncodedSourceMap, Pos, Mapping } from './types';\n\nexport type { DecodedSourceMap, EncodedSourceMap, Mapping };\n\nexport type Options = {\n  file?: string | null;\n  sourceRoot?: string | null;\n};\n\nconst NO_NAME = -1;\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nexport let addSegment: {\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source?: null,\n    sourceLine?: null,\n    sourceColumn?: null,\n    name?: null,\n    content?: null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name?: null,\n    content?: string | null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name: string,\n    content?: string | null,\n  ): void;\n};\n\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nexport let addMapping: {\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source?: null;\n      original?: null;\n      name?: null;\n      content?: null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name?: null;\n      content?: string | null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name: string;\n      content?: string | null;\n    },\n  ): void;\n};\n\n/**\n * Same as `addSegment`, but will only add the segment if it generates useful information in the\n * resulting map. This only works correctly if segments are added **in order**, meaning you should\n * not add a segment with a lower generated line/column than one that came before.\n */\nexport let maybeAddSegment: typeof addSegment;\n\n/**\n * Same as `addMapping`, but will only add the mapping if it generates useful information in the\n * resulting map. This only works correctly if mappings are added **in order**, meaning you should\n * not add a mapping with a lower generated line/column than one that came before.\n */\nexport let maybeAddMapping: typeof addMapping;\n\n/**\n * Adds/removes the content of the source file to the source map.\n */\nexport let setSourceContent: (map: GenMapping, source: string, content: string | null) => void;\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let toDecodedMap: (map: GenMapping) => DecodedSourceMap;\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let toEncodedMap: (map: GenMapping) => EncodedSourceMap;\n\n/**\n * Constructs a new GenMapping, using the already present mappings of the input.\n */\nexport let fromMap: (input: SourceMapInput) => GenMapping;\n\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nexport let allMappings: (map: GenMapping) => Mapping[];\n\n// This split declaration is only so that terser can elminiate the static initialization block.\nlet addSegmentInternal: <S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  genLine: number,\n  genColumn: number,\n  source: S,\n  sourceLine: S extends string ? number : null | undefined,\n  sourceColumn: S extends string ? number : null | undefined,\n  name: S extends string ? string | null | undefined : null | undefined,\n  content: S extends string ? string | null | undefined : null | undefined,\n) => void;\n\n/**\n * Provides the state to generate a sourcemap.\n */\nexport class GenMapping {\n  private _names = new SetArray();\n  private _sources = new SetArray();\n  private _sourcesContent: (string | null)[] = [];\n  private _mappings: SourceMapSegment[][] = [];\n  declare file: string | null | undefined;\n  declare sourceRoot: string | null | undefined;\n\n  constructor({ file, sourceRoot }: Options = {}) {\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n  }\n\n  static {\n    addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {\n      return addSegmentInternal(\n        false,\n        map,\n        genLine,\n        genColumn,\n        source,\n        sourceLine,\n        sourceColumn,\n        name,\n        content,\n      );\n    };\n\n    maybeAddSegment = (\n      map,\n      genLine,\n      genColumn,\n      source,\n      sourceLine,\n      sourceColumn,\n      name,\n      content,\n    ) => {\n      return addSegmentInternal(\n        true,\n        map,\n        genLine,\n        genColumn,\n        source,\n        sourceLine,\n        sourceColumn,\n        name,\n        content,\n      );\n    };\n\n    addMapping = (map, mapping) => {\n      return addMappingInternal(false, map, mapping as Parameters<typeof addMappingInternal>[2]);\n    };\n\n    maybeAddMapping = (map, mapping) => {\n      return addMappingInternal(true, map, mapping as Parameters<typeof addMappingInternal>[2]);\n    };\n\n    setSourceContent = (map, source, content) => {\n      const { _sources: sources, _sourcesContent: sourcesContent } = map;\n      sourcesContent[put(sources, source)] = content;\n    };\n\n    toDecodedMap = (map) => {\n      const {\n        file,\n        sourceRoot,\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n      removeEmptyFinalLines(mappings);\n\n      return {\n        version: 3,\n        file: file || undefined,\n        names: names.array,\n        sourceRoot: sourceRoot || undefined,\n        sources: sources.array,\n        sourcesContent,\n        mappings,\n      };\n    };\n\n    toEncodedMap = (map) => {\n      const decoded = toDecodedMap(map);\n      return {\n        ...decoded,\n        mappings: encode(decoded.mappings as SourceMapSegment[][]),\n      };\n    };\n\n    allMappings = (map) => {\n      const out: Mapping[] = [];\n      const { _mappings: mappings, _sources: sources, _names: names } = map;\n\n      for (let i = 0; i < mappings.length; i++) {\n        const line = mappings[i];\n        for (let j = 0; j < line.length; j++) {\n          const seg = line[j];\n\n          const generated = { line: i + 1, column: seg[COLUMN] };\n          let source: string | undefined = undefined;\n          let original: Pos | undefined = undefined;\n          let name: string | undefined = undefined;\n\n          if (seg.length !== 1) {\n            source = sources.array[seg[SOURCES_INDEX]];\n            original = { line: seg[SOURCE_LINE] + 1, column: seg[SOURCE_COLUMN] };\n\n            if (seg.length === 5) name = names.array[seg[NAMES_INDEX]];\n          }\n\n          out.push({ generated, source, original, name } as Mapping);\n        }\n      }\n\n      return out;\n    };\n\n    fromMap = (input) => {\n      const map = new TraceMap(input);\n      const gen = new GenMapping({ file: map.file, sourceRoot: map.sourceRoot });\n\n      putAll(gen._names, map.names);\n      putAll(gen._sources, map.sources as string[]);\n      gen._sourcesContent = map.sourcesContent || map.sources.map(() => null);\n      gen._mappings = decodedMappings(map) as GenMapping['_mappings'];\n\n      return gen;\n    };\n\n    // Internal helpers\n    addSegmentInternal = (\n      skipable,\n      map,\n      genLine,\n      genColumn,\n      source,\n      sourceLine,\n      sourceColumn,\n      name,\n      content,\n    ) => {\n      const {\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n      const line = getLine(mappings, genLine);\n      const index = getColumnIndex(line, genColumn);\n\n      if (!source) {\n        if (skipable && skipSourceless(line, index)) return;\n        return insert(line, index, [genColumn]);\n      }\n\n      // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source\n      // isn't nullish.\n      assert<number>(sourceLine);\n      assert<number>(sourceColumn);\n\n      const sourcesIndex = put(sources, source);\n      const namesIndex = name ? put(names, name) : NO_NAME;\n      if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content ?? null;\n\n      if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {\n        return;\n      }\n\n      return insert(\n        line,\n        index,\n        name\n          ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n          : [genColumn, sourcesIndex, sourceLine, sourceColumn],\n      );\n    };\n  }\n}\n\nfunction assert<T>(_val: unknown): asserts _val is T {\n  // noop.\n}\n\nfunction getLine(mappings: SourceMapSegment[][], index: number): SourceMapSegment[] {\n  for (let i = mappings.length; i <= index; i++) {\n    mappings[i] = [];\n  }\n  return mappings[index];\n}\n\nfunction getColumnIndex(line: SourceMapSegment[], genColumn: number): number {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; index = i--) {\n    const current = line[i];\n    if (genColumn >= current[COLUMN]) break;\n  }\n  return index;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\nfunction removeEmptyFinalLines(mappings: SourceMapSegment[][]) {\n  const { length } = mappings;\n  let len = length;\n  for (let i = len - 1; i >= 0; len = i, i--) {\n    if (mappings[i].length > 0) break;\n  }\n  if (len < length) mappings.length = len;\n}\n\nfunction putAll(strarr: SetArray, array: string[]) {\n  for (let i = 0; i < array.length; i++) put(strarr, array[i]);\n}\n\nfunction skipSourceless(line: SourceMapSegment[], index: number): boolean {\n  // The start of a line is already sourceless, so adding a sourceless segment to the beginning\n  // doesn't generate any useful information.\n  if (index === 0) return true;\n\n  const prev = line[index - 1];\n  // If the previous segment is also sourceless, then adding another sourceless segment doesn't\n  // genrate any new information. Else, this segment will end the source/named segment and point to\n  // a sourceless position, which is useful.\n  return prev.length === 1;\n}\n\nfunction skipSource(\n  line: SourceMapSegment[],\n  index: number,\n  sourcesIndex: number,\n  sourceLine: number,\n  sourceColumn: number,\n  namesIndex: number,\n): boolean {\n  // A source/named segment at the start of a line gives position at that genColumn\n  if (index === 0) return false;\n\n  const prev = line[index - 1];\n\n  // If the previous segment is sourceless, then we're transitioning to a source.\n  if (prev.length === 1) return false;\n\n  // If the previous segment maps to the exact same source position, then this segment doesn't\n  // provide any new position information.\n  return (\n    sourcesIndex === prev[SOURCES_INDEX] &&\n    sourceLine === prev[SOURCE_LINE] &&\n    sourceColumn === prev[SOURCE_COLUMN] &&\n    namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME)\n  );\n}\n\nfunction addMappingInternal<S extends string | null | undefined>(\n  skipable: boolean,\n  map: GenMapping,\n  mapping: {\n    generated: Pos;\n    source: S;\n    original: S extends string ? Pos : null | undefined;\n    name: S extends string ? string | null | undefined : null | undefined;\n    content: S extends string ? string | null | undefined : null | undefined;\n  },\n) {\n  const { generated, source, original, name, content } = mapping;\n  if (!source) {\n    return addSegmentInternal(\n      skipable,\n      map,\n      generated.line - 1,\n      generated.column,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n  }\n  const s: string = source;\n  assert<Pos>(original);\n  return addSegmentInternal(\n    skipable,\n    map,\n    generated.line - 1,\n    generated.column,\n    s,\n    original.line - 1,\n    original.column,\n    name,\n    content,\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _genMapping = require(\"@jridgewell/gen-mapping\");\n\nclass SourceMap {\n  constructor(opts, code) {\n    var _opts$sourceFileName;\n\n    this._map = void 0;\n    this._rawMappings = void 0;\n    this._sourceFileName = void 0;\n    this._lastGenLine = 0;\n    this._lastSourceLine = 0;\n    this._lastSourceColumn = 0;\n    const map = this._map = new _genMapping.GenMapping({\n      sourceRoot: opts.sourceRoot\n    });\n    this._sourceFileName = (_opts$sourceFileName = opts.sourceFileName) == null ? void 0 : _opts$sourceFileName.replace(/\\\\/g, \"/\");\n    this._rawMappings = undefined;\n\n    if (typeof code === \"string\") {\n      (0, _genMapping.setSourceContent)(map, this._sourceFileName, code);\n    } else if (typeof code === \"object\") {\n      Object.keys(code).forEach(sourceFileName => {\n        (0, _genMapping.setSourceContent)(map, sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n      });\n    }\n  }\n\n  get() {\n    return (0, _genMapping.toEncodedMap)(this._map);\n  }\n\n  getDecoded() {\n    return (0, _genMapping.toDecodedMap)(this._map);\n  }\n\n  getRawMappings() {\n    return this._rawMappings || (this._rawMappings = (0, _genMapping.allMappings)(this._map));\n  }\n\n  mark(generated, line, column, identifierName, filename) {\n    this._rawMappings = undefined;\n    (0, _genMapping.maybeAddMapping)(this._map, {\n      name: identifierName,\n      generated,\n      source: line == null ? undefined : (filename == null ? void 0 : filename.replace(/\\\\/g, \"/\")) || this._sourceFileName,\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction SourcePos() {\n  return {\n    identifierName: undefined,\n    line: undefined,\n    column: undefined,\n    filename: undefined\n  };\n}\n\nclass Buffer {\n  constructor(map) {\n    this._map = null;\n    this._buf = \"\";\n    this._str = \"\";\n    this._appendCount = 0;\n    this._last = 0;\n    this._queue = [];\n    this._queueCursor = 0;\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = SourcePos();\n    this._disallowedPop = {\n      identifierName: undefined,\n      line: undefined,\n      column: undefined,\n      filename: undefined,\n      objectReusable: true\n    };\n    this._map = map;\n\n    this._allocQueue();\n  }\n\n  _allocQueue() {\n    const queue = this._queue;\n\n    for (let i = 0; i < 16; i++) {\n      queue.push({\n        char: 0,\n        repeat: 1,\n        line: undefined,\n        column: undefined,\n        identifierName: undefined,\n        filename: \"\"\n      });\n    }\n  }\n\n  _pushQueue(char, repeat, line, column, identifierName, filename) {\n    const cursor = this._queueCursor;\n\n    if (cursor === this._queue.length) {\n      this._allocQueue();\n    }\n\n    const item = this._queue[cursor];\n    item.char = char;\n    item.repeat = repeat;\n    item.line = line;\n    item.column = column;\n    item.identifierName = identifierName;\n    item.filename = filename;\n    this._queueCursor++;\n  }\n\n  _popQueue() {\n    if (this._queueCursor === 0) {\n      throw new Error(\"Cannot pop from empty queue\");\n    }\n\n    return this._queue[--this._queueCursor];\n  }\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      code: (this._buf + this._str).trimRight(),\n      decodedMap: map == null ? void 0 : map.getDecoded(),\n\n      get map() {\n        const resultMap = map ? map.get() : null;\n        result.map = resultMap;\n        return resultMap;\n      },\n\n      set map(value) {\n        Object.defineProperty(result, \"map\", {\n          value,\n          writable: true\n        });\n      },\n\n      get rawMappings() {\n        const mappings = map == null ? void 0 : map.getRawMappings();\n        result.rawMappings = mappings;\n        return mappings;\n      },\n\n      set rawMappings(value) {\n        Object.defineProperty(result, \"rawMappings\", {\n          value,\n          writable: true\n        });\n      }\n\n    };\n    return result;\n  }\n\n  append(str, maybeNewline) {\n    this._flush();\n\n    this._append(str, this._sourcePosition, maybeNewline);\n  }\n\n  appendChar(char) {\n    this._flush();\n\n    this._appendChar(char, 1, this._sourcePosition);\n  }\n\n  queue(char) {\n    if (char === 10) {\n      while (this._queueCursor !== 0) {\n        const char = this._queue[this._queueCursor - 1].char;\n\n        if (char !== 32 && char !== 9) {\n          break;\n        }\n\n        this._queueCursor--;\n      }\n    }\n\n    const sourcePosition = this._sourcePosition;\n\n    this._pushQueue(char, 1, sourcePosition.line, sourcePosition.column, sourcePosition.identifierName, sourcePosition.filename);\n  }\n\n  queueIndentation(char, repeat) {\n    this._pushQueue(char, repeat, undefined, undefined, undefined, undefined);\n  }\n\n  _flush() {\n    const queueCursor = this._queueCursor;\n    const queue = this._queue;\n\n    for (let i = 0; i < queueCursor; i++) {\n      const item = queue[i];\n\n      this._appendChar(item.char, item.repeat, item);\n    }\n\n    this._queueCursor = 0;\n  }\n\n  _appendChar(char, repeat, sourcePos) {\n    this._last = char;\n    this._str += repeat > 1 ? String.fromCharCode(char).repeat(repeat) : String.fromCharCode(char);\n\n    if (char !== 10) {\n      this._mark(sourcePos.line, sourcePos.column, sourcePos.identifierName, sourcePos.filename);\n\n      this._position.column += repeat;\n    } else {\n      this._position.line++;\n      this._position.column = 0;\n    }\n  }\n\n  _append(str, sourcePos, maybeNewline) {\n    const len = str.length;\n    this._last = str.charCodeAt(len - 1);\n\n    if (++this._appendCount > 4096) {\n      +this._str;\n      this._buf += this._str;\n      this._str = str;\n      this._appendCount = 0;\n    } else {\n      this._str += str;\n    }\n\n    if (!maybeNewline && !this._map) {\n      this._position.column += len;\n      return;\n    }\n\n    const {\n      column,\n      identifierName,\n      filename\n    } = sourcePos;\n    let line = sourcePos.line;\n    let i = str.indexOf(\"\\n\");\n    let last = 0;\n\n    if (i !== 0) {\n      this._mark(line, column, identifierName, filename);\n    }\n\n    while (i !== -1) {\n      this._position.line++;\n      this._position.column = 0;\n      last = i + 1;\n\n      if (last < str.length) {\n        this._mark(++line, 0, identifierName, filename);\n      }\n\n      i = str.indexOf(\"\\n\", last);\n    }\n\n    this._position.column += str.length - last;\n  }\n\n  _mark(line, column, identifierName, filename) {\n    var _this$_map;\n\n    (_this$_map = this._map) == null ? void 0 : _this$_map.mark(this._position, line, column, identifierName, filename);\n  }\n\n  removeTrailingNewline() {\n    const queueCursor = this._queueCursor;\n\n    if (queueCursor !== 0 && this._queue[queueCursor - 1].char === 10) {\n      this._queueCursor--;\n    }\n  }\n\n  removeLastSemicolon() {\n    const queueCursor = this._queueCursor;\n\n    if (queueCursor !== 0 && this._queue[queueCursor - 1].char === 59) {\n      this._queueCursor--;\n    }\n  }\n\n  getLastChar() {\n    const queueCursor = this._queueCursor;\n    return queueCursor !== 0 ? this._queue[queueCursor - 1].char : this._last;\n  }\n\n  endsWithCharAndNewline() {\n    const queue = this._queue;\n    const queueCursor = this._queueCursor;\n\n    if (queueCursor !== 0) {\n      const lastCp = queue[queueCursor - 1].char;\n      if (lastCp !== 10) return;\n\n      if (queueCursor > 1) {\n        return queue[queueCursor - 2].char;\n      } else {\n        return this._last;\n      }\n    }\n  }\n\n  hasContent() {\n    return this._queueCursor !== 0 || !!this._last;\n  }\n\n  exactSource(loc, cb) {\n    if (!this._map) return cb();\n    this.source(\"start\", loc);\n    cb();\n    this.source(\"end\", loc);\n\n    this._disallowPop(\"start\", loc);\n  }\n\n  source(prop, loc) {\n    if (!loc) return;\n\n    this._normalizePosition(prop, loc, this._sourcePosition);\n  }\n\n  withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n    const originalLine = this._sourcePosition.line;\n    const originalColumn = this._sourcePosition.column;\n    const originalFilename = this._sourcePosition.filename;\n    const originalIdentifierName = this._sourcePosition.identifierName;\n    this.source(prop, loc);\n    cb();\n\n    if (this._disallowedPop.objectReusable || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename) {\n      this._sourcePosition.line = originalLine;\n      this._sourcePosition.column = originalColumn;\n      this._sourcePosition.filename = originalFilename;\n      this._sourcePosition.identifierName = originalIdentifierName;\n      this._disallowedPop.objectReusable = true;\n    }\n  }\n\n  _disallowPop(prop, loc) {\n    if (!loc) return;\n    const disallowedPop = this._disallowedPop;\n\n    this._normalizePosition(prop, loc, disallowedPop);\n\n    disallowedPop.objectReusable = false;\n  }\n\n  _normalizePosition(prop, loc, targetObj) {\n    const pos = loc[prop];\n    targetObj.identifierName = prop === \"start\" && loc.identifierName || undefined;\n\n    if (pos) {\n      targetObj.line = pos.line;\n      targetObj.column = pos.column;\n      targetObj.filename = loc.filename;\n    } else {\n      targetObj.line = null;\n      targetObj.column = null;\n      targetObj.filename = null;\n    }\n  }\n\n  getCurrentColumn() {\n    const queue = this._queue;\n    let lastIndex = -1;\n    let len = 0;\n\n    for (let i = 0; i < this._queueCursor; i++) {\n      const item = queue[i];\n\n      if (item.char === 10) {\n        lastIndex = i;\n        len += item.repeat;\n      }\n    }\n\n    return lastIndex === -1 ? this._position.column + len : len - 1 - lastIndex;\n  }\n\n  getCurrentLine() {\n    let count = 0;\n    const queue = this._queue;\n\n    for (let i = 0; i < this._queueCursor; i++) {\n      if (queue[i].char === 10) {\n        count++;\n      }\n    }\n\n    return this._position.line + count;\n  }\n\n}\n\nexports.default = Buffer;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nodes = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isArrayExpression,\n  isAssignmentExpression,\n  isBinary,\n  isBlockStatement,\n  isCallExpression,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isMemberExpression,\n  isObjectExpression,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isStringLiteral\n} = _t;\n\nfunction crawlInternal(node, state) {\n  if (!node) return state;\n\n  if (isMemberExpression(node) || isOptionalMemberExpression(node)) {\n    crawlInternal(node.object, state);\n    if (node.computed) crawlInternal(node.property, state);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    crawlInternal(node.left, state);\n    crawlInternal(node.right, state);\n  } else if (isCallExpression(node) || isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawlInternal(node.callee, state);\n  } else if (isFunction(node)) {\n    state.hasFunction = true;\n  } else if (isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || node.callee && isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction crawl(node) {\n  return crawlInternal(node, {\n    hasCall: false,\n    hasFunction: false,\n    hasHelper: false\n  });\n}\n\nfunction isHelper(node) {\n  if (!node) return false;\n\n  if (isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (isIdentifier(node)) {\n    return node.name === \"require\" || node.name.charCodeAt(0) === 95;\n  } else if (isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (isBinary(node) || isAssignmentExpression(node)) {\n    return isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return isLiteral(node) || isObjectExpression(node) || isArrayExpression(node) || isIdentifier(node) || isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return state.hasFunction ? 1 | 2 : 2;\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return (!!node.consequent.length || parent.cases[0] === node ? 1 : 0) | (!node.consequent.length && parent.cases[parent.cases.length - 1] === node ? 2 : 0);\n  },\n\n  LogicalExpression(node) {\n    if (isFunction(node.left) || isFunction(node.right)) {\n      return 2;\n    }\n  },\n\n  Literal(node) {\n    if (isStringLiteral(node) && node.value === \"use strict\") {\n      return 2;\n    }\n  },\n\n  CallExpression(node) {\n    if (isFunction(node.callee) || isHelper(node)) {\n      return 1 | 2;\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (isFunction(node.callee)) {\n      return 1 | 2;\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled && declar.init) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return 1 | 2;\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (isBlockStatement(node.consequent)) {\n      return 1 | 2;\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return 1;\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {\n    return 1;\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {\n    return 1;\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {\n    return 1;\n  }\n};\n\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  [type].concat(FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    const ret = amounts ? 1 | 2 : 0;\n\n    nodes[type] = () => ret;\n  });\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.ClassExpression = ClassExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.DoExpression = DoExpression;\nexports.FunctionExpression = FunctionExpression;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.Identifier = Identifier;\nexports.LogicalExpression = LogicalExpression;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.ObjectExpression = ObjectExpression;\nexports.OptionalIndexedAccessType = OptionalIndexedAccessType;\nexports.OptionalCallExpression = exports.OptionalMemberExpression = OptionalMemberExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.TSAsExpression = TSAsExpression;\nexports.TSInferType = TSInferType;\nexports.TSInstantiationExpression = TSInstantiationExpression;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSIntersectionType = exports.TSUnionType = TSUnionType;\nexports.UnaryLike = UnaryLike;\nexports.IntersectionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.AwaitExpression = exports.YieldExpression = YieldExpression;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isArrayTypeAnnotation,\n  isArrowFunctionExpression,\n  isAssignmentExpression,\n  isAwaitExpression,\n  isBinary,\n  isBinaryExpression,\n  isUpdateExpression,\n  isCallExpression,\n  isClass,\n  isClassExpression,\n  isConditional,\n  isConditionalExpression,\n  isExportDeclaration,\n  isExportDefaultDeclaration,\n  isExpressionStatement,\n  isFor,\n  isForInStatement,\n  isForOfStatement,\n  isForStatement,\n  isFunctionExpression,\n  isIfStatement,\n  isIndexedAccessType,\n  isIntersectionTypeAnnotation,\n  isLogicalExpression,\n  isMemberExpression,\n  isNewExpression,\n  isNullableTypeAnnotation,\n  isObjectPattern,\n  isOptionalCallExpression,\n  isOptionalMemberExpression,\n  isReturnStatement,\n  isSequenceExpression,\n  isSwitchStatement,\n  isTSArrayType,\n  isTSAsExpression,\n  isTSInstantiationExpression,\n  isTSIntersectionType,\n  isTSNonNullExpression,\n  isTSOptionalType,\n  isTSRestType,\n  isTSTypeAssertion,\n  isTSUnionType,\n  isTaggedTemplateExpression,\n  isThrowStatement,\n  isTypeAnnotation,\n  isUnaryLike,\n  isUnionTypeAnnotation,\n  isVariableDeclarator,\n  isWhileStatement,\n  isYieldExpression\n} = _t;\nconst PRECEDENCE = {\n  \"||\": 0,\n  \"??\": 0,\n  \"|>\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nconst isClassExtendsClause = (node, parent) => isClass(parent, {\n  superClass: node\n});\n\nconst hasPostfixPart = (node, parent) => (isMemberExpression(parent) || isOptionalMemberExpression(parent)) && parent.object === node || (isCallExpression(parent) || isOptionalCallExpression(parent) || isNewExpression(parent)) && parent.callee === node || isTaggedTemplateExpression(parent) && parent.tag === node || isTSNonNullExpression(parent);\n\nfunction NullableTypeAnnotation(node, parent) {\n  return isArrayTypeAnnotation(parent);\n}\n\nfunction FunctionTypeAnnotation(node, parent, printStack) {\n  if (printStack.length < 3) return;\n  return isUnionTypeAnnotation(parent) || isIntersectionTypeAnnotation(parent) || isArrayTypeAnnotation(parent) || isTypeAnnotation(parent) && isArrowFunctionExpression(printStack[printStack.length - 3]);\n}\n\nfunction UpdateExpression(node, parent) {\n  return hasPostfixPart(node, parent) || isClassExtendsClause(node, parent);\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, 1 | 2);\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return !node.async && isFirstInContext(printStack, 1);\n}\n\nfunction Binary(node, parent) {\n  if (node.operator === \"**\" && isBinaryExpression(parent, {\n    operator: \"**\"\n  })) {\n    return parent.left === node;\n  }\n\n  if (isClassExtendsClause(node, parent)) {\n    return true;\n  }\n\n  if (hasPostfixPart(node, parent) || isUnaryLike(parent) || isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (isBinary(parent)) {\n    const parentOp = parent.operator;\n    const parentPos = PRECEDENCE[parentOp];\n    const nodeOp = node.operator;\n    const nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n}\n\nfunction UnionTypeAnnotation(node, parent) {\n  return isArrayTypeAnnotation(parent) || isNullableTypeAnnotation(parent) || isIntersectionTypeAnnotation(parent) || isUnionTypeAnnotation(parent);\n}\n\nfunction OptionalIndexedAccessType(node, parent) {\n  return isIndexedAccessType(parent, {\n    objectType: node\n  });\n}\n\nfunction TSAsExpression() {\n  return true;\n}\n\nfunction TSTypeAssertion() {\n  return true;\n}\n\nfunction TSUnionType(node, parent) {\n  return isTSArrayType(parent) || isTSOptionalType(parent) || isTSIntersectionType(parent) || isTSUnionType(parent) || isTSRestType(parent);\n}\n\nfunction TSInferType(node, parent) {\n  return isTSArrayType(parent) || isTSOptionalType(parent);\n}\n\nfunction TSInstantiationExpression(node, parent) {\n  return (isCallExpression(parent) || isOptionalCallExpression(parent) || isNewExpression(parent) || isTSInstantiationExpression(parent)) && !!parent.typeParameters;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (isVariableDeclarator(parent) || isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n  if (isForStatement(parent) || isThrowStatement(parent) || isReturnStatement(parent) || isIfStatement(parent) && parent.test === node || isWhileStatement(parent) && parent.test === node || isForInStatement(parent) && parent.right === node || isSwitchStatement(parent) && parent.discriminant === node || isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return isBinary(parent) || isUnaryLike(parent) || hasPostfixPart(node, parent) || isAwaitExpression(parent) && isYieldExpression(node) || isConditionalExpression(parent) && node === parent.test || isClassExtendsClause(node, parent);\n}\n\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, 1 | 4);\n}\n\nfunction UnaryLike(node, parent) {\n  return hasPostfixPart(node, parent) || isBinaryExpression(parent, {\n    operator: \"**\",\n    left: node\n  }) || isClassExtendsClause(node, parent);\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInContext(printStack, 1 | 4);\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  return isExportDeclaration(parent) || ConditionalExpression(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (isUnaryLike(parent) || isBinary(parent) || isConditionalExpression(parent, {\n    test: node\n  }) || isAwaitExpression(parent) || isTSTypeAssertion(parent) || isTSAsExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction OptionalMemberExpression(node, parent) {\n  return isCallExpression(parent, {\n    callee: node\n  }) || isMemberExpression(parent, {\n    object: node\n  });\n}\n\nfunction AssignmentExpression(node, parent) {\n  if (isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression(node, parent);\n  }\n}\n\nfunction LogicalExpression(node, parent) {\n  switch (node.operator) {\n    case \"||\":\n      if (!isLogicalExpression(parent)) return false;\n      return parent.operator === \"??\" || parent.operator === \"&&\";\n\n    case \"&&\":\n      return isLogicalExpression(parent, {\n        operator: \"??\"\n      });\n\n    case \"??\":\n      return isLogicalExpression(parent) && parent.operator !== \"??\";\n  }\n}\n\nfunction Identifier(node, parent, printStack) {\n  var _node$extra;\n\n  if ((_node$extra = node.extra) != null && _node$extra.parenthesized && isAssignmentExpression(parent, {\n    left: node\n  }) && (isFunctionExpression(parent.right) || isClassExpression(parent.right)) && parent.right.id == null) {\n    return true;\n  }\n\n  if (node.name === \"let\") {\n    const isFollowedByBracket = isMemberExpression(parent, {\n      object: node,\n      computed: true\n    }) || isOptionalMemberExpression(parent, {\n      object: node,\n      computed: true,\n      optional: false\n    });\n    return isFirstInContext(printStack, isFollowedByBracket ? 1 | 8 | 16 | 32 : 32);\n  }\n\n  return node.name === \"async\" && isForOfStatement(parent) && node === parent.left;\n}\n\nfunction isFirstInContext(printStack, checkParam) {\n  const expressionStatement = checkParam & 1;\n  const arrowBody = checkParam & 2;\n  const exportDefault = checkParam & 4;\n  const forHead = checkParam & 8;\n  const forInHead = checkParam & 16;\n  const forOfHead = checkParam & 32;\n  let i = printStack.length - 1;\n  if (i <= 0) return;\n  let node = printStack[i];\n  i--;\n  let parent = printStack[i];\n\n  while (i >= 0) {\n    if (expressionStatement && isExpressionStatement(parent, {\n      expression: node\n    }) || exportDefault && isExportDefaultDeclaration(parent, {\n      declaration: node\n    }) || arrowBody && isArrowFunctionExpression(parent, {\n      body: node\n    }) || forHead && isForStatement(parent, {\n      init: node\n    }) || forInHead && isForInStatement(parent, {\n      left: node\n    }) || forOfHead && isForOfStatement(parent, {\n      left: node\n    })) {\n      return true;\n    }\n\n    if (i > 0 && (hasPostfixPart(node, parent) && !isNewExpression(parent) || isSequenceExpression(parent) && parent.expressions[0] === node || isUpdateExpression(parent) && !parent.prefix || isConditional(parent, {\n      test: node\n    }) || isBinary(parent, {\n      left: node\n    }) || isAssignmentExpression(parent, {\n      left: node\n    }))) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsParens = needsParens;\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\n\nvar whitespace = require(\"./whitespace\");\n\nvar parens = require(\"./parentheses\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  FLIPPED_ALIAS_KEYS,\n  isCallExpression,\n  isExpressionStatement,\n  isMemberExpression,\n  isNewExpression\n} = _t;\n\nfunction expandAliases(obj) {\n  const newObj = {};\n\n  function add(type, func) {\n    const fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      const result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\n\nfunction find(obj, node, parent, printStack) {\n  const fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (isCallExpression(node)) {\n    return true;\n  }\n\n  return isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return false;\n\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  const flag = find(expandedWhitespaceNodes, node, parent);\n\n  if (typeof flag === \"number\") {\n    return (flag & type) !== 0;\n  }\n\n  return false;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, 1);\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, 2);\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\n\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag, node);\n  this.print(node.typeParameters, node);\n  this.print(node.quasi, node);\n}\n\nfunction TemplateElement(node, parent) {\n  const isFirst = parent.quasis[0] === node;\n  const isLast = parent.quasis[parent.quasis.length - 1] === node;\n  const value = (isFirst ? \"`\" : \"}\") + node.value.raw + (isLast ? \"`\" : \"${\");\n  this.token(value, true);\n}\n\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n\n  for (let i = 0; i < quasis.length; i++) {\n    this.print(quasis[i], node);\n\n    if (i + 1 < quasis.length) {\n      this.print(node.expressions[i], node);\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;\nexports.AssignmentPattern = AssignmentPattern;\nexports.AwaitExpression = AwaitExpression;\nexports.BindExpression = BindExpression;\nexports.CallExpression = CallExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.Decorator = Decorator;\nexports.DoExpression = DoExpression;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.Import = Import;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\nexports.ModuleExpression = ModuleExpression;\nexports.NewExpression = NewExpression;\nexports.OptionalCallExpression = OptionalCallExpression;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.PrivateName = PrivateName;\nexports.SequenceExpression = SequenceExpression;\nexports.Super = Super;\nexports.ThisExpression = ThisExpression;\nexports.UnaryExpression = UnaryExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;\nexports.YieldExpression = YieldExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar n = require(\"../node\");\n\nconst {\n  isCallExpression,\n  isLiteral,\n  isMemberExpression,\n  isNewExpression\n} = _t;\n\nfunction UnaryExpression(node) {\n  if (node.operator === \"void\" || node.operator === \"delete\" || node.operator === \"typeof\" || node.operator === \"throw\") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.tokenChar(40);\n  this.print(node.expression, node);\n  this.tokenChar(41);\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.printTerminatorless(node.argument, node, true);\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.tokenChar(63);\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.tokenChar(58);\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee, node);\n\n  if (this.format.minified && node.arguments.length === 0 && !node.optional && !isCallExpression(parent, {\n    callee: node\n  }) && !isMemberExpression(parent) && !isNewExpression(parent)) {\n    return;\n  }\n\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.tokenChar(40);\n  this.printList(node.arguments, node);\n  this.tokenChar(41);\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word(\"this\");\n}\n\nfunction Super() {\n  this.word(\"super\");\n}\n\nfunction isDecoratorMemberExpression(node) {\n  switch (node.type) {\n    case \"Identifier\":\n      return true;\n\n    case \"MemberExpression\":\n      return !node.computed && node.property.type === \"Identifier\" && isDecoratorMemberExpression(node.object);\n\n    default:\n      return false;\n  }\n}\n\nfunction shouldParenthesizeDecoratorExpression(node) {\n  if (node.type === \"CallExpression\") {\n    node = node.callee;\n  }\n\n  if (node.type === \"ParenthesizedExpression\") {\n    return false;\n  }\n\n  return !isDecoratorMemberExpression(node);\n}\n\nfunction Decorator(node) {\n  this.tokenChar(64);\n  const {\n    expression\n  } = node;\n\n  if (shouldParenthesizeDecoratorExpression(expression)) {\n    this.tokenChar(40);\n    this.print(expression, node);\n    this.tokenChar(41);\n  } else {\n    this.print(expression, node);\n  }\n\n  this.newline();\n}\n\nfunction OptionalMemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.tokenChar(91);\n    this.print(node.property, node);\n    this.tokenChar(93);\n  } else {\n    if (!node.optional) {\n      this.tokenChar(46);\n    }\n\n    this.print(node.property, node);\n  }\n}\n\nfunction OptionalCallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.tokenChar(40);\n  this.printList(node.arguments, node);\n  this.tokenChar(41);\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n  this.tokenChar(40);\n  this.printList(node.arguments, node);\n  this.tokenChar(41);\n}\n\nfunction Import() {\n  this.word(\"import\");\n}\n\nfunction AwaitExpression(node) {\n  this.word(\"await\");\n\n  if (node.argument) {\n    this.space();\n    this.printTerminatorless(node.argument, node, false);\n  }\n}\n\nfunction YieldExpression(node) {\n  this.word(\"yield\");\n\n  if (node.delegate) {\n    this.tokenChar(42);\n  }\n\n  if (node.argument) {\n    this.space();\n    this.printTerminatorless(node.argument, node, false);\n  }\n}\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.tokenChar(63);\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.tokenChar(61);\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  const parens = this.inForStatementInitCounter && node.operator === \"in\" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.tokenChar(40);\n  }\n\n  this.print(node.left, node);\n  this.space();\n\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n\n  this.space();\n  this.print(node.right, node);\n\n  if (parens) {\n    this.tokenChar(41);\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token(\"::\");\n  this.print(node.callee, node);\n}\n\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.tokenChar(91);\n    this.print(node.property, node);\n    this.tokenChar(93);\n  } else {\n    this.tokenChar(46);\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.tokenChar(46);\n  this.print(node.property, node);\n}\n\nfunction PrivateName(node) {\n  this.tokenChar(35);\n  this.print(node.id, node);\n}\n\nfunction V8IntrinsicIdentifier(node) {\n  this.tokenChar(37);\n  this.word(node.name);\n}\n\nfunction ModuleExpression(node) {\n  this.word(\"module\");\n  this.space();\n  this.tokenChar(123);\n\n  if (node.body.body.length === 0) {\n    this.tokenChar(125);\n  } else {\n    this.newline();\n    this.printSequence(node.body.body, node, {\n      indent: true\n    });\n    this.rightBrace();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BreakStatement = BreakStatement;\nexports.CatchClause = CatchClause;\nexports.ContinueStatement = ContinueStatement;\nexports.DebuggerStatement = DebuggerStatement;\nexports.DoWhileStatement = DoWhileStatement;\nexports.ForOfStatement = exports.ForInStatement = void 0;\nexports.ForStatement = ForStatement;\nexports.IfStatement = IfStatement;\nexports.LabeledStatement = LabeledStatement;\nexports.ReturnStatement = ReturnStatement;\nexports.SwitchCase = SwitchCase;\nexports.SwitchStatement = SwitchStatement;\nexports.ThrowStatement = ThrowStatement;\nexports.TryStatement = TryStatement;\nexports.VariableDeclaration = VariableDeclaration;\nexports.VariableDeclarator = VariableDeclarator;\nexports.WhileStatement = WhileStatement;\nexports.WithStatement = WithStatement;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isFor,\n  isForStatement,\n  isIfStatement,\n  isStatement\n} = _t;\n\nfunction WithStatement(node) {\n  this.word(\"with\");\n  this.space();\n  this.tokenChar(40);\n  this.print(node.object, node);\n  this.tokenChar(41);\n  this.printBlock(node);\n}\n\nfunction IfStatement(node) {\n  this.word(\"if\");\n  this.space();\n  this.tokenChar(40);\n  this.print(node.test, node);\n  this.tokenChar(41);\n  this.space();\n  const needsBlock = node.alternate && isIfStatement(getLastStatement(node.consequent));\n\n  if (needsBlock) {\n    this.tokenChar(123);\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent, node);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.tokenChar(125);\n  }\n\n  if (node.alternate) {\n    if (this.endsWith(125)) this.space();\n    this.word(\"else\");\n    this.space();\n    this.printAndIndentOnComments(node.alternate, node);\n  }\n}\n\nfunction getLastStatement(statement) {\n  const {\n    body\n  } = statement;\n\n  if (isStatement(body) === false) {\n    return statement;\n  }\n\n  return getLastStatement(body);\n}\n\nfunction ForStatement(node) {\n  this.word(\"for\");\n  this.space();\n  this.tokenChar(40);\n  this.inForStatementInitCounter++;\n  this.print(node.init, node);\n  this.inForStatementInitCounter--;\n  this.tokenChar(59);\n\n  if (node.test) {\n    this.space();\n    this.print(node.test, node);\n  }\n\n  this.tokenChar(59);\n\n  if (node.update) {\n    this.space();\n    this.print(node.update, node);\n  }\n\n  this.tokenChar(41);\n  this.printBlock(node);\n}\n\nfunction WhileStatement(node) {\n  this.word(\"while\");\n  this.space();\n  this.tokenChar(40);\n  this.print(node.test, node);\n  this.tokenChar(41);\n  this.printBlock(node);\n}\n\nfunction ForXStatement(node) {\n  this.word(\"for\");\n  this.space();\n  const isForOf = node.type === \"ForOfStatement\";\n\n  if (isForOf && node.await) {\n    this.word(\"await\");\n    this.space();\n  }\n\n  this.tokenChar(40);\n  this.print(node.left, node);\n  this.space();\n  this.word(isForOf ? \"of\" : \"in\");\n  this.space();\n  this.print(node.right, node);\n  this.tokenChar(41);\n  this.printBlock(node);\n}\n\nconst ForInStatement = ForXStatement;\nexports.ForInStatement = ForInStatement;\nconst ForOfStatement = ForXStatement;\nexports.ForOfStatement = ForOfStatement;\n\nfunction DoWhileStatement(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n  this.space();\n  this.word(\"while\");\n  this.space();\n  this.tokenChar(40);\n  this.print(node.test, node);\n  this.tokenChar(41);\n  this.semicolon();\n}\n\nfunction printStatementAfterKeyword(printer, node, parent, isLabel) {\n  if (node) {\n    printer.space();\n    printer.printTerminatorless(node, parent, isLabel);\n  }\n\n  printer.semicolon();\n}\n\nfunction BreakStatement(node) {\n  this.word(\"break\");\n  printStatementAfterKeyword(this, node.label, node, true);\n}\n\nfunction ContinueStatement(node) {\n  this.word(\"continue\");\n  printStatementAfterKeyword(this, node.label, node, true);\n}\n\nfunction ReturnStatement(node) {\n  this.word(\"return\");\n  printStatementAfterKeyword(this, node.argument, node, false);\n}\n\nfunction ThrowStatement(node) {\n  this.word(\"throw\");\n  printStatementAfterKeyword(this, node.argument, node, false);\n}\n\nfunction LabeledStatement(node) {\n  this.print(node.label, node);\n  this.tokenChar(58);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction TryStatement(node) {\n  this.word(\"try\");\n  this.space();\n  this.print(node.block, node);\n  this.space();\n\n  if (node.handlers) {\n    this.print(node.handlers[0], node);\n  } else {\n    this.print(node.handler, node);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word(\"finally\");\n    this.space();\n    this.print(node.finalizer, node);\n  }\n}\n\nfunction CatchClause(node) {\n  this.word(\"catch\");\n  this.space();\n\n  if (node.param) {\n    this.tokenChar(40);\n    this.print(node.param, node);\n    this.print(node.param.typeAnnotation, node);\n    this.tokenChar(41);\n    this.space();\n  }\n\n  this.print(node.body, node);\n}\n\nfunction SwitchStatement(node) {\n  this.word(\"switch\");\n  this.space();\n  this.tokenChar(40);\n  this.print(node.discriminant, node);\n  this.tokenChar(41);\n  this.space();\n  this.tokenChar(123);\n  this.printSequence(node.cases, node, {\n    indent: true,\n\n    addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    }\n\n  });\n  this.tokenChar(125);\n}\n\nfunction SwitchCase(node) {\n  if (node.test) {\n    this.word(\"case\");\n    this.space();\n    this.print(node.test, node);\n    this.tokenChar(58);\n  } else {\n    this.word(\"default\");\n    this.tokenChar(58);\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, node, {\n      indent: true\n    });\n  }\n}\n\nfunction DebuggerStatement() {\n  this.word(\"debugger\");\n  this.semicolon();\n}\n\nfunction variableDeclarationIndent() {\n  this.tokenChar(44);\n  this.newline();\n\n  if (this.endsWith(10)) {\n    for (let i = 0; i < 4; i++) this.space(true);\n  }\n}\n\nfunction constDeclarationIndent() {\n  this.tokenChar(44);\n  this.newline();\n\n  if (this.endsWith(10)) {\n    for (let i = 0; i < 6; i++) this.space(true);\n  }\n}\n\nfunction VariableDeclaration(node, parent) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(node.kind);\n  this.space();\n  let hasInits = false;\n\n  if (!isFor(parent)) {\n    for (const declar of node.declarations) {\n      if (declar.init) {\n        hasInits = true;\n      }\n    }\n  }\n\n  let separator;\n\n  if (hasInits) {\n    separator = node.kind === \"const\" ? constDeclarationIndent : variableDeclarationIndent;\n  }\n\n  this.printList(node.declarations, node, {\n    separator\n  });\n\n  if (isFor(parent)) {\n    if (isForStatement(parent)) {\n      if (parent.init === node) return;\n    } else {\n      if (parent.left === node) return;\n    }\n  }\n\n  this.semicolon();\n}\n\nfunction VariableDeclarator(node) {\n  this.print(node.id, node);\n  if (node.definite) this.tokenChar(33);\n  this.print(node.id.typeAnnotation, node);\n\n  if (node.init) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.init, node);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClassAccessorProperty = ClassAccessorProperty;\nexports.ClassBody = ClassBody;\nexports.ClassExpression = exports.ClassDeclaration = ClassDeclaration;\nexports.ClassMethod = ClassMethod;\nexports.ClassPrivateMethod = ClassPrivateMethod;\nexports.ClassPrivateProperty = ClassPrivateProperty;\nexports.ClassProperty = ClassProperty;\nexports.StaticBlock = StaticBlock;\nexports._classMethodHead = _classMethodHead;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration\n} = _t;\n\nfunction ClassDeclaration(node, parent) {\n  {\n    if (!this.format.decoratorsBeforeExport || !isExportDefaultDeclaration(parent) && !isExportNamedDeclaration(parent)) {\n      this.printJoin(node.decorators, node);\n    }\n  }\n\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.printInnerComments(node);\n\n  if (node.id) {\n    this.space();\n    this.print(node.id, node);\n  }\n\n  this.print(node.typeParameters, node);\n\n  if (node.superClass) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.superClass, node);\n    this.print(node.superTypeParameters, node);\n  }\n\n  if (node.implements) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassBody(node) {\n  this.tokenChar(123);\n  this.printInnerComments(node);\n\n  if (node.body.length === 0) {\n    this.tokenChar(125);\n  } else {\n    this.newline();\n    this.indent();\n    this.printSequence(node.body, node);\n    this.dedent();\n    if (!this.endsWith(10)) this.newline();\n    this.rightBrace();\n  }\n}\n\nfunction ClassProperty(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n\n  if (node.computed) {\n    this.tokenChar(91);\n    this.print(node.key, node);\n    this.tokenChar(93);\n  } else {\n    this._variance(node);\n\n    this.print(node.key, node);\n  }\n\n  if (node.optional) {\n    this.tokenChar(63);\n  }\n\n  if (node.definite) {\n    this.tokenChar(33);\n  }\n\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassAccessorProperty(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n  this.word(\"accessor\");\n  this.printInnerComments(node);\n  this.space();\n\n  if (node.computed) {\n    this.tokenChar(91);\n    this.print(node.key, node);\n    this.tokenChar(93);\n  } else {\n    this._variance(node);\n\n    this.print(node.key, node);\n  }\n\n  if (node.optional) {\n    this.tokenChar(63);\n  }\n\n  if (node.definite) {\n    this.tokenChar(33);\n  }\n\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassPrivateProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassPrivateMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _classMethodHead(node) {\n  this.printJoin(node.decorators, node);\n  this.source(\"end\", node.key.loc);\n  this.tsPrintClassMemberModifiers(node);\n\n  this._methodHead(node);\n}\n\nfunction StaticBlock(node) {\n  this.word(\"static\");\n  this.space();\n  this.tokenChar(123);\n\n  if (node.body.length === 0) {\n    this.tokenChar(125);\n  } else {\n    this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.rightBrace();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;\nexports._functionHead = _functionHead;\nexports._methodHead = _methodHead;\nexports._param = _param;\nexports._parameters = _parameters;\nexports._params = _params;\nexports._predicate = _predicate;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isIdentifier\n} = _t;\n\nfunction _params(node) {\n  this.print(node.typeParameters, node);\n  this.tokenChar(40);\n\n  this._parameters(node.params, node);\n\n  this.tokenChar(41);\n  this.print(node.returnType, node, node.type === \"ArrowFunctionExpression\");\n}\n\nfunction _parameters(parameters, parent) {\n  for (let i = 0; i < parameters.length; i++) {\n    this._param(parameters[i], parent);\n\n    if (i < parameters.length - 1) {\n      this.tokenChar(44);\n      this.space();\n    }\n  }\n}\n\nfunction _param(parameter, parent) {\n  this.printJoin(parameter.decorators, parameter);\n  this.print(parameter, parent);\n\n  if (parameter.optional) {\n    this.tokenChar(63);\n  }\n\n  this.print(parameter.typeAnnotation, parameter);\n}\n\nfunction _methodHead(node) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this._catchUp(\"start\", key.loc);\n\n    this.word(\"async\");\n    this.space();\n  }\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (node.generator) {\n      this.tokenChar(42);\n    }\n  }\n\n  if (node.computed) {\n    this.tokenChar(91);\n    this.print(key, node);\n    this.tokenChar(93);\n  } else {\n    this.print(key, node);\n  }\n\n  if (node.optional) {\n    this.tokenChar(63);\n  }\n\n  this._params(node);\n}\n\nfunction _predicate(node) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.tokenChar(58);\n    }\n\n    this.space();\n    this.print(node.predicate, node);\n  }\n}\n\nfunction _functionHead(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  if (node.generator) this.tokenChar(42);\n  this.printInnerComments(node);\n  this.space();\n\n  if (node.id) {\n    this.print(node.id, node);\n  }\n\n  this._params(node);\n\n  if (node.type !== \"TSDeclareFunction\") {\n    this._predicate(node);\n  }\n}\n\nfunction FunctionExpression(node) {\n  this._functionHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ArrowFunctionExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  const firstParam = node.params[0];\n\n  if (!this.format.retainLines && !this.format.auxiliaryCommentBefore && !this.format.auxiliaryCommentAfter && node.params.length === 1 && isIdentifier(firstParam) && !hasTypesOrComments(node, firstParam)) {\n    this.print(firstParam, node);\n  } else {\n    this._params(node);\n  }\n\n  this._predicate(node);\n\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction hasTypesOrComments(node, param) {\n  var _param$leadingComment, _param$trailingCommen;\n\n  return !!(node.typeParameters || node.returnType || node.predicate || param.typeAnnotation || param.optional || (_param$leadingComment = param.leadingComments) != null && _param$leadingComment.length || (_param$trailingCommen = param.trailingComments) != null && _param$trailingCommen.length);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExportAllDeclaration = ExportAllDeclaration;\nexports.ExportDefaultDeclaration = ExportDefaultDeclaration;\nexports.ExportDefaultSpecifier = ExportDefaultSpecifier;\nexports.ExportNamedDeclaration = ExportNamedDeclaration;\nexports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\nexports.ExportSpecifier = ExportSpecifier;\nexports.ImportAttribute = ImportAttribute;\nexports.ImportDeclaration = ImportDeclaration;\nexports.ImportDefaultSpecifier = ImportDefaultSpecifier;\nexports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\nexports.ImportSpecifier = ImportSpecifier;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isClassDeclaration,\n  isExportDefaultSpecifier,\n  isExportNamespaceSpecifier,\n  isImportDefaultSpecifier,\n  isImportNamespaceSpecifier,\n  isStatement\n} = _t;\n\nfunction ImportSpecifier(node) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported, node);\n\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local, node);\n  }\n}\n\nfunction ImportDefaultSpecifier(node) {\n  this.print(node.local, node);\n}\n\nfunction ExportDefaultSpecifier(node) {\n  this.print(node.exported, node);\n}\n\nfunction ExportSpecifier(node) {\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.print(node.local, node);\n\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported, node);\n  }\n}\n\nfunction ExportNamespaceSpecifier(node) {\n  this.tokenChar(42);\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported, node);\n}\n\nfunction ExportAllDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.tokenChar(42);\n  this.space();\n  this.word(\"from\");\n  this.space();\n  this.print(node.source, node);\n  this.printAssertions(node);\n  this.semicolon();\n}\n\nfunction ExportNamedDeclaration(node) {\n  {\n    if (this.format.decoratorsBeforeExport && isClassDeclaration(node.declaration)) {\n      this.printJoin(node.declaration.decorators, node);\n    }\n  }\n  this.word(\"export\");\n  this.space();\n\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    const specifiers = node.specifiers.slice(0);\n    let hasSpecial = false;\n\n    for (;;) {\n      const first = specifiers[0];\n\n      if (isExportDefaultSpecifier(first) || isExportNamespaceSpecifier(first)) {\n        hasSpecial = true;\n        this.print(specifiers.shift(), node);\n\n        if (specifiers.length) {\n          this.tokenChar(44);\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length || !specifiers.length && !hasSpecial) {\n      this.tokenChar(123);\n\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, node);\n        this.space();\n      }\n\n      this.tokenChar(125);\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n      this.printAssertions(node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExportDefaultDeclaration(node) {\n  {\n    if (this.format.decoratorsBeforeExport && isClassDeclaration(node.declaration)) {\n      this.printJoin(node.declaration.decorators, node);\n    }\n  }\n  this.word(\"export\");\n  this.space();\n  this.word(\"default\");\n  this.space();\n  const declar = node.declaration;\n  this.print(declar, node);\n  if (!isStatement(declar)) this.semicolon();\n}\n\nfunction ImportDeclaration(node) {\n  this.word(\"import\");\n  this.space();\n  const isTypeKind = node.importKind === \"type\" || node.importKind === \"typeof\";\n\n  if (isTypeKind) {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  const specifiers = node.specifiers.slice(0);\n  const hasSpecifiers = !!specifiers.length;\n\n  while (hasSpecifiers) {\n    const first = specifiers[0];\n\n    if (isImportDefaultSpecifier(first) || isImportNamespaceSpecifier(first)) {\n      this.print(specifiers.shift(), node);\n\n      if (specifiers.length) {\n        this.tokenChar(44);\n        this.space();\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (specifiers.length) {\n    this.tokenChar(123);\n    this.space();\n    this.printList(specifiers, node);\n    this.space();\n    this.tokenChar(125);\n  } else if (isTypeKind && !hasSpecifiers) {\n    this.tokenChar(123);\n    this.tokenChar(125);\n  }\n\n  if (hasSpecifiers || isTypeKind) {\n    this.space();\n    this.word(\"from\");\n    this.space();\n  }\n\n  this.print(node.source, node);\n  this.printAssertions(node);\n  {\n    var _node$attributes;\n\n    if ((_node$attributes = node.attributes) != null && _node$attributes.length) {\n      this.space();\n      this.word(\"with\");\n      this.space();\n      this.printList(node.attributes, node);\n    }\n  }\n  this.semicolon();\n}\n\nfunction ImportAttribute(node) {\n  this.print(node.key);\n  this.tokenChar(58);\n  this.space();\n  this.print(node.value);\n}\n\nfunction ImportNamespaceSpecifier(node) {\n  this.tokenChar(42);\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.local, node);\n}", "'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = Buffer.isBuffer;\nconst isObject = (value) => {\n\t// This is a very simple check, but it\u2019s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\"': '\\\\\"',\n\t'\\'': '\\\\\\'',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitelist = /[ !#-&\\(-\\[\\]-_a-~]/;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(argument);\n\t\t\t}\n\t\t\tif (useDecNumbers) {\n\t\t\t\treturn String(argument);\n\t\t\t}\n\t\t\tif (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\treturn '0x' + hexadecimal;\n\t\t\t}\n\t\t\tif (useBinNumbers) {\n\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t}\n\t\t\tif (useOctNumbers) {\n\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t}\n\t\t} else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn\u2019t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it\u2019s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst string = argument;\n\t// Loop over each code unit in the string and escape it\n\tlet index = -1;\n\tconst length = string.length;\n\tresult = '';\n\twhile (++index < length) {\n\t\tconst character = string.charAt(index);\n\t\tif (options.es6) {\n\t\t\tconst first = string.charCodeAt(index);\n\t\t\tif ( // check if it\u2019s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tconst second = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\tlet hexadecimal = codePoint.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t++index;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!options.escapeEverything) {\n\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t// It\u2019s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t// so don\u2019t escape it.\n\t\t\t\tresult += character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\"') {\n\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '`') {\n\t\t\t\tresult += quote == character ? '\\\\`' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\\'') {\n\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tcharacter == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\tresult += '\\\\0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (regexSingleEscape.test(character)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\tresult += singleEscapes[character];\n\t\t\tcontinue;\n\t\t}\n\t\tconst charCode = character.charCodeAt(0);\n\t\tif (options.minimal && charCode != 0x2028 && charCode != 0x2029) {\n\t\t\tresult += character;\n\t\t\tcontinue;\n\t\t}\n\t\tlet hexadecimal = charCode.toString(16);\n\t\tif (!lowercaseHex) {\n\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t}\n\t\tconst longhand = hexadecimal.length > 2 || json;\n\t\tconst escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\tresult += escaped;\n\t\tcontinue;\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\\\$\\{');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\treturn result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\treturn result;\n};\n\njsesc.version = '2.5.2';\n\nmodule.exports = jsesc;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.BigIntLiteral = BigIntLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.Identifier = Identifier;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.RecordExpression = RecordExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.StringLiteral = StringLiteral;\nexports.TopicReference = TopicReference;\nexports.TupleExpression = TupleExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar _jsesc = require(\"jsesc\");\n\nconst {\n  isAssignmentPattern,\n  isIdentifier\n} = _t;\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.tokenChar(63);\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.tokenChar(123);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.tokenChar(125);\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.tokenChar(91);\n    this.print(node.key, node);\n    this.tokenChar(93);\n  } else {\n    if (isAssignmentPattern(node.value) && isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && isIdentifier(node.key) && isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.tokenChar(58);\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.tokenChar(91);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.tokenChar(44);\n    } else {\n      this.tokenChar(44);\n    }\n  }\n\n  this.tokenChar(93);\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.tokenChar(44);\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number(_jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const val = _jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {\n    json: true\n  }));\n\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n\n  this.word(node.value + \"m\");\n}\n\nconst validTopicTokenSet = new Set([\"^^\", \"@@\", \"^\", \"%\", \"#\"]);\n\nfunction TopicReference() {\n  const {\n    topicToken\n  } = this.format;\n\n  if (validTopicTokenSet.has(topicToken)) {\n    this.token(topicToken);\n  } else {\n    const givenTopicTokenJSON = JSON.stringify(topicToken);\n    const validTopics = Array.from(validTopicTokenSet, v => JSON.stringify(v));\n    throw new Error(`The \"topicToken\" generator option must be one of ` + `${validTopics.join(\", \")} (${givenTopicTokenJSON} received instead).`);\n  }\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.tokenChar(35);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.DeclareFunction = DeclareFunction;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclaredPredicate = DeclaredPredicate;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.EnumBooleanBody = EnumBooleanBody;\nexports.EnumBooleanMember = EnumBooleanMember;\nexports.EnumDeclaration = EnumDeclaration;\nexports.EnumDefaultedMember = EnumDefaultedMember;\nexports.EnumNumberBody = EnumNumberBody;\nexports.EnumNumberMember = EnumNumberMember;\nexports.EnumStringBody = EnumStringBody;\nexports.EnumStringMember = EnumStringMember;\nexports.EnumSymbolBody = EnumSymbolBody;\nexports.ExistsTypeAnnotation = ExistsTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.IndexedAccessType = IndexedAccessType;\nexports.InferredPredicate = InferredPredicate;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;\nexports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.NumericLiteral;\n  }\n});\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.OpaqueType = OpaqueType;\nexports.OptionalIndexedAccessType = OptionalIndexedAccessType;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.StringLiteral;\n  }\n});\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.SymbolTypeAnnotation = SymbolTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.TypeParameter = TypeParameter;\nexports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.Variance = Variance;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\n\nvar _t = require(\"@babel/types\");\n\nvar _modules = require(\"./modules\");\n\nvar _types2 = require(\"./types\");\n\nconst {\n  isDeclareExportDeclaration,\n  isStatement\n} = _t;\n\nfunction AnyTypeAnnotation() {\n  this.word(\"any\");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node, true);\n  this.tokenChar(91);\n  this.tokenChar(93);\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word(\"boolean\");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word(\"null\");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nfunction InferredPredicate() {\n  this.tokenChar(37);\n  this.word(\"checks\");\n}\n\nfunction DeclaredPredicate(node) {\n  this.tokenChar(37);\n  this.word(\"checks\");\n  this.tokenChar(40);\n  this.print(node.value, node);\n  this.tokenChar(41);\n}\n\nfunction DeclareInterface(node) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.tokenChar(46);\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.call(this, node);\n}\n\nfunction DeclareExportAllDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n\n  _modules.ExportAllDeclaration.call(this, node);\n}\n\nfunction EnumDeclaration(node) {\n  const {\n    id,\n    body\n  } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(context, name, hasExplicitType) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n\n  context.space();\n}\n\nfunction enumBody(context, node) {\n  const {\n    members\n  } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n\n  if (node.hasUnknownMembers) {\n    context.token(\"...\");\n    context.newline();\n  }\n\n  context.dedent();\n  context.token(\"}\");\n}\n\nfunction EnumBooleanBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumNumberBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumStringBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumSymbolBody(node) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nfunction EnumDefaultedMember(node) {\n  const {\n    id\n  } = node;\n  this.print(id, node);\n  this.tokenChar(44);\n}\n\nfunction enumInitializedMember(context, node) {\n  const {\n    id,\n    init\n  } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nfunction EnumBooleanMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumNumberMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumStringMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!isStatement(declar)) this.semicolon();\n  } else {\n    this.tokenChar(123);\n\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n\n    this.tokenChar(125);\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistsTypeAnnotation() {\n  this.tokenChar(42);\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.tokenChar(40);\n\n  if (node.this) {\n    this.word(\"this\");\n    this.tokenChar(58);\n    this.space();\n    this.print(node.this.typeAnnotation, node);\n\n    if (node.params.length || node.rest) {\n      this.tokenChar(44);\n      this.space();\n    }\n  }\n\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.tokenChar(44);\n      this.space();\n    }\n\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.tokenChar(41);\n\n  if (parent && (parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\" || parent.type === \"ObjectTypeProperty\" && parent.method)) {\n    this.tokenChar(58);\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.tokenChar(63);\n\n  if (node.name) {\n    this.tokenChar(58);\n    this.space();\n  }\n\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node, true);\n}\n\nfunction _interfaceish(node) {\n  var _node$extends;\n\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if ((_node$extends = node.extends) != null && _node$extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word(\"mixins\");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n\n  if (node.implements && node.implements.length) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance) {\n    if (node.variance.kind === \"plus\") {\n      this.tokenChar(43);\n    } else if (node.variance.kind === \"minus\") {\n      this.tokenChar(45);\n    }\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word(\"interface\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.tokenChar(38);\n  this.space();\n}\n\nfunction InterfaceTypeAnnotation(node) {\n  this.word(\"interface\");\n\n  if (node.extends && node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: andSeparator\n  });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word(\"mixed\");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word(\"empty\");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.tokenChar(63);\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word(\"number\");\n}\n\nfunction StringTypeAnnotation() {\n  this.word(\"string\");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word(\"this\");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.tokenChar(91);\n  this.printList(node.types, node);\n  this.tokenChar(93);\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.tokenChar(61);\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.tokenChar(58);\n  this.space();\n  if (node.optional) this.tokenChar(63);\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.tokenChar(60);\n  this.printList(node.params, node, {});\n  this.tokenChar(62);\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction OpaqueType(node) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.supertype) {\n    this.tokenChar(58);\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.impltype, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ObjectTypeAnnotation(node) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.tokenChar(123);\n  }\n\n  const props = [...node.properties, ...(node.callProperties || []), ...(node.indexers || []), ...(node.internalSlots || [])];\n\n  if (props.length) {\n    this.space();\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.tokenChar(44);\n          this.space();\n        }\n      }\n    });\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n\n    if (props.length) {\n      this.newline();\n    }\n\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.tokenChar(125);\n  }\n}\n\nfunction ObjectTypeInternalSlot(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.tokenChar(91);\n  this.tokenChar(91);\n  this.print(node.id, node);\n  this.tokenChar(93);\n  this.tokenChar(93);\n  if (node.optional) this.tokenChar(63);\n\n  if (!node.method) {\n    this.tokenChar(58);\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.tokenChar(91);\n\n  if (node.id) {\n    this.print(node.id, node);\n    this.tokenChar(58);\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.tokenChar(93);\n  this.tokenChar(58);\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.kind === \"get\" || node.kind === \"set\") {\n    this.word(node.kind);\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.print(node.key, node);\n  if (node.optional) this.tokenChar(63);\n\n  if (!node.method) {\n    this.tokenChar(58);\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.tokenChar(46);\n  this.print(node.id, node);\n}\n\nfunction SymbolTypeAnnotation() {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator() {\n  this.space();\n  this.tokenChar(124);\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: orSeparator\n  });\n}\n\nfunction TypeCastExpression(node) {\n  this.tokenChar(40);\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.tokenChar(41);\n}\n\nfunction Variance(node) {\n  if (node.kind === \"plus\") {\n    this.tokenChar(43);\n  } else {\n    this.tokenChar(45);\n  }\n}\n\nfunction VoidTypeAnnotation() {\n  this.word(\"void\");\n}\n\nfunction IndexedAccessType(node) {\n  this.print(node.objectType, node, true);\n  this.tokenChar(91);\n  this.print(node.indexType, node);\n  this.tokenChar(93);\n}\n\nfunction OptionalIndexedAccessType(node) {\n  this.print(node.objectType, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.tokenChar(91);\n  this.print(node.indexType, node);\n  this.tokenChar(93);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlockStatement = BlockStatement;\nexports.Directive = Directive;\nexports.DirectiveLiteral = DirectiveLiteral;\nexports.File = File;\nexports.InterpreterDirective = InterpreterDirective;\nexports.Placeholder = Placeholder;\nexports.Program = Program;\n\nfunction File(node) {\n  if (node.program) {\n    this.print(node.program.interpreter, node);\n  }\n\n  this.print(node.program, node);\n}\n\nfunction Program(node) {\n  this.printInnerComments(node, false);\n  this.printSequence(node.directives, node);\n  if (node.directives && node.directives.length) this.newline();\n  this.printSequence(node.body, node);\n}\n\nfunction BlockStatement(node) {\n  var _node$directives;\n\n  this.tokenChar(123);\n  this.printInnerComments(node);\n  const hasDirectives = (_node$directives = node.directives) == null ? void 0 : _node$directives.length;\n\n  if (node.body.length || hasDirectives) {\n    this.newline();\n    this.printSequence(node.directives, node, {\n      indent: true\n    });\n    if (hasDirectives) this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.removeTrailingNewline();\n    this.source(\"end\", node.loc);\n    if (!this.endsWith(10)) this.newline();\n    this.rightBrace();\n  } else {\n    this.source(\"end\", node.loc);\n    this.tokenChar(125);\n  }\n}\n\nfunction Directive(node) {\n  this.print(node.value, node);\n  this.semicolon();\n}\n\nconst unescapedSingleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*'/;\nconst unescapedDoubleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*\"/;\n\nfunction DirectiveLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const {\n    value\n  } = node;\n\n  if (!unescapedDoubleQuoteRE.test(value)) {\n    this.token(`\"${value}\"`);\n  } else if (!unescapedSingleQuoteRE.test(value)) {\n    this.token(`'${value}'`);\n  } else {\n    throw new Error(\"Malformed AST: it is not possible to print a directive containing\" + \" both unescaped single and double quotes.\");\n  }\n}\n\nfunction InterpreterDirective(node) {\n  this.token(`#!${node.value}\\n`, true);\n}\n\nfunction Placeholder(node) {\n  this.token(\"%%\");\n  this.print(node.name);\n  this.token(\"%%\");\n\n  if (node.expectedNode === \"Statement\") {\n    this.semicolon();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSXAttribute = JSXAttribute;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXClosingFragment = JSXClosingFragment;\nexports.JSXElement = JSXElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXFragment = JSXFragment;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXOpeningFragment = JSXOpeningFragment;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n\n  if (node.value) {\n    this.tokenChar(61);\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.tokenChar(58);\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.tokenChar(46);\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.tokenChar(123);\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.tokenChar(125);\n}\n\nfunction JSXExpressionContainer(node) {\n  this.tokenChar(123);\n  this.print(node.expression, node);\n  this.tokenChar(125);\n}\n\nfunction JSXSpreadChild(node) {\n  this.tokenChar(123);\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.tokenChar(125);\n}\n\nfunction JSXText(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw !== undefined) {\n    this.token(raw);\n  } else {\n    this.token(node.value);\n  }\n}\n\nfunction JSXElement(node) {\n  const open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.tokenChar(60);\n  this.print(node.name, node);\n  this.print(node.typeParameters, node);\n\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, {\n      separator: spaceSeparator\n    });\n  }\n\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.tokenChar(62);\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.tokenChar(62);\n}\n\nfunction JSXEmptyExpression(node) {\n  this.printInnerComments(node);\n}\n\nfunction JSXFragment(node) {\n  this.print(node.openingFragment, node);\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingFragment, node);\n}\n\nfunction JSXOpeningFragment() {\n  this.tokenChar(60);\n  this.tokenChar(62);\n}\n\nfunction JSXClosingFragment() {\n  this.token(\"</\");\n  this.tokenChar(62);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TSAnyKeyword = TSAnyKeyword;\nexports.TSArrayType = TSArrayType;\nexports.TSAsExpression = TSAsExpression;\nexports.TSBigIntKeyword = TSBigIntKeyword;\nexports.TSBooleanKeyword = TSBooleanKeyword;\nexports.TSCallSignatureDeclaration = TSCallSignatureDeclaration;\nexports.TSConditionalType = TSConditionalType;\nexports.TSConstructSignatureDeclaration = TSConstructSignatureDeclaration;\nexports.TSConstructorType = TSConstructorType;\nexports.TSDeclareFunction = TSDeclareFunction;\nexports.TSDeclareMethod = TSDeclareMethod;\nexports.TSEnumDeclaration = TSEnumDeclaration;\nexports.TSEnumMember = TSEnumMember;\nexports.TSExportAssignment = TSExportAssignment;\nexports.TSExpressionWithTypeArguments = TSExpressionWithTypeArguments;\nexports.TSExternalModuleReference = TSExternalModuleReference;\nexports.TSFunctionType = TSFunctionType;\nexports.TSImportEqualsDeclaration = TSImportEqualsDeclaration;\nexports.TSImportType = TSImportType;\nexports.TSIndexSignature = TSIndexSignature;\nexports.TSIndexedAccessType = TSIndexedAccessType;\nexports.TSInferType = TSInferType;\nexports.TSInstantiationExpression = TSInstantiationExpression;\nexports.TSInterfaceBody = TSInterfaceBody;\nexports.TSInterfaceDeclaration = TSInterfaceDeclaration;\nexports.TSIntersectionType = TSIntersectionType;\nexports.TSIntrinsicKeyword = TSIntrinsicKeyword;\nexports.TSLiteralType = TSLiteralType;\nexports.TSMappedType = TSMappedType;\nexports.TSMethodSignature = TSMethodSignature;\nexports.TSModuleBlock = TSModuleBlock;\nexports.TSModuleDeclaration = TSModuleDeclaration;\nexports.TSNamedTupleMember = TSNamedTupleMember;\nexports.TSNamespaceExportDeclaration = TSNamespaceExportDeclaration;\nexports.TSNeverKeyword = TSNeverKeyword;\nexports.TSNonNullExpression = TSNonNullExpression;\nexports.TSNullKeyword = TSNullKeyword;\nexports.TSNumberKeyword = TSNumberKeyword;\nexports.TSObjectKeyword = TSObjectKeyword;\nexports.TSOptionalType = TSOptionalType;\nexports.TSParameterProperty = TSParameterProperty;\nexports.TSParenthesizedType = TSParenthesizedType;\nexports.TSPropertySignature = TSPropertySignature;\nexports.TSQualifiedName = TSQualifiedName;\nexports.TSRestType = TSRestType;\nexports.TSStringKeyword = TSStringKeyword;\nexports.TSSymbolKeyword = TSSymbolKeyword;\nexports.TSThisType = TSThisType;\nexports.TSTupleType = TSTupleType;\nexports.TSTypeAliasDeclaration = TSTypeAliasDeclaration;\nexports.TSTypeAnnotation = TSTypeAnnotation;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSTypeLiteral = TSTypeLiteral;\nexports.TSTypeOperator = TSTypeOperator;\nexports.TSTypeParameter = TSTypeParameter;\nexports.TSTypeParameterDeclaration = exports.TSTypeParameterInstantiation = TSTypeParameterInstantiation;\nexports.TSTypePredicate = TSTypePredicate;\nexports.TSTypeQuery = TSTypeQuery;\nexports.TSTypeReference = TSTypeReference;\nexports.TSUndefinedKeyword = TSUndefinedKeyword;\nexports.TSUnionType = TSUnionType;\nexports.TSUnknownKeyword = TSUnknownKeyword;\nexports.TSVoidKeyword = TSVoidKeyword;\nexports.tsPrintClassMemberModifiers = tsPrintClassMemberModifiers;\nexports.tsPrintFunctionOrConstructorType = tsPrintFunctionOrConstructorType;\nexports.tsPrintPropertyOrMethodName = tsPrintPropertyOrMethodName;\nexports.tsPrintSignatureDeclarationBase = tsPrintSignatureDeclarationBase;\nexports.tsPrintTypeLiteralOrInterfaceBody = tsPrintTypeLiteralOrInterfaceBody;\n\nfunction TSTypeAnnotation(node) {\n  this.tokenChar(58);\n  this.space();\n  if (node.optional) this.tokenChar(63);\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSTypeParameterInstantiation(node, parent) {\n  this.tokenChar(60);\n  this.printList(node.params, node, {});\n\n  if (parent.type === \"ArrowFunctionExpression\" && node.params.length === 1) {\n    this.tokenChar(44);\n  }\n\n  this.tokenChar(62);\n}\n\nfunction TSTypeParameter(node) {\n  if (node.in) {\n    this.word(\"in\");\n    this.space();\n  }\n\n  if (node.out) {\n    this.word(\"out\");\n    this.space();\n  }\n\n  this.word(node.name);\n\n  if (node.constraint) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.constraint, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction TSParameterProperty(node) {\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this._param(node.parameter);\n}\n\nfunction TSDeclareFunction(node) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this._functionHead(node);\n\n  this.tokenChar(59);\n}\n\nfunction TSDeclareMethod(node) {\n  this._classMethodHead(node);\n\n  this.tokenChar(59);\n}\n\nfunction TSQualifiedName(node) {\n  this.print(node.left, node);\n  this.tokenChar(46);\n  this.print(node.right, node);\n}\n\nfunction TSCallSignatureDeclaration(node) {\n  this.tsPrintSignatureDeclarationBase(node);\n  this.tokenChar(59);\n}\n\nfunction TSConstructSignatureDeclaration(node) {\n  this.word(\"new\");\n  this.space();\n  this.tsPrintSignatureDeclarationBase(node);\n  this.tokenChar(59);\n}\n\nfunction TSPropertySignature(node) {\n  const {\n    readonly,\n    initializer\n  } = node;\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.tsPrintPropertyOrMethodName(node);\n  this.print(node.typeAnnotation, node);\n\n  if (initializer) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.tokenChar(59);\n}\n\nfunction tsPrintPropertyOrMethodName(node) {\n  if (node.computed) {\n    this.tokenChar(91);\n  }\n\n  this.print(node.key, node);\n\n  if (node.computed) {\n    this.tokenChar(93);\n  }\n\n  if (node.optional) {\n    this.tokenChar(63);\n  }\n}\n\nfunction TSMethodSignature(node) {\n  const {\n    kind\n  } = node;\n\n  if (kind === \"set\" || kind === \"get\") {\n    this.word(kind);\n    this.space();\n  }\n\n  this.tsPrintPropertyOrMethodName(node);\n  this.tsPrintSignatureDeclarationBase(node);\n  this.tokenChar(59);\n}\n\nfunction TSIndexSignature(node) {\n  const {\n    readonly,\n    static: isStatic\n  } = node;\n\n  if (isStatic) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.tokenChar(91);\n\n  this._parameters(node.parameters, node);\n\n  this.tokenChar(93);\n  this.print(node.typeAnnotation, node);\n  this.tokenChar(59);\n}\n\nfunction TSAnyKeyword() {\n  this.word(\"any\");\n}\n\nfunction TSBigIntKeyword() {\n  this.word(\"bigint\");\n}\n\nfunction TSUnknownKeyword() {\n  this.word(\"unknown\");\n}\n\nfunction TSNumberKeyword() {\n  this.word(\"number\");\n}\n\nfunction TSObjectKeyword() {\n  this.word(\"object\");\n}\n\nfunction TSBooleanKeyword() {\n  this.word(\"boolean\");\n}\n\nfunction TSStringKeyword() {\n  this.word(\"string\");\n}\n\nfunction TSSymbolKeyword() {\n  this.word(\"symbol\");\n}\n\nfunction TSVoidKeyword() {\n  this.word(\"void\");\n}\n\nfunction TSUndefinedKeyword() {\n  this.word(\"undefined\");\n}\n\nfunction TSNullKeyword() {\n  this.word(\"null\");\n}\n\nfunction TSNeverKeyword() {\n  this.word(\"never\");\n}\n\nfunction TSIntrinsicKeyword() {\n  this.word(\"intrinsic\");\n}\n\nfunction TSThisType() {\n  this.word(\"this\");\n}\n\nfunction TSFunctionType(node) {\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction TSConstructorType(node) {\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"new\");\n  this.space();\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction tsPrintFunctionOrConstructorType(node) {\n  const {\n    typeParameters\n  } = node;\n  const parameters = node.parameters;\n  this.print(typeParameters, node);\n  this.tokenChar(40);\n\n  this._parameters(parameters, node);\n\n  this.tokenChar(41);\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  const returnType = node.typeAnnotation;\n  this.print(returnType.typeAnnotation, node);\n}\n\nfunction TSTypeReference(node) {\n  this.print(node.typeName, node, true);\n  this.print(node.typeParameters, node, true);\n}\n\nfunction TSTypePredicate(node) {\n  if (node.asserts) {\n    this.word(\"asserts\");\n    this.space();\n  }\n\n  this.print(node.parameterName);\n\n  if (node.typeAnnotation) {\n    this.space();\n    this.word(\"is\");\n    this.space();\n    this.print(node.typeAnnotation.typeAnnotation);\n  }\n}\n\nfunction TSTypeQuery(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.exprName);\n\n  if (node.typeParameters) {\n    this.print(node.typeParameters, node);\n  }\n}\n\nfunction TSTypeLiteral(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.members, node);\n}\n\nfunction tsPrintTypeLiteralOrInterfaceBody(members, node) {\n  tsPrintBraced(this, members, node);\n}\n\nfunction tsPrintBraced(printer, members, node) {\n  printer.token(\"{\");\n\n  if (members.length) {\n    printer.indent();\n    printer.newline();\n\n    for (const member of members) {\n      printer.print(member, node);\n      printer.newline();\n    }\n\n    printer.dedent();\n    printer.rightBrace();\n  } else {\n    printer.token(\"}\");\n  }\n}\n\nfunction TSArrayType(node) {\n  this.print(node.elementType, node, true);\n  this.token(\"[]\");\n}\n\nfunction TSTupleType(node) {\n  this.tokenChar(91);\n  this.printList(node.elementTypes, node);\n  this.tokenChar(93);\n}\n\nfunction TSOptionalType(node) {\n  this.print(node.typeAnnotation, node);\n  this.tokenChar(63);\n}\n\nfunction TSRestType(node) {\n  this.token(\"...\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSNamedTupleMember(node) {\n  this.print(node.label, node);\n  if (node.optional) this.tokenChar(63);\n  this.tokenChar(58);\n  this.space();\n  this.print(node.elementType, node);\n}\n\nfunction TSUnionType(node) {\n  tsPrintUnionOrIntersectionType(this, node, \"|\");\n}\n\nfunction TSIntersectionType(node) {\n  tsPrintUnionOrIntersectionType(this, node, \"&\");\n}\n\nfunction tsPrintUnionOrIntersectionType(printer, node, sep) {\n  printer.printJoin(node.types, node, {\n    separator() {\n      this.space();\n      this.token(sep);\n      this.space();\n    }\n\n  });\n}\n\nfunction TSConditionalType(node) {\n  this.print(node.checkType);\n  this.space();\n  this.word(\"extends\");\n  this.space();\n  this.print(node.extendsType);\n  this.space();\n  this.tokenChar(63);\n  this.space();\n  this.print(node.trueType);\n  this.space();\n  this.tokenChar(58);\n  this.space();\n  this.print(node.falseType);\n}\n\nfunction TSInferType(node) {\n  this.token(\"infer\");\n  this.space();\n  this.print(node.typeParameter);\n}\n\nfunction TSParenthesizedType(node) {\n  this.tokenChar(40);\n  this.print(node.typeAnnotation, node);\n  this.tokenChar(41);\n}\n\nfunction TSTypeOperator(node) {\n  this.word(node.operator);\n  this.space();\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSIndexedAccessType(node) {\n  this.print(node.objectType, node, true);\n  this.tokenChar(91);\n  this.print(node.indexType, node);\n  this.tokenChar(93);\n}\n\nfunction TSMappedType(node) {\n  const {\n    nameType,\n    optional,\n    readonly,\n    typeParameter\n  } = node;\n  this.tokenChar(123);\n  this.space();\n\n  if (readonly) {\n    tokenIfPlusMinus(this, readonly);\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.tokenChar(91);\n  this.word(typeParameter.name);\n  this.space();\n  this.word(\"in\");\n  this.space();\n  this.print(typeParameter.constraint, typeParameter);\n\n  if (nameType) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(nameType, node);\n  }\n\n  this.tokenChar(93);\n\n  if (optional) {\n    tokenIfPlusMinus(this, optional);\n    this.tokenChar(63);\n  }\n\n  this.tokenChar(58);\n  this.space();\n  this.print(node.typeAnnotation, node);\n  this.space();\n  this.tokenChar(125);\n}\n\nfunction tokenIfPlusMinus(self, tok) {\n  if (tok !== true) {\n    self.token(tok);\n  }\n}\n\nfunction TSLiteralType(node) {\n  this.print(node.literal, node);\n}\n\nfunction TSExpressionWithTypeArguments(node) {\n  this.print(node.expression, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSInterfaceDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    extends: extendz,\n    body\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"interface\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n\n  if (extendz != null && extendz.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(extendz, node);\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSInterfaceBody(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.body, node);\n}\n\nfunction TSTypeAliasDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    typeAnnotation\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"type\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n  this.space();\n  this.tokenChar(61);\n  this.space();\n  this.print(typeAnnotation, node);\n  this.tokenChar(59);\n}\n\nfunction TSAsExpression(node) {\n  const {\n    expression,\n    typeAnnotation\n  } = node;\n  this.print(expression, node);\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(typeAnnotation, node);\n}\n\nfunction TSTypeAssertion(node) {\n  const {\n    typeAnnotation,\n    expression\n  } = node;\n  this.tokenChar(60);\n  this.print(typeAnnotation, node);\n  this.tokenChar(62);\n  this.space();\n  this.print(expression, node);\n}\n\nfunction TSInstantiationExpression(node) {\n  this.print(node.expression, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSEnumDeclaration(node) {\n  const {\n    declare,\n    const: isConst,\n    id,\n    members\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (isConst) {\n    this.word(\"const\");\n    this.space();\n  }\n\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  tsPrintBraced(this, members, node);\n}\n\nfunction TSEnumMember(node) {\n  const {\n    id,\n    initializer\n  } = node;\n  this.print(id, node);\n\n  if (initializer) {\n    this.space();\n    this.tokenChar(61);\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.tokenChar(44);\n}\n\nfunction TSModuleDeclaration(node) {\n  const {\n    declare,\n    id\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (!node.global) {\n    this.word(id.type === \"Identifier\" ? \"namespace\" : \"module\");\n    this.space();\n  }\n\n  this.print(id, node);\n\n  if (!node.body) {\n    this.tokenChar(59);\n    return;\n  }\n\n  let body = node.body;\n\n  while (body.type === \"TSModuleDeclaration\") {\n    this.tokenChar(46);\n    this.print(body.id, body);\n    body = body.body;\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSModuleBlock(node) {\n  tsPrintBraced(this, node.body, node);\n}\n\nfunction TSImportType(node) {\n  const {\n    argument,\n    qualifier,\n    typeParameters\n  } = node;\n  this.word(\"import\");\n  this.tokenChar(40);\n  this.print(argument, node);\n  this.tokenChar(41);\n\n  if (qualifier) {\n    this.tokenChar(46);\n    this.print(qualifier, node);\n  }\n\n  if (typeParameters) {\n    this.print(typeParameters, node);\n  }\n}\n\nfunction TSImportEqualsDeclaration(node) {\n  const {\n    isExport,\n    id,\n    moduleReference\n  } = node;\n\n  if (isExport) {\n    this.word(\"export\");\n    this.space();\n  }\n\n  this.word(\"import\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  this.tokenChar(61);\n  this.space();\n  this.print(moduleReference, node);\n  this.tokenChar(59);\n}\n\nfunction TSExternalModuleReference(node) {\n  this.token(\"require(\");\n  this.print(node.expression, node);\n  this.tokenChar(41);\n}\n\nfunction TSNonNullExpression(node) {\n  this.print(node.expression, node);\n  this.tokenChar(33);\n}\n\nfunction TSExportAssignment(node) {\n  this.word(\"export\");\n  this.space();\n  this.tokenChar(61);\n  this.space();\n  this.print(node.expression, node);\n  this.tokenChar(59);\n}\n\nfunction TSNamespaceExportDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.word(\"namespace\");\n  this.space();\n  this.print(node.id, node);\n}\n\nfunction tsPrintSignatureDeclarationBase(node) {\n  const {\n    typeParameters\n  } = node;\n  const parameters = node.parameters;\n  this.print(typeParameters, node);\n  this.tokenChar(40);\n\n  this._parameters(parameters, node);\n\n  this.tokenChar(41);\n  const returnType = node.typeAnnotation;\n  this.print(returnType, node);\n}\n\nfunction tsPrintClassMemberModifiers(node) {\n  const isField = node.type === \"ClassAccessorProperty\" || node.type === \"ClassProperty\";\n\n  if (isField && node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.override) {\n    this.word(\"override\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  if (isField && node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateLiterals = require(\"./template-literals\");\n\nObject.keys(_templateLiterals).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _templateLiterals[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _templateLiterals[key];\n    }\n  });\n});\n\nvar _expressions = require(\"./expressions\");\n\nObject.keys(_expressions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _expressions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _expressions[key];\n    }\n  });\n});\n\nvar _statements = require(\"./statements\");\n\nObject.keys(_statements).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _statements[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _statements[key];\n    }\n  });\n});\n\nvar _classes = require(\"./classes\");\n\nObject.keys(_classes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _classes[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _classes[key];\n    }\n  });\n});\n\nvar _methods = require(\"./methods\");\n\nObject.keys(_methods).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _methods[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _methods[key];\n    }\n  });\n});\n\nvar _modules = require(\"./modules\");\n\nObject.keys(_modules).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _modules[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _modules[key];\n    }\n  });\n});\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\n\nvar _flow = require(\"./flow\");\n\nObject.keys(_flow).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _flow[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _flow[key];\n    }\n  });\n});\n\nvar _base = require(\"./base\");\n\nObject.keys(_base).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _base[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _base[key];\n    }\n  });\n});\n\nvar _jsx = require(\"./jsx\");\n\nObject.keys(_jsx).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _jsx[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _jsx[key];\n    }\n  });\n});\n\nvar _typescript = require(\"./typescript\");\n\nObject.keys(_typescript).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _typescript[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _typescript[key];\n    }\n  });\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buffer = require(\"./buffer\");\n\nvar n = require(\"./node\");\n\nvar generatorFunctions = require(\"./generators\");\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\nconst PURE_ANNOTATION_RE = /^\\s*[@#]__PURE__\\s*$/;\nconst {\n  needsParens,\n  needsWhitespaceAfter,\n  needsWhitespaceBefore\n} = n;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._indentChar = 0;\n    this._indentRepeat = 0;\n    this._insideAux = false;\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new Set();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format;\n    this._buf = new _buffer.default(map);\n    this._indentChar = format.indent.style.charCodeAt(0);\n    this._indentRepeat = format.indent.style.length;\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    if (force) {\n      this._appendChar(59);\n    } else {\n      this._queue(59);\n    }\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.tokenChar(125);\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (force) {\n      this._space();\n    } else if (this._buf.hasContent()) {\n      const lastCp = this.getLastChar();\n\n      if (lastCp !== 32 && lastCp !== 10) {\n        this._space();\n      }\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || str.charCodeAt(0) === 47 && this.endsWith(47)) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str, false);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = Number.isInteger(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str.charCodeAt(str.length - 1) !== 46;\n  }\n\n  token(str, maybeNewline = false) {\n    const lastChar = this.getLastChar();\n    const strFirst = str.charCodeAt(0);\n\n    if (lastChar === 33 && str === \"--\" || strFirst === 43 && lastChar === 43 || strFirst === 45 && lastChar === 45 || strFirst === 46 && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str, maybeNewline);\n  }\n\n  tokenChar(char) {\n    const lastChar = this.getLastChar();\n\n    if (char === 43 && lastChar === 43 || char === 45 && lastChar === 45 || char === 46 && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._appendChar(char);\n  }\n\n  newline(i = 1) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    const charBeforeNewline = this.endsWithCharAndNewline();\n    if (charBeforeNewline === 10) return;\n\n    if (charBeforeNewline === 123 || charBeforeNewline === 58) {\n      i--;\n    }\n\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(char) {\n    return this.getLastChar() === char;\n  }\n\n  getLastChar() {\n    return this._buf.getLastChar();\n  }\n\n  endsWithCharAndNewline() {\n    return this._buf.endsWithCharAndNewline();\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._queue(32);\n  }\n\n  _newline() {\n    this._queue(10);\n  }\n\n  _append(str, maybeNewline) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str.charCodeAt(0));\n\n    this._buf.append(str, maybeNewline);\n\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _appendChar(char) {\n    this._maybeAddParenChar(char);\n\n    this._maybeIndent(char);\n\n    this._buf.appendChar(char);\n\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _queue(char) {\n    this._maybeAddParenChar(char);\n\n    this._maybeIndent(char);\n\n    this._buf.queue(char);\n\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(firstChar) {\n    if (this._indent && firstChar !== 10 && this.endsWith(10)) {\n      this._buf.queueIndentation(this._indentChar, this._getIndent());\n    }\n  }\n\n  _maybeAddParenChar(char) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n\n    if (char === 32) {\n      return;\n    }\n\n    if (char !== 10) {\n      this._parenPushNewlineState = null;\n      return;\n    }\n\n    this.tokenChar(40);\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    const len = str.length;\n    let i;\n\n    for (i = 0; i < len && str.charCodeAt(i) === 32; i++) continue;\n\n    if (i === len) {\n      return;\n    }\n\n    const cha = str.charCodeAt(i);\n\n    if (cha !== 10) {\n      if (cha !== 47 || i + 1 === len) {\n        this._parenPushNewlineState = null;\n        return;\n      }\n\n      const chaPost = str.charCodeAt(i + 1);\n\n      if (chaPost === 42) {\n        if (PURE_ANNOTATION_RE.test(str.slice(i + 2, len - 2))) {\n          return;\n        }\n      } else if (chaPost !== 47) {\n        this._parenPushNewlineState = null;\n        return;\n      }\n    }\n\n    this.tokenChar(40);\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if ((pos == null ? void 0 : pos.line) != null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return this._indentRepeat * this._indent;\n  }\n\n  printTerminatorless(node, parent, isLabel) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      this.print(node, parent);\n      this._noLineTerminator = false;\n    } else {\n      const terminatorState = {\n        printed: false\n      };\n      this._parenPushNewlineState = terminatorState;\n      this.print(node, parent);\n\n      if (terminatorState.printed) {\n        this.dedent();\n        this.newline();\n        this.tokenChar(41);\n      }\n    }\n  }\n\n  print(node, parent, noLineTerminator) {\n    if (!node) return;\n    const nodeType = node.type;\n    const format = this.format;\n    const oldConcise = format.concise;\n\n    if (node._compact) {\n      format.concise = true;\n    }\n\n    const printMethod = this[nodeType];\n\n    if (printMethod === undefined) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(nodeType)} with constructor ${JSON.stringify(node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = node.loc == undefined;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let shouldPrintParens;\n\n    if (format.retainFunctionParens && nodeType === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      shouldPrintParens = true;\n    } else {\n      shouldPrintParens = needsParens(node, parent, this._printStack);\n    }\n\n    if (shouldPrintParens) this.tokenChar(40);\n\n    this._printLeadingComments(node);\n\n    const loc = nodeType === \"Program\" || nodeType === \"File\" ? null : node.loc;\n    this.withSource(\"start\", loc, printMethod.bind(this, node, parent));\n\n    if (noLineTerminator && !this._noLineTerminator) {\n      this._noLineTerminator = true;\n\n      this._printTrailingComments(node);\n\n      this._noLineTerminator = false;\n    } else {\n      this._printTrailingComments(node);\n    }\n\n    if (shouldPrintParens) this.tokenChar(41);\n\n    this._printStack.pop();\n\n    format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!(nodes != null && nodes.length)) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n    const len = nodes.length;\n\n    for (let i = 0; i < len; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < len - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (node.type !== \"EmptyStatement\") {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node), true);\n  }\n\n  printInnerComments(node, indent = true) {\n    var _node$innerComments;\n\n    if (!((_node$innerComments = node.innerComments) != null && _node$innerComments.length)) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? needsWhitespaceBefore : needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(Math.min(2, lines));\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || null;\n  }\n\n  _printComment(comment, skipNewLines) {\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n    if (!this.format.shouldPrintComment(comment.value)) return;\n\n    this._printedComments.add(comment);\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    const printNewLines = isBlockComment && !skipNewLines && !this._noLineTerminator;\n    if (printNewLines && this._buf.hasContent()) this.newline(1);\n    const lastCharCode = this.getLastChar();\n\n    if (lastCharCode !== 91 && lastCharCode !== 123) {\n      this.space();\n    }\n\n    let val;\n    let maybeNewline = false;\n\n    if (isBlockComment) {\n      val = `/*${comment.value}*/`;\n\n      if (this.format.indent.adjustMultilineComment) {\n        var _comment$loc;\n\n        const offset = (_comment$loc = comment.loc) == null ? void 0 : _comment$loc.start.column;\n\n        if (offset) {\n          const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n          val = val.replace(newlineRegex, \"\\n\");\n        }\n\n        const indentSize = Math.max(this._getIndent(), this.format.retainLines ? 0 : this._buf.getCurrentColumn());\n        val = val.replace(/\\n(?!$)/g, `\\n${\" \".repeat(indentSize)}`);\n        maybeNewline = true;\n      }\n    } else if (!this._noLineTerminator) {\n      val = `//${comment.value}\\n`;\n      maybeNewline = true;\n    }\n\n    if (this.endsWith(47)) this._space();\n    this.withSource(\"start\", comment.loc, this._append.bind(this, val, maybeNewline));\n    if (printNewLines) this.newline(1);\n  }\n\n  _printComments(comments, inlinePureAnnotation) {\n    if (!(comments != null && comments.length)) return;\n\n    if (inlinePureAnnotation && comments.length === 1 && PURE_ANNOTATION_RE.test(comments[0].value)) {\n      this._printComment(comments[0], this._buf.hasContent() && !this.endsWith(10));\n    } else {\n      for (const comment of comments) {\n        this._printComment(comment);\n      }\n    }\n  }\n\n  printAssertions(node) {\n    var _node$assertions;\n\n    if ((_node$assertions = node.assertions) != null && _node$assertions.length) {\n      this.space();\n      this.word(\"assert\");\n      this.space();\n      this.tokenChar(123);\n      this.space();\n      this.printList(node.assertions, node);\n      this.space();\n      this.tokenChar(125);\n    }\n  }\n\n}\n\nObject.assign(Printer.prototype, generatorFunctions);\n{\n  Printer.prototype.Noop = function Noop() {};\n}\nvar _default = Printer;\nexports.default = _default;\n\nfunction commaSeparator() {\n  this.tokenChar(44);\n  this.space();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGenerator = void 0;\nexports.default = generate;\n\nvar _sourceMap = require(\"./source-map\");\n\nvar _printer = require(\"./printer\");\n\nclass Generator extends _printer.default {\n  constructor(ast, opts = {}, code) {\n    const format = normalizeOptions(code, opts);\n    const map = opts.sourceMaps ? new _sourceMap.default(opts, code) : null;\n    super(format, map);\n    this.ast = void 0;\n    this.ast = ast;\n  }\n\n  generate() {\n    return super.generate(this.ast);\n  }\n\n}\n\nfunction normalizeOptions(code, opts) {\n  const format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n      base: 0\n    },\n    jsescOption: Object.assign({\n      quotes: \"double\",\n      wrap: true,\n      minimal: false\n    }, opts.jsescOption),\n    recordAndTupleSyntaxType: opts.recordAndTupleSyntaxType,\n    topicToken: opts.topicToken\n  };\n  {\n    format.decoratorsBeforeExport = !!opts.decoratorsBeforeExport;\n    format.jsonCompatibleStrings = opts.jsonCompatibleStrings;\n  }\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment = format.shouldPrintComment || (() => format.comments);\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || (value => format.comments || value.includes(\"@license\") || value.includes(\"@preserve\"));\n  }\n\n  if (format.compact === \"auto\") {\n    format.compact = code.length > 500000;\n\n    if (format.compact) {\n      console.error(\"[BABEL] Note: The code generator has deoptimised the styling of \" + `${opts.filename} as it exceeds the max of ${\"500KB\"}.`);\n    }\n  }\n\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  return format;\n}\n\nclass CodeGenerator {\n  constructor(ast, opts, code) {\n    this._generator = void 0;\n    this._generator = new Generator(ast, opts, code);\n  }\n\n  generate() {\n    return this._generator.generate();\n  }\n\n}\n\nexports.CodeGenerator = CodeGenerator;\n\nfunction generate(ast, opts, code) {\n  const gen = new Generator(ast, opts, code);\n  return gen.generate();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.find = find;\nexports.findParent = findParent;\nexports.getAncestry = getAncestry;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.inType = inType;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUnionType = createUnionType;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  isFlowType,\n  isTSType\n} = _t;\n\nfunction createUnionType(types) {\n  {\n    if (isFlowType(types[0])) {\n      if (createFlowUnionType) {\n        return createFlowUnionType(types);\n      }\n\n      return createUnionTypeAnnotation(types);\n    } else {\n      if (createTSUnionType) {\n        return createTSUnionType(types);\n      }\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nvar _util = require(\"./util\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createTypeAnnotationBasedOnTypeof,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  return (0, _util.createUnionType)(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    return {\n      typeAnnotation: (0, _util.createUnionType)(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(binding, ifStatement, name);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayExpression = ArrayExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.BooleanLiteral = BooleanLiteral;\nexports.CallExpression = CallExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\nexports.LogicalExpression = LogicalExpression;\nexports.NewExpression = NewExpression;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.RestElement = RestElement;\nexports.SequenceExpression = SequenceExpression;\nexports.StringLiteral = StringLiteral;\nexports.TSAsExpression = TSAsExpression;\nexports.TSNonNullExpression = TSNonNullExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.TypeCastExpression = TypeCastExpression;\nexports.UnaryExpression = UnaryExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.VariableDeclarator = VariableDeclarator;\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nvar _util = require(\"./util\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  genericTypeAnnotation,\n  identifier,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation,\n  isIdentifier\n} = _t;\n\nfunction VariableDeclarator() {\n  if (!this.get(\"id\").isIdentifier()) return;\n  return this.get(\"init\").getTypeAnnotation();\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction TSAsExpression(node) {\n  return node.typeAnnotation;\n}\n\nTSAsExpression.validParent = true;\n\nfunction TSNonNullExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction NewExpression(node) {\n  if (node.callee.type === \"Identifier\") {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n  return (0, _util.createUnionType)(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n  return (0, _util.createUnionType)(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee) || isIdentifier(callee, {\n    name: \"Array\"\n  })) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    const {\n      node\n    } = callee;\n\n    if (node.async) {\n      if (node.generator) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (node.generator) {\n        return genericTypeAnnotation(identifier(\"Iterator\"));\n      } else if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.couldBeBaseType = couldBeBaseType;\nexports.getTypeAnnotation = getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isArrayTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTSArrayType,\n  isTSTypeAnnotation,\n  isTSTypeReference,\n  isTupleTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  let type = this.getData(\"typeAnnotation\");\n\n  if (type != null) {\n    return type;\n  }\n\n  type = this._getTypeAnnotation() || anyTypeAnnotation();\n\n  if (isTypeAnnotation(type) || isTSTypeAnnotation(type)) {\n    type = type.typeAnnotation;\n  }\n\n  this.setData(\"typeAnnotation\", type);\n  return type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n\n  if (genericName === \"Array\") {\n    if (isTSArrayType(type) || isArrayTypeAnnotation(type) || isTupleTypeAnnotation(type)) {\n      return true;\n    }\n  }\n\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  }) || isTSTypeReference(type) && isIdentifier(type.typeName, {\n    name: genericName\n  });\n}", "// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n", "'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (code !== \"\" && shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparanthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparanthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with \u201CPipeline\u201D or \u201CPrimaryTopic\u201D\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error plugin may override interfaces\n  class extends superClass {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt<N.ExpressionStatement>(\n        directive.start,\n        directive.loc.start,\n      );\n      const expression = this.startNodeAt<N.EstreeLiteral>(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      // @ts-expect-error TS2339: Property 'raw' does not exist on type 'Undone '.\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.loc.end,\n      );\n      // @ts-expect-error N.Directive.value is not defined\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.loc.end);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync?: boolean | null,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [\n        boolean | undefined | null,\n        boolean,\n        TokenType,\n        void | ((a: boolean) => void),\n      ]\n    ): void {\n      // @ts-expect-error figure out args typings\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(unfinished: Undone<N.AnyExport>) {\n      const node = super.parseExport(unfinished);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the \u201Cargument\u201D subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type { PluginConfig } from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin\u2019s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number;\n  end: number;\n  comments: Array<Comment>;\n  leadingNode: Node | null;\n  trailingNode: Node | null;\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Undone<Node>} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine,\n      } = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      ));\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return { pos, str: out, containsInvalid, lineStart, curLine };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simplified tokenizer state structure\n    // @ts-expect-error\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        // @ts-expect-error strictNullCheck is not enabled\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // @ts-expect-error\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, containsInvalid, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        containsInvalid ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        containsInvalid ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return ((isAsync ? PARAM_AWAIT : 0) |\n    (isGenerator ? PARAM_YIELD : 0)) as ParamKind;\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length] as ParseError<any>,\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error\n  NodePrototype.__clone = function (): Node {\n    // @ts-expect-error\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] =\n          // @ts-expect-error: key must present in this\n          this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(pos: number, loc: Position): Undone<T> {\n    // @ts-expect-error\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: Undone<N.FlowDeclare>,\n      isClass: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(\n          startPos,\n          startLoc,\n        );\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context?: string | null, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, ...rest: [boolean, BindingTypes]) {\n      return type === \"TypeCastExpression\" || super.isValidLVal(type, ...rest);\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      allowModifiers?: boolean,\n    ): void {\n      // @ts-expect-error\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(node, allowDuplicates, isArrowFunction);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(\n        startPos,\n        startLoc,\n      );\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", loc };\n      // @ts-expect-error: fixme\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startPos,\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(\n                  this.jsxParseSpreadChild(node as Undone<N.JSXSpreadChild>),\n                );\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(\n                    node as Undone<N.JSXExpressionContainer>,\n                    tc.j_expr,\n                  ),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { Position, createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({ name }: { name: string }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error plugin may override interfaces\n  class extends superClass {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: ModifierBase;\n      allowedModifiers: readonly TsModifier[];\n      disallowedModifiers?: TsModifier[];\n      stopOnStartOfClassStaticBlock?: boolean;\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any;\n    }): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: Undone<N.TsTypeParameter>,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): N.TsTypeReference | undefined | null {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(tt.parenR, charCodes.rightParenthesis)\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type: N.TsType | N.TsNamedTupleMember = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = type.typeName as N.Identifier;\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // @ts-expect-error\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        // @ts-expect-error\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate as N.TsThisType;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate as N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node as Undone<N.TsModuleDeclaration>;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(\n            startPos,\n            startLoc,\n          );\n          node.typeParameters = this.tsParseTypeParameters();\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: boolean | undefined | null,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: N.Accessibility | undefined | null;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified: ModifierBase = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if (\n          // @ts-expect-error\n          node.declare\n        ) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      ...args: [TokenType, boolean, boolean, ExpressionErrors | null]\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression = this.startNodeAt<N.TsNonNullExpression>(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<N.CallExpression>(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              // @ts-expect-error\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node = this.startNodeAt<N.TsAsExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: Undone<N.Node>): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      context?: string | null,\n      topLevel?: boolean | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(\n            classBody,\n            member as any as N.StaticBlock,\n          );\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMember>,\n      ...args: [\n        number | undefined | null,\n        Position | undefined | null,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        ExpressionErrors | null,\n      ]\n    ): N.ObjectMethod | N.ObjectProperty {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      ...args: [ExpressionErrors | null, Function]\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      ...args: [\n        startPos?: number | null,\n        startLoc?: Position | null,\n        left?: N.Pattern | null,\n      ]\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: N.Expression[],\n      ...args: [Position | undefined | null, boolean]\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, ...args);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      // @ts-expect-error calling JSX methods\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      ...args: [boolean, boolean]\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          node as N.ClassDeclaration,\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      ...args: [\n        Undone<T>,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        T[\"type\"],\n        boolean,\n      ]\n    ) {\n      const method = super.parseMethod(...args);\n      // @ts-expect-error abstract is not in ObjectMethod\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(node[rightOfAsKey], BIND_LEXICAL);\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { Position } from \"../util/location\";\n\ntype $Call1<F extends (...args: any) => any, A> = F extends (\n  a: A,\n  ...args: any\n) => infer R\n  ? R\n  : never;\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call1<\n  // @ts-expect-error Fixme broken fake switch\n  (a: Cases[Index][0]) => Cases[Index][1],\n  Value\n>;\n\ntype $Switch<Value, Cases> = _Switch<Value, Cases, any>;\ntype NodeOf<T extends PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ]\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error Plugin will override parser interface\n  class extends superClass {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n      // @ts-expect-error placeholder typings\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    // @ts-expect-error Plugin will override parser interface\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    isValidLVal(type: string, ...rest: [boolean, BindingTypes]) {\n      return type === \"Placeholder\" || super.isValidLVal(type, ...rest);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context?: string | null): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error\n        const stmt: N.LabeledStatement = node;\n        // @ts-expect-error: Fixme: placeholder typings\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      // @ts-expect-error: Fixme: placeholder typings\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseFunctionId(): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          // @ts-expect-error: placeholder typings\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          // @ts-expect-error: placeholder typings\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      // @ts-expect-error placeholder typings\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      // @ts-expect-error placeholder typings\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      // @ts-expect-error placeholder typings\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        // @ts-expect-error placeholder typings\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      // @ts-expect-error placeholder typings\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      // @ts-expect-error placeholder typings\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    // @ts-expect-error placeholder typings\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        // @ts-expect-error placeholder typings\n        super.parseImportSource(...arguments)\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression | void {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type { PluginConfig } from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function\u2019s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    // @ts-expect-error Fixme: should check whether option is defined\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: {\n  [name: string]: MixinPlugin;\n} = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  ObjectMember,\n  ObjectExpression,\n  ArrayExpression,\n  ArrayPattern,\n  /*:: TsNamedTypeElementBase, */\n  /*:: PrivateName, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  +parsePrivateName: () => PrivateName\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): Array<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    allowModifiers: boolean | undefined | null,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startPos?: number | null,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      allowingSloppyLetBinding?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // Flow has difficulty tracking `key` and `expression`, but only if we use\n    // null-proto objects. If we use normal objects, everything works fine.\n    // @ts-expect-error\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          // @ts-expect-error: refine types\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\n/*::\nimport type { SourceType } from \"../options\";\ndeclare var invariant;\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(\n          finishedNode,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startPos,\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startPos, startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode<N.Class>();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that \u201Ctopic token\u201D.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the \u201Ctopic token\u201D, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token\u2019s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin\u2019s configuration matches the current token\u2019s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin\u2019s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin\u2019s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin\u2019s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin\u2019s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin\u2019s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration\u2019s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(\n      startPos,\n      startLoc,\n    );\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(\n        innerStartPos,\n        innerStartLoc,\n      );\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startPos,\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt<N.ParenthesizedExpression>(\n      startPos,\n      startLoc,\n    );\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startPos: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(\n    node: N.BodilessFunctionOrMethodBase,\n    isAsync?: boolean | null,\n  ): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead \u2260 {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error\n                !!node.key\n                  ? // @ts-expect-error node.key has been gaurded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(\n    this: Parser,\n    startPos: number,\n    startLoc: Position,\n  ): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(\n        startPos,\n        startLoc,\n      );\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(\n        startPos,\n        startLoc,\n      );\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser\u2019s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context?: string | null): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context?: string | null): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean,\n  ): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean | null,\n  ): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !context,\n        );\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node as Undone<N.ClassDeclaration>, true);\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !context,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        context,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    context?: string | null,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\",\n  ): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    statement: number = FUNC_NO_FLAGS,\n    isAsync: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowModifiers?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const publicProp: $FlowSubtype<N.ClassProperty> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const privateProp: $FlowSubtype<N.ClassPrivateProperty> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const accessorProp: $FlowSubtype<N.ClassAccessorProperty> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(\n        node as Undone<N.ExportNamedDeclaration>,\n        true,\n        false,\n        !!(node as Undone<N.ExportNamedDeclaration>).source,\n      );\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      (node as Undone<N.ExportDefaultDeclaration>).declaration =\n        this.parseExportDefaultExpression();\n      this.checkExport(node as Undone<N.ExportDefaultDeclaration>, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr as Undone<N.FunctionExpression>,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    return this.parseStatement(null) as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error\n      const { specifiers } = node;\n      // @ts-expect-error\n      if (node.specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"]) {\n    this.checkLVal(specifier.local, {\n      // @ts-expect-error refine types\n      in: specifier,\n      binding: BIND_LEXICAL,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type { File, Program /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler<any>;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode() as File;\n    const program = this.startNode() as Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport {\n  ExportedTokenType,\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hoistVariables;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assignmentExpression,\n  expressionStatement,\n  identifier\n} = _t;\nconst visitor = {\n  Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n\n  FunctionParent(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n    const nodes = [];\n    const declarations = path.get(\"declarations\");\n    let firstId;\n\n    for (const declar of declarations) {\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(expressionStatement(assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n      }\n\n      for (const name of Object.keys(declar.getBindingIdentifiers())) {\n        state.emit(identifier(name), name, declar.node.init !== null);\n      }\n    }\n\n    if (path.parentPath.isFor({\n      left: path.node\n    })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n\n};\n\nfunction hoistVariables(path, emit, kind = \"var\") {\n  path.traverse(visitor, {\n    kind,\n    emit\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\nexports.replaceWith = replaceWith;\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n  let ast;\n\n  try {\n    replacement = `(${replacement})`;\n    ast = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  const expressionAST = ast.program.body[0].expression;\n\n  _index.default.removeProperties(expressionAST);\n\n  return this.replaceWith(expressionAST);\n}\n\nfunction replaceWith(replacementPath) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  let replacement = replacementPath instanceof _index2.default ? replacementPath.node : replacementPath;\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluate = evaluate;\nexports.evaluateTruthy = evaluateTruthy;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction isValidCallee(val) {\n  return VALID_CALLEES.includes(val);\n}\n\nfunction isInvalidMethod(val) {\n  return INVALID_METHODS.includes(val);\n}\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && isValidCallee(callee.node.name)) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && isValidCallee(object.node.name) && !isInvalidMethod(property.node.name)) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.normalizeReplacements = normalizeReplacements;\nexports.validate = validate;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = exports.default = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _template = require(\"@babel/template\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  cloneNode,\n  identifier,\n  isAssignmentExpression,\n  isAssignmentPattern,\n  isFunction,\n  isIdentifier,\n  isLiteral,\n  isNullLiteral,\n  isObjectMethod,\n  isObjectProperty,\n  isRegExpLiteral,\n  isRestElement,\n  isTemplateLiteral,\n  isVariableDeclarator,\n  toBindingIdentifierName\n} = _t;\n\nfunction getFunctionArity(node) {\n  const count = node.params.findIndex(param => isAssignmentPattern(param) || isRestElement(param));\n  return count === -1 ? node.params.length : count;\n}\n\nconst buildPropertyMethodAssignmentWrapper = _template.default.statement(`\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\n\nconst buildGeneratorPropertyMethodAssignmentWrapper = _template.default.statement(`\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\n\nconst visitor = {\n  \"ReferencedIdentifier|BindingIdentifier\"(path, state) {\n    if (path.node.name !== state.name) return;\n    const localDeclar = path.scope.getBindingIdentifier(state.name);\n    if (localDeclar !== state.outerDeclar) return;\n    state.selfReference = true;\n    path.stop();\n  }\n\n};\n\nfunction getNameFromLiteralId(id) {\n  if (isNullLiteral(id)) {\n    return \"null\";\n  }\n\n  if (isRegExpLiteral(id)) {\n    return `_${id.pattern}_${id.flags}`;\n  }\n\n  if (isTemplateLiteral(id)) {\n    return id.quasis.map(quasi => quasi.value.raw).join(\"\");\n  }\n\n  if (id.value !== undefined) {\n    return id.value + \"\";\n  }\n\n  return \"\";\n}\n\nfunction wrap(state, method, id, scope) {\n  if (state.selfReference) {\n    if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {\n      scope.rename(id.name);\n    } else {\n      if (!isFunction(method)) return;\n      let build = buildPropertyMethodAssignmentWrapper;\n\n      if (method.generator) {\n        build = buildGeneratorPropertyMethodAssignmentWrapper;\n      }\n\n      const template = build({\n        FUNCTION: method,\n        FUNCTION_ID: id,\n        FUNCTION_KEY: scope.generateUidIdentifier(id.name)\n      }).expression;\n      const params = template.callee.body.body[0].params;\n\n      for (let i = 0, len = getFunctionArity(method); i < len; i++) {\n        params.push(scope.generateUidIdentifier(\"x\"));\n      }\n\n      return template;\n    }\n  }\n\n  method.id = id;\n  scope.getProgramParent().references[id.name] = true;\n}\n\nfunction visit(node, name, scope) {\n  const state = {\n    selfAssignment: false,\n    selfReference: false,\n    outerDeclar: scope.getBindingIdentifier(name),\n    name: name\n  };\n  const binding = scope.getOwnBinding(name);\n\n  if (binding) {\n    if (binding.kind === \"param\") {\n      state.selfReference = true;\n    } else {}\n  } else if (state.outerDeclar || scope.hasGlobal(name)) {\n    scope.traverse(node, visitor, state);\n  }\n\n  return state;\n}\n\nfunction _default({\n  node,\n  parent,\n  scope,\n  id\n}, localBinding = false, supportUnicodeId = false) {\n  if (node.id) return;\n\n  if ((isObjectProperty(parent) || isObjectMethod(parent, {\n    kind: \"method\"\n  })) && (!parent.computed || isLiteral(parent.key))) {\n    id = parent.key;\n  } else if (isVariableDeclarator(parent)) {\n    id = parent.id;\n\n    if (isIdentifier(id) && !localBinding) {\n      const binding = scope.parent.getBinding(id.name);\n\n      if (binding && binding.constant && scope.getBinding(id.name) === binding) {\n        node.id = cloneNode(id);\n        node.id[NOT_LOCAL_BINDING] = true;\n        return;\n      }\n    }\n  } else if (isAssignmentExpression(parent, {\n    operator: \"=\"\n  })) {\n    id = parent.left;\n  } else if (!id) {\n    return;\n  }\n\n  let name;\n\n  if (id && isLiteral(id)) {\n    name = getNameFromLiteralId(id);\n  } else if (id && isIdentifier(id)) {\n    name = id.name;\n  }\n\n  if (name === undefined) {\n    return;\n  }\n\n  if (!supportUnicodeId && isFunction(node) && /[\\uD800-\\uDFFF]/.test(name)) {\n    return;\n  }\n\n  name = toBindingIdentifierName(name);\n  const newId = identifier(name);\n  newId[NOT_LOCAL_BINDING] = true;\n  const state = visit(node, name, scope);\n  return wrap(state, node, newId, scope) || node;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.ensureBlock = ensureBlock;\nexports.toComputedKey = toComputedKey;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _visitors = require(\"../visitors\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  logicalExpression,\n  LOGICAL_OPERATORS,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  toExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction setType(path, type) {\n  path.node.type = type;\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const {\n    thisBinding,\n    fnPath: fn\n  } = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  fn.ensureBlock();\n  setType(fn, \"FunctionExpression\");\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : fn.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      fn.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    fn.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    fn.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || fn.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n    return fn.get(\"callee.object\");\n  }\n\n  return fn;\n}\n\nconst getSuperCallsVisitor = (0, _visitors.merge)([{\n  CallExpression(child, {\n    allSuperCalls\n  }) {\n    if (!child.get(\"callee\").isSuper()) return;\n    allSuperCalls.push(child);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  let arrowParent;\n  let thisEnvFn = fnPath.findParent(p => {\n    if (p.isArrowFunctionExpression()) {\n      var _arrowParent;\n\n      (_arrowParent = arrowParent) != null ? _arrowParent : arrowParent = p;\n      return false;\n    }\n\n    return p.isFunction() || p.isProgram() || p.isClassProperty({\n      static: false\n    }) || p.isClassPrivateProperty({\n      static: false\n    });\n  });\n  const inConstructor = thisEnvFn.isClassMethod({\n    kind: \"constructor\"\n  });\n\n  if (thisEnvFn.isClassProperty() || thisEnvFn.isClassPrivateProperty()) {\n    if (arrowParent) {\n      thisEnvFn = arrowParent;\n    } else if (allowInsertArrow) {\n      fnPath.replaceWith(callExpression(arrowFunctionExpression([], toExpression(fnPath.node)), []));\n      thisEnvFn = fnPath.get(\"callee\");\n      fnPath = thisEnvFn.get(\"body\");\n    } else {\n      throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n    }\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse(getSuperCallsVisitor, {\n      allSuperCalls\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const superParentPath = superProp.parentPath;\n      const isAssignment = superParentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superParentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superParentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superParentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superParentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superParentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return {\n    thisBinding,\n    fnPath\n  };\n}\n\nfunction isLogicalOp(op) {\n  return LOGICAL_OPERATORS.includes(op);\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    const isLogicalAssignment = isLogicalOp(op);\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      const object = superProp.node.object;\n      const property = superProp.node.property;\n      assignmentPath.get(\"left\").replaceWith(memberExpression(object, assignmentExpression(\"=\", tmp, property), true));\n      assignmentPath.get(\"right\").replaceWith(rightExpression(isLogicalAssignment ? \"=\" : op, memberExpression(object, identifier(tmp.name), true), value));\n    } else {\n      const object = superProp.node.object;\n      const property = superProp.node.property;\n      assignmentPath.get(\"left\").replaceWith(memberExpression(object, property));\n      assignmentPath.get(\"right\").replaceWith(rightExpression(isLogicalAssignment ? \"=\" : op, memberExpression(object, identifier(property.name)), value));\n    }\n\n    if (isLogicalAssignment) {\n      assignmentPath.replaceWith(logicalExpression(op, assignmentPath.node.left, assignmentPath.node.right));\n    } else {\n      assignmentPath.node.operator = \"=\";\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(superProp.parentPath.node.operator[0], identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n\n  function rightExpression(op, left, right) {\n    if (op === \"=\") {\n      return assignmentExpression(\"=\", left, right);\n    } else {\n      return binaryExpression(op, left, right);\n    }\n  }\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nconst assignSuperThisVisitor = (0, _visitors.merge)([{\n  CallExpression(child, {\n    supers,\n    thisBinding\n  }) {\n    if (!child.get(\"callee\").isSuper()) return;\n    if (supers.has(child.node)) return;\n    supers.add(child.node);\n    child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    thisEnvFn.traverse(assignSuperThisVisitor, {\n      supers: new WeakSet(),\n      thisBinding\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nconst getScopeInformationVisitor = (0, _visitors.merge)([{\n  ThisExpression(child, {\n    thisPaths\n  }) {\n    thisPaths.push(child);\n  },\n\n  JSXIdentifier(child, {\n    thisPaths\n  }) {\n    if (child.node.name !== \"this\") return;\n\n    if (!child.parentPath.isJSXMemberExpression({\n      object: child.node\n    }) && !child.parentPath.isJSXOpeningElement({\n      name: child.node\n    })) {\n      return;\n    }\n\n    thisPaths.push(child);\n  },\n\n  CallExpression(child, {\n    superCalls\n  }) {\n    if (child.get(\"callee\").isSuper()) superCalls.push(child);\n  },\n\n  MemberExpression(child, {\n    superProps\n  }) {\n    if (child.get(\"object\").isSuper()) superProps.push(child);\n  },\n\n  Identifier(child, {\n    argumentsPaths\n  }) {\n    if (!child.isReferencedIdentifier({\n      name: \"arguments\"\n    })) return;\n    let curr = child.scope;\n\n    do {\n      if (curr.hasOwnBinding(\"arguments\")) {\n        curr.rename(\"arguments\");\n        return;\n      }\n\n      if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n        break;\n      }\n    } while (curr = curr.parent);\n\n    argumentsPaths.push(child);\n  },\n\n  MetaProperty(child, {\n    newTargetPaths\n  }) {\n    if (!child.get(\"meta\").isIdentifier({\n      name: \"new\"\n    })) return;\n    if (!child.get(\"property\").isIdentifier({\n      name: \"target\"\n    })) return;\n    newTargetPaths.push(child);\n  }\n\n}, _helperEnvironmentVisitor.default]);\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse(getScopeInformationVisitor, {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._resolve = _resolve;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.equals = equals;\nexports.getSource = getSource;\nexports.has = has;\nexports.is = void 0;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.isNodeType = isNodeType;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.matchesPattern = matchesPattern;\nexports.referencesImport = referencesImport;\nexports.resolve = resolve;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const {\n      type,\n      container\n    } = path;\n\n    if (!first && (path.isFunction() || type === \"StaticBlock\")) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram() && !path.isDoExpression());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if (this.isJSXMemberExpression() && this.node.property.name === importName || (this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  return _guessExecutionStatusRelativeToCached(this, target, new Map());\n}\n\nfunction _guessExecutionStatusRelativeToCached(base, target, cache) {\n  const funcParent = {\n    this: getOuterFunction(base),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return _guessExecutionStatusRelativeToDifferentFunctionsCached(base, funcParent.target, cache);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: base.getAncestry()\n  };\n  if (paths.target.indexOf(base) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new Set();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctionsInternal(base, target, cache) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    try {\n      const status = _guessExecutionStatusRelativeToCached(base, path, cache);\n\n      if (allStatus && allStatus !== status) {\n        return \"unknown\";\n      } else {\n        allStatus = status;\n      }\n    } finally {\n      executionOrderCheckedNodes.delete(path.node);\n    }\n  }\n\n  return allStatus;\n}\n\nfunction _guessExecutionStatusRelativeToDifferentFunctionsCached(base, target, cache) {\n  let nodeMap = cache.get(base.node);\n\n  if (!nodeMap) {\n    cache.set(base.node, nodeMap = new Map());\n  } else if (nodeMap.has(target.node)) {\n    return nodeMap.get(target.node);\n  }\n\n  const result = _guessExecutionStatusRelativeToDifferentFunctionsInternal(base, target, cache);\n\n  nodeMap.set(target.node, result);\n  return result;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    let body;\n\n    if (path.isFunction()) {\n      body = path.node.body;\n    } else if (path.isProgram()) {\n      body = path.node;\n    } else {\n      return false;\n    }\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._call = _call;\nexports._getQueueContexts = _getQueueContexts;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncParent = _resyncParent;\nexports._resyncRemoved = _resyncRemoved;\nexports.call = call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.requeue = requeue;\nexports.resync = resync;\nexports.setContext = setContext;\nexports.setKey = setKey;\nexports.setScope = setScope;\nexports.setup = setup;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.visit = visit;\n\nvar _traverseNode = require(\"../traverse-node\");\n\nvar _index = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction restoreContext(path, context) {\n  if (path.context !== context) {\n    path.context = context;\n    path.state = context.state;\n    path.opts = context.opts;\n  }\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  const currentContext = this.context;\n\n  if (this.shouldSkip || this.call(\"enter\")) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  restoreContext(this, currentContext);\n  this.debug(\"Recursing into...\");\n  this.shouldStop = (0, _traverseNode.traverseNode)(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n  restoreContext(this, currentContext);\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n\n  if ((this.key === \"key\" || this.listKey === \"decorators\") && path.isMethod()) {\n    path = path.parentPath;\n  }\n\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n\n  if (this.node === this.container[this.key]) {\n    return;\n  }\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\n\nvar _ = require(\"..\");\n\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._assertUnremoved = _assertUnremoved;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._markRemoved = _markRemoved;\nexports._remove = _remove;\nexports._removeFromScope = _removeFromScope;\nexports.remove = remove;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._containerInsert = _containerInsert;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._verifyNodeList = _verifyNodeList;\nexports.hoist = hoist;\nexports.insertAfter = insertAfter;\nexports.insertBefore = insertBefore;\nexports.pushContainer = pushContainer;\nexports.unshiftContainer = unshiftContainer;\nexports.updateSiblingKeys = updateSiblingKeys;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isAssignmentExpression,\n  isCallExpression,\n  isExpression,\n  isIdentifier,\n  isSequenceExpression,\n  isSuper,\n  thisExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nconst last = arr => arr[arr.length - 1];\n\nfunction isHiddenInSequenceExpression(path) {\n  return isSequenceExpression(path.parent) && (last(path.parent.expressions) !== path.node || isHiddenInSequenceExpression(path.parentPath));\n}\n\nfunction isAlmostConstantAssignment(node, scope) {\n  if (!isAssignmentExpression(node) || !isIdentifier(node.left)) {\n    return false;\n  }\n\n  const blockScope = scope.getBlockParent();\n  return blockScope.hasOwnBinding(node.left.name) && blockScope.getOwnBinding(node.left.name).constantViolations.length <= 1;\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  if (this.isSequenceExpression()) {\n    return last(this.get(\"expressions\")).insertAfter(nodes_);\n  }\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (isHiddenInSequenceExpression(this)) {\n        nodes.unshift(node);\n      } else if (isCallExpression(node) && isSuper(node.callee)) {\n        nodes.unshift(node);\n        nodes.push(thisExpression());\n      } else if (isAlmostConstantAssignment(node, scope)) {\n        nodes.unshift(node);\n        nodes.push(cloneNode(node.left));\n      } else if (scope.isPure(node, true)) {\n        nodes.push(node);\n      } else {\n        if (parentPath.isMethod({\n          computed: true,\n          key: node\n        })) {\n          scope = scope.parent;\n        }\n\n        const temp = scope.generateDeclaredUidIdentifier();\n        nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n        nodes.push(expressionStatement(cloneNode(temp)));\n      }\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.get = get;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getNextSibling = getNextSibling;\nexports.getOpposite = getOpposite;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getPrevSibling = getPrevSibling;\nexports.getSibling = getSibling;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addComment = addComment;\nexports.addComments = addComments;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBindingIdentifier = isBindingIdentifier;\nexports.isBlockScoped = isBlockScoped;\nexports.isExistentialTypeParam = isExistentialTypeParam;\nexports.isExpression = isExpression;\nexports.isFlow = isFlow;\nexports.isForAwaitStatement = isForAwaitStatement;\nexports.isGenerated = isGenerated;\nexports.isNumericLiteralTypeAnnotation = isNumericLiteralTypeAnnotation;\nexports.isPure = isPure;\nexports.isReferenced = isReferenced;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isReferencedMemberExpression = isReferencedMemberExpression;\nexports.isRestProperty = isRestProperty;\nexports.isScope = isScope;\nexports.isSpreadProperty = isSpreadProperty;\nexports.isStatement = isStatement;\nexports.isUser = isUser;\nexports.isVar = isVar;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped: nodeIsBlockScoped,\n  isExportDeclaration,\n  isExpression: nodeIsExpression,\n  isFlow: nodeIsFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isRestElement: nodeIsRestElement,\n  isReferenced: nodeIsReferenced,\n  isScope: nodeIsScope,\n  isStatement: nodeIsStatement,\n  isVar: nodeIsVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\n\nfunction isReferencedIdentifier(opts) {\n  const {\n    node,\n    parent\n  } = this;\n\n  if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n    if (isJSXIdentifier(node, opts)) {\n      if (isCompatTag(node.name)) return false;\n    } else {\n      return false;\n    }\n  }\n\n  return nodeIsReferenced(node, parent, this.parentPath.parent);\n}\n\nfunction isReferencedMemberExpression() {\n  const {\n    node,\n    parent\n  } = this;\n  return isMemberExpression(node) && nodeIsReferenced(node, parent);\n}\n\nfunction isBindingIdentifier() {\n  const {\n    node,\n    parent\n  } = this;\n  const grandparent = this.parentPath.parent;\n  return isIdentifier(node) && isBinding(node, parent, grandparent);\n}\n\nfunction isStatement() {\n  const {\n    node,\n    parent\n  } = this;\n\n  if (nodeIsStatement(node)) {\n    if (isVariableDeclaration(node)) {\n      if (isForXStatement(parent, {\n        left: node\n      })) return false;\n      if (isForStatement(parent, {\n        init: node\n      })) return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isExpression() {\n  if (this.isIdentifier()) {\n    return this.isReferencedIdentifier();\n  } else {\n    return nodeIsExpression(this.node);\n  }\n}\n\nfunction isScope() {\n  return nodeIsScope(this.node, this.parent);\n}\n\nfunction isReferenced() {\n  return nodeIsReferenced(this.node, this.parent);\n}\n\nfunction isBlockScoped() {\n  return nodeIsBlockScoped(this.node);\n}\n\nfunction isVar() {\n  return nodeIsVar(this.node);\n}\n\nfunction isUser() {\n  return this.node && !!this.node.loc;\n}\n\nfunction isGenerated() {\n  return !this.isUser();\n}\n\nfunction isPure(constantsOnly) {\n  return this.scope.isPure(this.node, constantsOnly);\n}\n\nfunction isFlow() {\n  const {\n    node\n  } = this;\n\n  if (nodeIsFlow(node)) {\n    return true;\n  } else if (isImportDeclaration(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else if (isExportDeclaration(node)) {\n    return node.exportKind === \"type\";\n  } else if (isImportSpecifier(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else {\n    return false;\n  }\n}\n\nfunction isRestProperty() {\n  return nodeIsRestElement(this.node) && this.parentPath && this.parentPath.isObjectPattern();\n}\n\nfunction isSpreadProperty() {\n  return nodeIsRestElement(this.node) && this.parentPath && this.parentPath.isObjectExpression();\n}\n\nfunction isForAwaitStatement() {\n  return isForStatement(this.node, {\n    await: true\n  });\n}\n\nfunction isExistentialTypeParam() {\n  throw new Error(\"`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.\");\n}\n\nfunction isNumericLiteralTypeAnnotation() {\n  throw new Error(\"`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nvar NodePath_virtual_types_validator = require(\"./lib/virtual-types-validator\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  hasNode() {\n    return this.node != null;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n{\n  NodePath.prototype._guessExecutionStatusRelativeToDifferentFunctions = NodePath_introspection._guessExecutionStatusRelativeTo;\n}\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nObject.assign(NodePath.prototype, NodePath_virtual_types_validator);\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (!t.TYPES.includes(type)) t.TYPES.push(type);\n}\n\nvar _default = NodePath;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  create(node, container, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.traverseNode = traverseNode;\n\nvar _context = require(\"./context\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction traverseNode(node, opts, scope, state, path, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return false;\n  const context = new _context.default(scope, opts, state, path);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n\n    if (context.visit(node, key)) {\n      return true;\n    }\n  }\n\n  return false;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _traverseNode = require(\"./traverse-node\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  (0, _traverseNode.traverseNode)(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, path, skipKeys) {\n  (0, _traverseNode.traverseNode)(node, opts, scope, state, path, skipKeys);\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _template = require(\"@babel/template\");\n\nfunction helper(minVersion, source) {\n  return Object.freeze({\n    minVersion,\n    ast: () => _template.default.program.ast(source, {\n      preserveComments: true\n    })\n  });\n}\n\nvar _default = Object.freeze({\n  applyDecs: helper(\"7.17.8\", 'function createMetadataMethodsForProperty(metadataMap,kind,property,decoratorFinishedRef){return{getMetadata:function(key){assertNotFinished(decoratorFinishedRef,\"getMetadata\"),assertMetadataKey(key);var metadataForKey=metadataMap[key];if(void 0!==metadataForKey)if(1===kind){var pub=metadataForKey.public;if(void 0!==pub)return pub[property]}else if(2===kind){var priv=metadataForKey.private;if(void 0!==priv)return priv.get(property)}else if(Object.hasOwnProperty.call(metadataForKey,\"constructor\"))return metadataForKey.constructor},setMetadata:function(key,value){assertNotFinished(decoratorFinishedRef,\"setMetadata\"),assertMetadataKey(key);var metadataForKey=metadataMap[key];if(void 0===metadataForKey&&(metadataForKey=metadataMap[key]={}),1===kind){var pub=metadataForKey.public;void 0===pub&&(pub=metadataForKey.public={}),pub[property]=value}else if(2===kind){var priv=metadataForKey.priv;void 0===priv&&(priv=metadataForKey.private=new Map),priv.set(property,value)}else metadataForKey.constructor=value}}}function convertMetadataMapToFinal(obj,metadataMap){var parentMetadataMap=obj[Symbol.metadata||Symbol.for(\"Symbol.metadata\")],metadataKeys=Object.getOwnPropertySymbols(metadataMap);if(0!==metadataKeys.length){for(var i=0;i<metadataKeys.length;i++){var key=metadataKeys[i],metaForKey=metadataMap[key],parentMetaForKey=parentMetadataMap?parentMetadataMap[key]:null,pub=metaForKey.public,parentPub=parentMetaForKey?parentMetaForKey.public:null;pub&&parentPub&&Object.setPrototypeOf(pub,parentPub);var priv=metaForKey.private;if(priv){var privArr=Array.from(priv.values()),parentPriv=parentMetaForKey?parentMetaForKey.private:null;parentPriv&&(privArr=privArr.concat(parentPriv)),metaForKey.private=privArr}parentMetaForKey&&Object.setPrototypeOf(metaForKey,parentMetaForKey)}parentMetadataMap&&Object.setPrototypeOf(metadataMap,parentMetadataMap),obj[Symbol.metadata||Symbol.for(\"Symbol.metadata\")]=metadataMap}}function createAddInitializerMethod(initializers,decoratorFinishedRef){return function(initializer){assertNotFinished(decoratorFinishedRef,\"addInitializer\"),assertCallable(initializer,\"An initializer\"),initializers.push(initializer)}}function memberDec(dec,name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value){var kindStr;switch(kind){case 1:kindStr=\"accessor\";break;case 2:kindStr=\"method\";break;case 3:kindStr=\"getter\";break;case 4:kindStr=\"setter\";break;default:kindStr=\"field\"}var metadataKind,metadataName,ctx={kind:kindStr,name:isPrivate?\"#\"+name:name,isStatic:isStatic,isPrivate:isPrivate},decoratorFinishedRef={v:!1};if(0!==kind&&(ctx.addInitializer=createAddInitializerMethod(initializers,decoratorFinishedRef)),isPrivate){metadataKind=2,metadataName=Symbol(name);var access={};0===kind?(access.get=desc.get,access.set=desc.set):2===kind?access.get=function(){return desc.value}:(1!==kind&&3!==kind||(access.get=function(){return desc.get.call(this)}),1!==kind&&4!==kind||(access.set=function(v){desc.set.call(this,v)})),ctx.access=access}else metadataKind=1,metadataName=name;try{return dec(value,Object.assign(ctx,createMetadataMethodsForProperty(metadataMap,metadataKind,metadataName,decoratorFinishedRef)))}finally{decoratorFinishedRef.v=!0}}function assertNotFinished(decoratorFinishedRef,fnName){if(decoratorFinishedRef.v)throw new Error(\"attempted to call \"+fnName+\" after decoration was finished\")}function assertMetadataKey(key){if(\"symbol\"!=typeof key)throw new TypeError(\"Metadata keys must be symbols, received: \"+key)}function assertCallable(fn,hint){if(\"function\"!=typeof fn)throw new TypeError(hint+\" must be a function\")}function assertValidReturnValue(kind,value){var type=typeof value;if(1===kind){if(\"object\"!==type||null===value)throw new TypeError(\"accessor decorators must return an object with get, set, or init properties or void 0\");void 0!==value.get&&assertCallable(value.get,\"accessor.get\"),void 0!==value.set&&assertCallable(value.set,\"accessor.set\"),void 0!==value.init&&assertCallable(value.init,\"accessor.init\"),void 0!==value.initializer&&assertCallable(value.initializer,\"accessor.initializer\")}else if(\"function\"!==type){var hint;throw hint=0===kind?\"field\":10===kind?\"class\":\"method\",new TypeError(hint+\" decorators must return a function or void 0\")}}function getInit(desc){var initializer;return null==(initializer=desc.init)&&(initializer=desc.initializer)&&\"undefined\"!=typeof console&&console.warn(\".initializer has been renamed to .init as of March 2022\"),initializer}function applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,metadataMap,initializers){var desc,initializer,value,newValue,get,set,decs=decInfo[0];if(isPrivate?desc=0===kind||1===kind?{get:decInfo[3],set:decInfo[4]}:3===kind?{get:decInfo[3]}:4===kind?{set:decInfo[3]}:{value:decInfo[3]}:0!==kind&&(desc=Object.getOwnPropertyDescriptor(base,name)),1===kind?value={get:desc.get,set:desc.set}:2===kind?value=desc.value:3===kind?value=desc.get:4===kind&&(value=desc.set),\"function\"==typeof decs)void 0!==(newValue=memberDec(decs,name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value))&&(assertValidReturnValue(kind,newValue),0===kind?initializer=newValue:1===kind?(initializer=getInit(newValue),get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue);else for(var i=decs.length-1;i>=0;i--){var newInit;if(void 0!==(newValue=memberDec(decs[i],name,desc,metadataMap,initializers,kind,isStatic,isPrivate,value)))assertValidReturnValue(kind,newValue),0===kind?newInit=newValue:1===kind?(newInit=getInit(newValue),get=newValue.get||value.get,set=newValue.set||value.set,value={get:get,set:set}):value=newValue,void 0!==newInit&&(void 0===initializer?initializer=newInit:\"function\"==typeof initializer?initializer=[initializer,newInit]:initializer.push(newInit))}if(0===kind||1===kind){if(void 0===initializer)initializer=function(instance,init){return init};else if(\"function\"!=typeof initializer){var ownInitializers=initializer;initializer=function(instance,init){for(var value=init,i=0;i<ownInitializers.length;i++)value=ownInitializers[i].call(instance,value);return value}}else{var originalInitializer=initializer;initializer=function(instance,init){return originalInitializer.call(instance,init)}}ret.push(initializer)}0!==kind&&(1===kind?(desc.get=value.get,desc.set=value.set):2===kind?desc.value=value:3===kind?desc.get=value:4===kind&&(desc.set=value),isPrivate?1===kind?(ret.push((function(instance,args){return value.get.call(instance,args)})),ret.push((function(instance,args){return value.set.call(instance,args)}))):2===kind?ret.push(value):ret.push((function(instance,args){return value.call(instance,args)})):Object.defineProperty(base,name,desc))}function applyMemberDecs(ret,Class,protoMetadataMap,staticMetadataMap,decInfos){for(var protoInitializers,staticInitializers,existingProtoNonFields=new Map,existingStaticNonFields=new Map,i=0;i<decInfos.length;i++){var decInfo=decInfos[i];if(Array.isArray(decInfo)){var base,metadataMap,initializers,kind=decInfo[1],name=decInfo[2],isPrivate=decInfo.length>3,isStatic=kind>=5;if(isStatic?(base=Class,metadataMap=staticMetadataMap,0!==(kind-=5)&&(initializers=staticInitializers=staticInitializers||[])):(base=Class.prototype,metadataMap=protoMetadataMap,0!==kind&&(initializers=protoInitializers=protoInitializers||[])),0!==kind&&!isPrivate){var existingNonFields=isStatic?existingStaticNonFields:existingProtoNonFields,existingKind=existingNonFields.get(name)||0;if(!0===existingKind||3===existingKind&&4!==kind||4===existingKind&&3!==kind)throw new Error(\"Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: \"+name);!existingKind&&kind>2?existingNonFields.set(name,kind):existingNonFields.set(name,!0)}applyMemberDec(ret,base,decInfo,name,kind,isStatic,isPrivate,metadataMap,initializers)}}pushInitializers(ret,protoInitializers),pushInitializers(ret,staticInitializers)}function pushInitializers(ret,initializers){initializers&&ret.push((function(instance){for(var i=0;i<initializers.length;i++)initializers[i].call(instance);return instance}))}function applyClassDecs(ret,targetClass,metadataMap,classDecs){if(classDecs.length>0){for(var initializers=[],newClass=targetClass,name=targetClass.name,i=classDecs.length-1;i>=0;i--){var decoratorFinishedRef={v:!1};try{var ctx=Object.assign({kind:\"class\",name:name,addInitializer:createAddInitializerMethod(initializers,decoratorFinishedRef)},createMetadataMethodsForProperty(metadataMap,0,name,decoratorFinishedRef)),nextNewClass=classDecs[i](newClass,ctx)}finally{decoratorFinishedRef.v=!0}void 0!==nextNewClass&&(assertValidReturnValue(10,nextNewClass),newClass=nextNewClass)}ret.push(newClass,(function(){for(var i=0;i<initializers.length;i++)initializers[i].call(newClass)}))}}export default function applyDecs(targetClass,memberDecs,classDecs){var ret=[],staticMetadataMap={},protoMetadataMap={};return applyMemberDecs(ret,targetClass,protoMetadataMap,staticMetadataMap,memberDecs),convertMetadataMapToFinal(targetClass.prototype,protoMetadataMap),applyClassDecs(ret,targetClass,staticMetadataMap,classDecs),convertMetadataMapToFinal(targetClass,staticMetadataMap),ret}'),\n  asyncIterator: helper(\"7.15.9\", 'export default function _asyncIterator(iterable){var method,async,sync,retry=2;for(\"undefined\"!=typeof Symbol&&(async=Symbol.asyncIterator,sync=Symbol.iterator);retry--;){if(async&&null!=(method=iterable[async]))return method.call(iterable);if(sync&&null!=(method=iterable[sync]))return new AsyncFromSyncIterator(method.call(iterable));async=\"@@asyncIterator\",sync=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function AsyncFromSyncIterator(s){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+\" is not an object.\"));var done=r.done;return Promise.resolve(r.value).then((function(value){return{value:value,done:done}}))}return AsyncFromSyncIterator=function(s){this.s=s,this.n=s.next},AsyncFromSyncIterator.prototype={s:null,n:null,next:function(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments))},return:function(value){var ret=this.s.return;return void 0===ret?Promise.resolve({value:value,done:!0}):AsyncFromSyncIteratorContinuation(ret.apply(this.s,arguments))},throw:function(value){var thr=this.s.return;return void 0===thr?Promise.reject(value):AsyncFromSyncIteratorContinuation(thr.apply(this.s,arguments))}},new AsyncFromSyncIterator(s)}'),\n  jsx: helper(\"7.0.0-beta.0\", 'var REACT_ELEMENT_TYPE;export default function _createRawReactElement(type,props,key,children){REACT_ELEMENT_TYPE||(REACT_ELEMENT_TYPE=\"function\"==typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var defaultProps=type&&type.defaultProps,childrenLength=arguments.length-3;if(props||0===childrenLength||(props={children:void 0}),1===childrenLength)props.children=children;else if(childrenLength>1){for(var childArray=new Array(childrenLength),i=0;i<childrenLength;i++)childArray[i]=arguments[i+3];props.children=childArray}if(props&&defaultProps)for(var propName in defaultProps)void 0===props[propName]&&(props[propName]=defaultProps[propName]);else props||(props=defaultProps||{});return{$$typeof:REACT_ELEMENT_TYPE,type:type,key:void 0===key?null:\"\"+key,ref:null,props:props,_owner:null}}'),\n  objectSpread2: helper(\"7.5.0\", 'import defineProperty from\"defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}export default function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}'),\n  regeneratorRuntime: helper(\"7.18.0\", 'export default function _regeneratorRuntime(){\"use strict\";\\n/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,$Symbol=\"function\"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||\"@@iterator\",asyncIteratorSymbol=$Symbol.asyncIterator||\"@@asyncIterator\",toStringTagSymbol=$Symbol.toStringTag||\"@@toStringTag\";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},\"\")}catch(err){define=function(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return generator._invoke=function(innerFn,self,context){var state=\"suspendedStart\";return function(method,arg){if(\"executing\"===state)throw new Error(\"Generator is already running\");if(\"completed\"===state){if(\"throw\"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if(\"next\"===context.method)context.sent=context._sent=context.arg;else if(\"throw\"===context.method){if(\"suspendedStart\"===state)throw state=\"completed\",context.arg;context.dispatchException(context.arg)}else\"return\"===context.method&&context.abrupt(\"return\",context.arg);state=\"executing\";var record=tryCatch(innerFn,self,context);if(\"normal\"===record.type){if(state=context.done?\"completed\":\"suspendedYield\",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}\"throw\"===record.type&&(state=\"completed\",context.method=\"throw\",context.arg=record.arg)}}}(innerFn,self,context),generator}function tryCatch(fn,obj,arg){try{return{type:\"normal\",arg:fn.call(obj,arg)}}catch(err){return{type:\"throw\",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){[\"next\",\"throw\",\"return\"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(\"throw\"!==record.type){var result=record.arg,value=result.value;return value&&\"object\"==typeof value&&hasOwn.call(value,\"__await\")?PromiseImpl.resolve(value.__await).then((function(value){invoke(\"next\",value,resolve,reject)}),(function(err){invoke(\"throw\",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke(\"throw\",error,resolve,reject)}))}reject(record.arg)}var previousPromise;this._invoke=function(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(undefined===method){if(context.delegate=null,\"throw\"===context.method){if(delegate.iterator.return&&(context.method=\"return\",context.arg=undefined,maybeInvokeDelegate(delegate,context),\"throw\"===context.method))return ContinueSentinel;context.method=\"throw\",context.arg=new TypeError(\"The iterator does not provide a \\'throw\\' method\")}return ContinueSentinel}var record=tryCatch(method,delegate.iterator,context.arg);if(\"throw\"===record.type)return context.method=\"throw\",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,\"return\"!==context.method&&(context.method=\"next\",context.arg=undefined),context.delegate=null,ContinueSentinel):info:(context.method=\"throw\",context.arg=new TypeError(\"iterator result is not an object\"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type=\"normal\",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:\"root\"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if(\"function\"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=undefined,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:undefined,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,define(Gp,\"constructor\",GeneratorFunctionPrototype),define(GeneratorFunctionPrototype,\"constructor\",GeneratorFunction),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,\"GeneratorFunction\"),exports.isGeneratorFunction=function(genFun){var ctor=\"function\"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||\"GeneratorFunction\"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,\"GeneratorFunction\")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,\"Generator\"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,\"toString\",(function(){return\"[object Generator]\"})),exports.keys=function(object){var keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=undefined,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)\"t\"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined)},stop:function(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if(\"throw\"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type=\"throw\",record.arg=exception,context.next=loc,caught&&(context.method=\"next\",context.arg=undefined),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if(\"root\"===entry.tryLoc)return handle(\"end\");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,\"catchLoc\"),hasFinally=hasOwn.call(entry,\"finallyLoc\");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error(\"try statement without catch or finally\");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,\"finallyLoc\")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&(\"break\"===type||\"continue\"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method=\"next\",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function(record,afterLoc){if(\"throw\"===record.type)throw record.arg;return\"break\"===record.type||\"continue\"===record.type?this.next=record.arg:\"return\"===record.type?(this.rval=this.arg=record.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(\"throw\"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error(\"illegal catch attempt\")},delegateYield:function(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},\"next\"===this.method&&(this.arg=undefined),ContinueSentinel}},exports}'),\n  typeof: helper(\"7.0.0-beta.0\", 'export default function _typeof(obj){\"@babel/helpers - typeof\";return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}'),\n  wrapRegExp: helper(\"7.2.6\", 'import setPrototypeOf from\"setPrototypeOf\";import inherits from\"inherits\";export default function _wrapRegExp(){_wrapRegExp=function(re,groups){return new BabelRegExp(re,void 0,groups)};var _super=RegExp.prototype,_groups=new WeakMap;function BabelRegExp(re,flags,groups){var _this=new RegExp(re,flags);return _groups.set(_this,groups||_groups.get(re)),setPrototypeOf(_this,BabelRegExp.prototype)}function buildGroups(result,re){var g=_groups.get(re);return Object.keys(g).reduce((function(groups,name){return groups[name]=result[g[name]],groups}),Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(str){var result=_super.exec.call(this,str);return result&&(result.groups=buildGroups(result,this)),result},BabelRegExp.prototype[Symbol.replace]=function(str,substitution){if(\"string\"==typeof substitution){var groups=_groups.get(this);return _super[Symbol.replace].call(this,str,substitution.replace(/\\\\$<([^>]+)>/g,(function(_,name){return\"$\"+groups[name]})))}if(\"function\"==typeof substitution){var _this=this;return _super[Symbol.replace].call(this,str,(function(){var args=arguments;return\"object\"!=typeof args[args.length-1]&&(args=[].slice.call(args)).push(buildGroups(args,_this)),substitution.apply(this,args)}))}return _super[Symbol.replace].call(this,str,substitution)},_wrapRegExp.apply(this,arguments)}')\n});\n\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _template = require(\"@babel/template\");\n\nvar _helpersGenerated = require(\"./helpers-generated\");\n\nconst helpers = Object.assign({\n  __proto__: null\n}, _helpersGenerated.default);\nvar _default = helpers;\nexports.default = _default;\n\nconst helper = minVersion => tpl => ({\n  minVersion,\n  ast: () => _template.default.program.ast(tpl)\n});\n\nhelpers.AwaitValue = helper(\"7.0.0-beta.0\")`\n  export default function _AwaitValue(value) {\n    this.wrapped = value;\n  }\n`;\nhelpers.AsyncGenerator = helper(\"7.0.0-beta.0\")`\n  import AwaitValue from \"AwaitValue\";\n\n  export default function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null,\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg)\n        var value = result.value;\n        var wrappedAwait = value instanceof AwaitValue;\n\n        Promise.resolve(wrappedAwait ? value.wrapped : value).then(\n          function (arg) {\n            if (wrappedAwait) {\n              resume(key === \"return\" ? \"return\" : \"next\", arg);\n              return\n            }\n\n            settle(result.done ? \"return\" : \"normal\", arg);\n          },\n          function (err) { resume(\"throw\", err); });\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({ value: value, done: true });\n          break;\n        case \"throw\":\n          front.reject(value);\n          break;\n        default:\n          front.resolve({ value: value, done: false });\n          break;\n      }\n\n      front = front.next;\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    // Hide \"return\" method if generator return is not supported\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  AsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () { return this; };\n\n  AsyncGenerator.prototype.next = function (arg) { return this._invoke(\"next\", arg); };\n  AsyncGenerator.prototype.throw = function (arg) { return this._invoke(\"throw\", arg); };\n  AsyncGenerator.prototype.return = function (arg) { return this._invoke(\"return\", arg); };\n`;\nhelpers.wrapAsyncGenerator = helper(\"7.0.0-beta.0\")`\n  import AsyncGenerator from \"AsyncGenerator\";\n\n  export default function _wrapAsyncGenerator(fn) {\n    return function () {\n      return new AsyncGenerator(fn.apply(this, arguments));\n    };\n  }\n`;\nhelpers.awaitAsyncGenerator = helper(\"7.0.0-beta.0\")`\n  import AwaitValue from \"AwaitValue\";\n\n  export default function _awaitAsyncGenerator(value) {\n    return new AwaitValue(value);\n  }\n`;\nhelpers.asyncGeneratorDelegate = helper(\"7.0.0-beta.0\")`\n  export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () { return this; };\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump(\"next\", value);\n    };\n\n    if (typeof inner.throw === \"function\") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump(\"throw\", value);\n      };\n    }\n\n    if (typeof inner.return === \"function\") {\n      iter.return = function (value) {\n        if (waiting) {\n          waiting = false;\n          return value;\n        }\n        return pump(\"return\", value);\n      };\n    }\n\n    return iter;\n  }\n`;\nhelpers.asyncToGenerator = helper(\"7.0.0-beta.0\")`\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  export default function _asyncToGenerator(fn) {\n    return function () {\n      var self = this, args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n`;\nhelpers.classCallCheck = helper(\"7.0.0-beta.0\")`\n  export default function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n`;\nhelpers.createClass = helper(\"7.0.0-beta.0\")`\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i ++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  export default function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", { writable: false });\n    return Constructor;\n  }\n`;\nhelpers.defineEnumerableProperties = helper(\"7.0.0-beta.0\")`\n  export default function _defineEnumerableProperties(obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if (\"value\" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n\n    // Symbols are not enumerated over by for-in loops. If native\n    // Symbols are available, fetch all of the descs object's own\n    // symbol properties and define them on our target object too.\n    if (Object.getOwnPropertySymbols) {\n      var objectSymbols = Object.getOwnPropertySymbols(descs);\n      for (var i = 0; i < objectSymbols.length; i++) {\n        var sym = objectSymbols[i];\n        var desc = descs[sym];\n        desc.configurable = desc.enumerable = true;\n        if (\"value\" in desc) desc.writable = true;\n        Object.defineProperty(obj, sym, desc);\n      }\n    }\n    return obj;\n  }\n`;\nhelpers.defaults = helper(\"7.0.0-beta.0\")`\n  export default function _defaults(obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  }\n`;\nhelpers.defineProperty = helper(\"7.0.0-beta.0\")`\n  export default function _defineProperty(obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n`;\nhelpers.extends = helper(\"7.0.0-beta.0\")`\n  export default function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n`;\nhelpers.objectSpread = helper(\"7.0.0-beta.0\")`\n  import defineProperty from \"defineProperty\";\n\n  export default function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = (arguments[i] != null) ? Object(arguments[i]) : {};\n      var ownKeys = Object.keys(source);\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n      ownKeys.forEach(function(key) {\n        defineProperty(target, key, source[key]);\n      });\n    }\n    return target;\n  }\n`;\nhelpers.inherits = helper(\"7.0.0-beta.0\")`\n  import setPrototypeOf from \"setPrototypeOf\";\n\n  export default function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    // We can't use defineProperty to set the prototype in a single step because it\n    // doesn't work in Chrome <= 36. https://github.com/babel/babel/issues/14056\n    // V8 bug: https://bugs.chromium.org/p/v8/issues/detail?id=3334\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    Object.defineProperty(subClass, \"prototype\", { writable: false });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n`;\nhelpers.inheritsLoose = helper(\"7.0.0-beta.0\")`\n  import setPrototypeOf from \"setPrototypeOf\";\n\n  export default function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    setPrototypeOf(subClass, superClass);\n  }\n`;\nhelpers.getPrototypeOf = helper(\"7.0.0-beta.0\")`\n  export default function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf\n      ? Object.getPrototypeOf.bind()\n      : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n    return _getPrototypeOf(o);\n  }\n`;\nhelpers.setPrototypeOf = helper(\"7.0.0-beta.0\")`\n  export default function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf\n      ? Object.setPrototypeOf.bind()\n      : function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n    return _setPrototypeOf(o, p);\n  }\n`;\nhelpers.isNativeReflectConstruct = helper(\"7.9.0\")`\n  export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n    // core-js@3\n    if (Reflect.construct.sham) return false;\n\n    // Proxy can't be polyfilled. Every browser implemented\n    // proxies before or at the same time as Reflect.construct,\n    // so if they support Proxy they also support Reflect.construct.\n    if (typeof Proxy === \"function\") return true;\n\n    // Since Reflect.construct can't be properly polyfilled, some\n    // implementations (e.g. core-js@2) don't set the correct internal slots.\n    // Those polyfills don't allow us to subclass built-ins, so we need to\n    // use our fallback implementation.\n    try {\n      // If the internal slots aren't set, this throws an error similar to\n      //   TypeError: this is not a Boolean object.\n\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n`;\nhelpers.construct = helper(\"7.0.0-beta.0\")`\n  import setPrototypeOf from \"setPrototypeOf\";\n  import isNativeReflectConstruct from \"isNativeReflectConstruct\";\n\n  export default function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct.bind();\n    } else {\n      // NOTE: If Parent !== Class, the correct __proto__ is set *after*\n      //       calling the constructor.\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n    // Avoid issues with Class being present but undefined when it wasn't\n    // present in the original call.\n    return _construct.apply(null, arguments);\n  }\n`;\nhelpers.isNativeFunction = helper(\"7.0.0-beta.0\")`\n  export default function _isNativeFunction(fn) {\n    // Note: This function returns \"true\" for core-js functions.\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n`;\nhelpers.wrapNativeSuper = helper(\"7.0.0-beta.0\")`\n  import getPrototypeOf from \"getPrototypeOf\";\n  import setPrototypeOf from \"setPrototypeOf\";\n  import isNativeFunction from \"isNativeFunction\";\n  import construct from \"construct\";\n\n  export default function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !isNativeFunction(Class)) return Class;\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n        return construct(Class, arguments, getPrototypeOf(this).constructor)\n      }\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true,\n        }\n      });\n\n      return setPrototypeOf(Wrapper, Class);\n    }\n\n    return _wrapNativeSuper(Class)\n  }\n`;\nhelpers.instanceof = helper(\"7.0.0-beta.0\")`\n  export default function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return !!right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n`;\nhelpers.interopRequireDefault = helper(\"7.0.0-beta.0\")`\n  export default function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  }\n`;\nhelpers.interopRequireWildcard = helper(\"7.14.0\")`\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function (nodeInterop) {\n      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n\n  export default function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n\n    if (obj === null || (typeof obj !== \"object\" && typeof obj !== \"function\")) {\n      return { default: obj }\n    }\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor\n          ? Object.getOwnPropertyDescriptor(obj, key)\n          : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n`;\nhelpers.newArrowCheck = helper(\"7.0.0-beta.0\")`\n  export default function _newArrowCheck(innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError(\"Cannot instantiate an arrow function\");\n    }\n  }\n`;\nhelpers.objectDestructuringEmpty = helper(\"7.0.0-beta.0\")`\n  export default function _objectDestructuringEmpty(obj) {\n    if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n  }\n`;\nhelpers.objectWithoutPropertiesLoose = helper(\"7.0.0-beta.0\")`\n  export default function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n`;\nhelpers.objectWithoutProperties = helper(\"7.0.0-beta.0\")`\n  import objectWithoutPropertiesLoose from \"objectWithoutPropertiesLoose\";\n\n  export default function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n`;\nhelpers.assertThisInitialized = helper(\"7.0.0-beta.0\")`\n  export default function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n`;\nhelpers.possibleConstructorReturn = helper(\"7.0.0-beta.0\")`\n  import assertThisInitialized from \"assertThisInitialized\";\n\n  export default function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n\n    return assertThisInitialized(self);\n  }\n`;\nhelpers.createSuper = helper(\"7.9.0\")`\n  import getPrototypeOf from \"getPrototypeOf\";\n  import isNativeReflectConstruct from \"isNativeReflectConstruct\";\n  import possibleConstructorReturn from \"possibleConstructorReturn\";\n\n  export default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = getPrototypeOf(Derived), result;\n      if (hasNativeReflectConstruct) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = getPrototypeOf(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return possibleConstructorReturn(this, result);\n    }\n  }\n `;\nhelpers.superPropBase = helper(\"7.0.0-beta.0\")`\n  import getPrototypeOf from \"getPrototypeOf\";\n\n  export default function _superPropBase(object, property) {\n    // Yes, this throws if object is null to being with, that's on purpose.\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = getPrototypeOf(object);\n      if (object === null) break;\n    }\n    return object;\n  }\n`;\nhelpers.get = helper(\"7.0.0-beta.0\")`\n  import superPropBase from \"superPropBase\";\n\n  export default function _get() {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get.bind();\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = superPropBase(target, property);\n\n        if (!base) return;\n\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) {\n          // STEP 3. If receiver is not present, then set receiver to target.\n          return desc.get.call(arguments.length < 3 ? target : receiver);\n        }\n\n        return desc.value;\n      };\n    }\n    return _get.apply(this, arguments);\n  }\n`;\nhelpers.set = helper(\"7.0.0-beta.0\")`\n  import superPropBase from \"superPropBase\";\n  import defineProperty from \"defineProperty\";\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.set) {\n      set = Reflect.set;\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = superPropBase(target, property);\n        var desc;\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property);\n          if (desc.set) {\n            desc.set.call(receiver, value);\n            return true;\n          } else if (!desc.writable) {\n            // Both getter and non-writable fall into this.\n            return false;\n          }\n        }\n\n        // Without a super that defines the property, spec boils down to\n        // \"define on receiver\" for some reason.\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\n        if (desc) {\n          if (!desc.writable) {\n            // Setter, getter, and non-writable fall into this.\n            return false;\n          }\n\n          desc.value = value;\n          Object.defineProperty(receiver, property, desc);\n        } else {\n          // Avoid setters that may be defined on Sub's prototype, but not on\n          // the instance.\n          defineProperty(receiver, property, value);\n        }\n\n        return true;\n      };\n    }\n\n    return set(target, property, value, receiver);\n  }\n\n  export default function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target);\n    if (!s && isStrict) {\n      throw new Error('failed to set property');\n    }\n\n    return value;\n  }\n`;\nhelpers.taggedTemplateLiteral = helper(\"7.0.0-beta.0\")`\n  export default function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  }\n`;\nhelpers.taggedTemplateLiteralLoose = helper(\"7.0.0-beta.0\")`\n  export default function _taggedTemplateLiteralLoose(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    strings.raw = raw;\n    return strings;\n  }\n`;\nhelpers.readOnlyError = helper(\"7.0.0-beta.0\")`\n  export default function _readOnlyError(name) {\n    throw new TypeError(\"\\\\\"\" + name + \"\\\\\" is read-only\");\n  }\n`;\nhelpers.writeOnlyError = helper(\"7.12.13\")`\n  export default function _writeOnlyError(name) {\n    throw new TypeError(\"\\\\\"\" + name + \"\\\\\" is write-only\");\n  }\n`;\nhelpers.classNameTDZError = helper(\"7.0.0-beta.0\")`\n  export default function _classNameTDZError(name) {\n    throw new Error(\"Class \\\\\"\" + name + \"\\\\\" cannot be referenced in computed property keys.\");\n  }\n`;\nhelpers.temporalUndefined = helper(\"7.0.0-beta.0\")`\n  // This function isn't mean to be called, but to be used as a reference.\n  // We can't use a normal object because it isn't hoisted.\n  export default function _temporalUndefined() {}\n`;\nhelpers.tdz = helper(\"7.5.5\")`\n  export default function _tdzError(name) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  }\n`;\nhelpers.temporalRef = helper(\"7.0.0-beta.0\")`\n  import undef from \"temporalUndefined\";\n  import err from \"tdz\";\n\n  export default function _temporalRef(val, name) {\n    return val === undef ? err(name) : val;\n  }\n`;\nhelpers.slicedToArray = helper(\"7.0.0-beta.0\")`\n  import arrayWithHoles from \"arrayWithHoles\";\n  import iterableToArrayLimit from \"iterableToArrayLimit\";\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n  import nonIterableRest from \"nonIterableRest\";\n\n  export default function _slicedToArray(arr, i) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArrayLimit(arr, i) ||\n      unsupportedIterableToArray(arr, i) ||\n      nonIterableRest()\n    );\n  }\n`;\nhelpers.slicedToArrayLoose = helper(\"7.0.0-beta.0\")`\n  import arrayWithHoles from \"arrayWithHoles\";\n  import iterableToArrayLimitLoose from \"iterableToArrayLimitLoose\";\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n  import nonIterableRest from \"nonIterableRest\";\n\n  export default function _slicedToArrayLoose(arr, i) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArrayLimitLoose(arr, i) ||\n      unsupportedIterableToArray(arr, i) ||\n      nonIterableRest()\n    );\n  }\n`;\nhelpers.toArray = helper(\"7.0.0-beta.0\")`\n  import arrayWithHoles from \"arrayWithHoles\";\n  import iterableToArray from \"iterableToArray\";\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n  import nonIterableRest from \"nonIterableRest\";\n\n  export default function _toArray(arr) {\n    return (\n      arrayWithHoles(arr) ||\n      iterableToArray(arr) ||\n      unsupportedIterableToArray(arr) ||\n      nonIterableRest()\n    );\n  }\n`;\nhelpers.toConsumableArray = helper(\"7.0.0-beta.0\")`\n  import arrayWithoutHoles from \"arrayWithoutHoles\";\n  import iterableToArray from \"iterableToArray\";\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n  import nonIterableSpread from \"nonIterableSpread\";\n\n  export default function _toConsumableArray(arr) {\n    return (\n      arrayWithoutHoles(arr) ||\n      iterableToArray(arr) ||\n      unsupportedIterableToArray(arr) ||\n      nonIterableSpread()\n    );\n  }\n`;\nhelpers.arrayWithoutHoles = helper(\"7.0.0-beta.0\")`\n  import arrayLikeToArray from \"arrayLikeToArray\";\n\n  export default function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return arrayLikeToArray(arr);\n  }\n`;\nhelpers.arrayWithHoles = helper(\"7.0.0-beta.0\")`\n  export default function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n`;\nhelpers.maybeArrayLike = helper(\"7.9.0\")`\n  import arrayLikeToArray from \"arrayLikeToArray\";\n\n  export default function _maybeArrayLike(next, arr, i) {\n    if (arr && !Array.isArray(arr) && typeof arr.length === \"number\") {\n      var len = arr.length;\n      return arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);\n    }\n    return next(arr, i);\n  }\n`;\nhelpers.iterableToArray = helper(\"7.0.0-beta.0\")`\n  export default function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n`;\nhelpers.iterableToArrayLimit = helper(\"7.0.0-beta.0\")`\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliance is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n\n    var _i = arr == null ? null : (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n`;\nhelpers.iterableToArrayLimitLoose = helper(\"7.0.0-beta.0\")`\n  export default function _iterableToArrayLimitLoose(arr, i) {\n    var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n    if (_i == null) return;\n\n    var _arr = [];\n    for (_i = _i.call(arr), _step; !(_step = _i.next()).done;) {\n      _arr.push(_step.value);\n      if (i && _arr.length === i) break;\n    }\n    return _arr;\n  }\n`;\nhelpers.unsupportedIterableToArray = helper(\"7.9.0\")`\n  import arrayLikeToArray from \"arrayLikeToArray\";\n\n  export default function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n      return arrayLikeToArray(o, minLen);\n  }\n`;\nhelpers.arrayLikeToArray = helper(\"7.9.0\")`\n  export default function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n`;\nhelpers.nonIterableSpread = helper(\"7.0.0-beta.0\")`\n  export default function _nonIterableSpread() {\n    throw new TypeError(\n      \"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"\n    );\n  }\n`;\nhelpers.nonIterableRest = helper(\"7.0.0-beta.0\")`\n  export default function _nonIterableRest() {\n    throw new TypeError(\n      \"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"\n    );\n  }\n`;\nhelpers.createForOfIteratorHelper = helper(\"7.9.0\")`\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n\n  // s: start (create the iterator)\n  // n: next\n  // e: error (called whenever something throws)\n  // f: finish (always called at the end)\n\n  export default function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (!it) {\n      // Fallback for engines without symbol support\n      if (\n        Array.isArray(o) ||\n        (it = unsupportedIterableToArray(o)) ||\n        (allowArrayLike && o && typeof o.length === \"number\")\n      ) {\n        if (it) o = it;\n        var i = 0;\n        var F = function(){};\n        return {\n          s: F,\n          n: function() {\n            if (i >= o.length) return { done: true };\n            return { done: false, value: o[i++] };\n          },\n          e: function(e) { throw e; },\n          f: F,\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var normalCompletion = true, didErr = false, err;\n\n    return {\n      s: function() {\n        it = it.call(o);\n      },\n      n: function() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function(e) {\n        didErr = true;\n        err = e;\n      },\n      f: function() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n`;\nhelpers.createForOfIteratorHelperLoose = helper(\"7.9.0\")`\n  import unsupportedIterableToArray from \"unsupportedIterableToArray\";\n\n  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    // Fallback for engines without symbol support\n    if (\n      Array.isArray(o) ||\n      (it = unsupportedIterableToArray(o)) ||\n      (allowArrayLike && o && typeof o.length === \"number\")\n    ) {\n      if (it) o = it;\n      var i = 0;\n      return function() {\n        if (i >= o.length) return { done: true };\n        return { done: false, value: o[i++] };\n      }\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n`;\nhelpers.skipFirstGeneratorNext = helper(\"7.0.0-beta.0\")`\n  export default function _skipFirstGeneratorNext(fn) {\n    return function () {\n      var it = fn.apply(this, arguments);\n      it.next();\n      return it;\n    }\n  }\n`;\nhelpers.toPrimitive = helper(\"7.1.5\")`\n  export default function _toPrimitive(\n    input,\n    hint /*: \"default\" | \"string\" | \"number\" | void */\n  ) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n`;\nhelpers.toPropertyKey = helper(\"7.1.5\")`\n  import toPrimitive from \"toPrimitive\";\n\n  export default function _toPropertyKey(arg) {\n    var key = toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n`;\nhelpers.initializerWarningHelper = helper(\"7.0.0-beta.0\")`\n    export default function _initializerWarningHelper(descriptor, context){\n        throw new Error(\n          'Decorating class property failed. Please ensure that ' +\n          'proposal-class-properties is enabled and runs after the decorators transform.'\n        );\n    }\n`;\nhelpers.initializerDefineProperty = helper(\"7.0.0-beta.0\")`\n    export default function _initializerDefineProperty(target, property, descriptor, context){\n        if (!descriptor) return;\n\n        Object.defineProperty(target, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            writable: descriptor.writable,\n            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,\n        });\n    }\n`;\nhelpers.applyDecoratedDescriptor = helper(\"7.0.0-beta.0\")`\n    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){\n        var desc = {};\n        Object.keys(descriptor).forEach(function(key){\n            desc[key] = descriptor[key];\n        });\n        desc.enumerable = !!desc.enumerable;\n        desc.configurable = !!desc.configurable;\n        if ('value' in desc || desc.initializer){\n            desc.writable = true;\n        }\n\n        desc = decorators.slice().reverse().reduce(function(desc, decorator){\n            return decorator(target, property, desc) || desc;\n        }, desc);\n\n        if (context && desc.initializer !== void 0){\n            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n            desc.initializer = undefined;\n        }\n\n        if (desc.initializer === void 0){\n            Object.defineProperty(target, property, desc);\n            desc = null;\n        }\n\n        return desc;\n    }\n`;\nhelpers.classPrivateFieldLooseKey = helper(\"7.0.0-beta.0\")`\n  var id = 0;\n  export default function _classPrivateFieldKey(name) {\n    return \"__private_\" + (id++) + \"_\" + name;\n  }\n`;\nhelpers.classPrivateFieldLooseBase = helper(\"7.0.0-beta.0\")`\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n    return receiver;\n  }\n`;\nhelpers.classPrivateFieldGet = helper(\"7.0.0-beta.0\")`\n  import classApplyDescriptorGet from \"classApplyDescriptorGet\";\n  import classExtractFieldDescriptor from \"classExtractFieldDescriptor\";\n  export default function _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n    return classApplyDescriptorGet(receiver, descriptor);\n  }\n`;\nhelpers.classPrivateFieldSet = helper(\"7.0.0-beta.0\")`\n  import classApplyDescriptorSet from \"classApplyDescriptorSet\";\n  import classExtractFieldDescriptor from \"classExtractFieldDescriptor\";\n  export default function _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n  }\n`;\nhelpers.classPrivateFieldDestructureSet = helper(\"7.4.4\")`\n  import classApplyDescriptorDestructureSet from \"classApplyDescriptorDestructureSet\";\n  import classExtractFieldDescriptor from \"classExtractFieldDescriptor\";\n  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n    return classApplyDescriptorDestructureSet(receiver, descriptor);\n  }\n`;\nhelpers.classExtractFieldDescriptor = helper(\"7.13.10\")`\n  export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n  }\n`;\nhelpers.classStaticPrivateFieldSpecGet = helper(\"7.0.2\")`\n  import classApplyDescriptorGet from \"classApplyDescriptorGet\";\n  import classCheckPrivateStaticAccess from \"classCheckPrivateStaticAccess\";\n  import classCheckPrivateStaticFieldDescriptor from \"classCheckPrivateStaticFieldDescriptor\";\n  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, \"get\");\n    return classApplyDescriptorGet(receiver, descriptor);\n  }\n`;\nhelpers.classStaticPrivateFieldSpecSet = helper(\"7.0.2\")`\n  import classApplyDescriptorSet from \"classApplyDescriptorSet\";\n  import classCheckPrivateStaticAccess from \"classCheckPrivateStaticAccess\";\n  import classCheckPrivateStaticFieldDescriptor from \"classCheckPrivateStaticFieldDescriptor\";\n  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, \"set\");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n  }\n`;\nhelpers.classStaticPrivateMethodGet = helper(\"7.3.2\")`\n  import classCheckPrivateStaticAccess from \"classCheckPrivateStaticAccess\";\n  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    return method;\n  }\n`;\nhelpers.classStaticPrivateMethodSet = helper(\"7.3.2\")`\n  export default function _classStaticPrivateMethodSet() {\n    throw new TypeError(\"attempted to set read only static private field\");\n  }\n`;\nhelpers.classApplyDescriptorGet = helper(\"7.13.10\")`\n  export default function _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n      return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n  }\n`;\nhelpers.classApplyDescriptorSet = helper(\"7.13.10\")`\n  export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n      descriptor.set.call(receiver, value);\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n      }\n      descriptor.value = value;\n    }\n  }\n`;\nhelpers.classApplyDescriptorDestructureSet = helper(\"7.13.10\")`\n  export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {\n    if (descriptor.set) {\n      if (!(\"__destrObj\" in descriptor)) {\n        descriptor.__destrObj = {\n          set value(v) {\n            descriptor.set.call(receiver, v)\n          },\n        };\n      }\n      return descriptor.__destrObj;\n    } else {\n      if (!descriptor.writable) {\n        // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n      }\n\n      return descriptor;\n    }\n  }\n`;\nhelpers.classStaticPrivateFieldDestructureSet = helper(\"7.13.10\")`\n  import classApplyDescriptorDestructureSet from \"classApplyDescriptorDestructureSet\";\n  import classCheckPrivateStaticAccess from \"classCheckPrivateStaticAccess\";\n  import classCheckPrivateStaticFieldDescriptor from \"classCheckPrivateStaticFieldDescriptor\";\n  export default function _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {\n    classCheckPrivateStaticAccess(receiver, classConstructor);\n    classCheckPrivateStaticFieldDescriptor(descriptor, \"set\");\n    return classApplyDescriptorDestructureSet(receiver, descriptor);\n  }\n`;\nhelpers.classCheckPrivateStaticAccess = helper(\"7.13.10\")`\n  export default function _classCheckPrivateStaticAccess(receiver, classConstructor) {\n    if (receiver !== classConstructor) {\n      throw new TypeError(\"Private static access of wrong provenance\");\n    }\n  }\n`;\nhelpers.classCheckPrivateStaticFieldDescriptor = helper(\"7.13.10\")`\n  export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {\n    if (descriptor === undefined) {\n      throw new TypeError(\"attempted to \" + action + \" private static field before its declaration\");\n    }\n  }\n`;\nhelpers.decorate = helper(\"7.1.5\")`\n  import toArray from \"toArray\";\n  import toPropertyKey from \"toPropertyKey\";\n\n  // These comments are stripped by @babel/template\n  /*::\n  type PropertyDescriptor =\n    | {\n        value: any,\n        writable: boolean,\n        configurable: boolean,\n        enumerable: boolean,\n      }\n    | {\n        get?: () => any,\n        set?: (v: any) => void,\n        configurable: boolean,\n        enumerable: boolean,\n      };\n\n  type FieldDescriptor ={\n    writable: boolean,\n    configurable: boolean,\n    enumerable: boolean,\n  };\n\n  type Placement = \"static\" | \"prototype\" | \"own\";\n  type Key = string | symbol; // PrivateName is not supported yet.\n\n  type ElementDescriptor =\n    | {\n        kind: \"method\",\n        key: Key,\n        placement: Placement,\n        descriptor: PropertyDescriptor\n      }\n    | {\n        kind: \"field\",\n        key: Key,\n        placement: Placement,\n        descriptor: FieldDescriptor,\n        initializer?: () => any,\n      };\n\n  // This is exposed to the user code\n  type ElementObjectInput = ElementDescriptor & {\n    [@@toStringTag]?: \"Descriptor\"\n  };\n\n  // This is exposed to the user code\n  type ElementObjectOutput = ElementDescriptor & {\n    [@@toStringTag]?: \"Descriptor\"\n    extras?: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  // This is exposed to the user code\n  type ClassObject = {\n    [@@toStringTag]?: \"Descriptor\",\n    kind: \"class\",\n    elements: ElementDescriptor[],\n  };\n\n  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;\n  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;\n  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;\n\n  // Only used by Babel in the transform output, not part of the spec.\n  type ElementDefinition =\n    | {\n        kind: \"method\",\n        value: any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n      }\n    | {\n        kind: \"field\",\n        value: () => any,\n        key: Key,\n        static?: boolean,\n        decorators?: ElementDecorator[],\n    };\n\n  declare function ClassFactory<C>(initialize: (instance: C) => void): {\n    F: Class<C>,\n    d: ElementDefinition[]\n  }\n\n  */\n\n  /*::\n  // Various combinations with/without extras and with one or many finishers\n\n  type ElementFinisherExtras = {\n    element: ElementDescriptor,\n    finisher?: ClassFinisher,\n    extras?: ElementDescriptor[],\n  };\n\n  type ElementFinishersExtras = {\n    element: ElementDescriptor,\n    finishers: ClassFinisher[],\n    extras: ElementDescriptor[],\n  };\n\n  type ElementsFinisher = {\n    elements: ElementDescriptor[],\n    finisher?: ClassFinisher,\n  };\n\n  type ElementsFinishers = {\n    elements: ElementDescriptor[],\n    finishers: ClassFinisher[],\n  };\n\n  */\n\n  /*::\n\n  type Placements = {\n    static: Key[],\n    prototype: Key[],\n    own: Key[],\n  };\n\n  */\n\n  // ClassDefinitionEvaluation (Steps 26-*)\n  export default function _decorate(\n    decorators /*: ClassDecorator[] */,\n    factory /*: ClassFactory */,\n    superClass /*: ?Class<*> */,\n    mixins /*: ?Array<Function> */,\n  ) /*: Class<*> */ {\n    var api = _getDecoratorsApi();\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        api = mixins[i](api);\n      }\n    }\n\n    var r = factory(function initialize(O) {\n      api.initializeInstanceElements(O, decorated.elements);\n    }, superClass);\n    var decorated = api.decorateClass(\n      _coalesceClassElements(r.d.map(_createElementDescriptor)),\n      decorators,\n    );\n\n    api.initializeClassElements(r.F, decorated.elements);\n\n    return api.runClassFinishers(r.F, decorated.finishers);\n  }\n\n  function _getDecoratorsApi() {\n    _getDecoratorsApi = function() {\n      return api;\n    };\n\n    var api = {\n      elementsDefinitionOrder: [[\"method\"], [\"field\"]],\n\n      // InitializeInstanceElements\n      initializeInstanceElements: function(\n        /*::<C>*/ O /*: C */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        [\"method\", \"field\"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            if (element.kind === kind && element.placement === \"own\") {\n              this.defineClassElement(O, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // InitializeClassElements\n      initializeClassElements: function(\n        /*::<C>*/ F /*: Class<C> */,\n        elements /*: ElementDescriptor[] */,\n      ) {\n        var proto = F.prototype;\n\n        [\"method\", \"field\"].forEach(function(kind) {\n          elements.forEach(function(element /*: ElementDescriptor */) {\n            var placement = element.placement;\n            if (\n              element.kind === kind &&\n              (placement === \"static\" || placement === \"prototype\")\n            ) {\n              var receiver = placement === \"static\" ? F : proto;\n              this.defineClassElement(receiver, element);\n            }\n          }, this);\n        }, this);\n      },\n\n      // DefineClassElement\n      defineClassElement: function(\n        /*::<C>*/ receiver /*: C | Class<C> */,\n        element /*: ElementDescriptor */,\n      ) {\n        var descriptor /*: PropertyDescriptor */ = element.descriptor;\n        if (element.kind === \"field\") {\n          var initializer = element.initializer;\n          descriptor = {\n            enumerable: descriptor.enumerable,\n            writable: descriptor.writable,\n            configurable: descriptor.configurable,\n            value: initializer === void 0 ? void 0 : initializer.call(receiver),\n          };\n        }\n        Object.defineProperty(receiver, element.key, descriptor);\n      },\n\n      // DecorateClass\n      decorateClass: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var newElements /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n        var placements /*: Placements */ = {\n          static: [],\n          prototype: [],\n          own: [],\n        };\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          this.addElementPlacement(element, placements);\n        }, this);\n\n        elements.forEach(function(element /*: ElementDescriptor */) {\n          if (!_hasDecorators(element)) return newElements.push(element);\n\n          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(\n            element,\n            placements,\n          );\n          newElements.push(elementFinishersExtras.element);\n          newElements.push.apply(newElements, elementFinishersExtras.extras);\n          finishers.push.apply(finishers, elementFinishersExtras.finishers);\n        }, this);\n\n        if (!decorators) {\n          return { elements: newElements, finishers: finishers };\n        }\n\n        var result /*: ElementsFinishers */ = this.decorateConstructor(\n          newElements,\n          decorators,\n        );\n        finishers.push.apply(finishers, result.finishers);\n        result.finishers = finishers;\n\n        return result;\n      },\n\n      // AddElementPlacement\n      addElementPlacement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n        silent /*: boolean */,\n      ) {\n        var keys = placements[element.placement];\n        if (!silent && keys.indexOf(element.key) !== -1) {\n          throw new TypeError(\"Duplicated element (\" + element.key + \")\");\n        }\n        keys.push(element.key);\n      },\n\n      // DecorateElement\n      decorateElement: function(\n        element /*: ElementDescriptor */,\n        placements /*: Placements */,\n      ) /*: ElementFinishersExtras */ {\n        var extras /*: ElementDescriptor[] */ = [];\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (\n          var decorators = element.decorators, i = decorators.length - 1;\n          i >= 0;\n          i--\n        ) {\n          // (inlined) RemoveElementPlacement\n          var keys = placements[element.placement];\n          keys.splice(keys.indexOf(element.key), 1);\n\n          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(\n            element,\n          );\n          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(\n            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||\n              elementObject,\n          );\n\n          element = elementFinisherExtras.element;\n          this.addElementPlacement(element, placements);\n\n          if (elementFinisherExtras.finisher) {\n            finishers.push(elementFinisherExtras.finisher);\n          }\n\n          var newExtras /*: ElementDescriptor[] | void */ =\n            elementFinisherExtras.extras;\n          if (newExtras) {\n            for (var j = 0; j < newExtras.length; j++) {\n              this.addElementPlacement(newExtras[j], placements);\n            }\n            extras.push.apply(extras, newExtras);\n          }\n        }\n\n        return { element: element, finishers: finishers, extras: extras };\n      },\n\n      // DecorateConstructor\n      decorateConstructor: function(\n        elements /*: ElementDescriptor[] */,\n        decorators /*: ClassDecorator[] */,\n      ) /*: ElementsFinishers */ {\n        var finishers /*: ClassFinisher[] */ = [];\n\n        for (var i = decorators.length - 1; i >= 0; i--) {\n          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);\n          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(\n            (0, decorators[i])(obj) /*: ClassObject */ || obj,\n          );\n\n          if (elementsAndFinisher.finisher !== undefined) {\n            finishers.push(elementsAndFinisher.finisher);\n          }\n\n          if (elementsAndFinisher.elements !== undefined) {\n            elements = elementsAndFinisher.elements;\n\n            for (var j = 0; j < elements.length - 1; j++) {\n              for (var k = j + 1; k < elements.length; k++) {\n                if (\n                  elements[j].key === elements[k].key &&\n                  elements[j].placement === elements[k].placement\n                ) {\n                  throw new TypeError(\n                    \"Duplicated element (\" + elements[j].key + \")\",\n                  );\n                }\n              }\n            }\n          }\n        }\n\n        return { elements: elements, finishers: finishers };\n      },\n\n      // FromElementDescriptor\n      fromElementDescriptor: function(\n        element /*: ElementDescriptor */,\n      ) /*: ElementObject */ {\n        var obj /*: ElementObject */ = {\n          kind: element.kind,\n          key: element.key,\n          placement: element.placement,\n          descriptor: element.descriptor,\n        };\n\n        var desc = {\n          value: \"Descriptor\",\n          configurable: true,\n        };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        if (element.kind === \"field\") obj.initializer = element.initializer;\n\n        return obj;\n      },\n\n      // ToElementDescriptors\n      toElementDescriptors: function(\n        elementObjects /*: ElementObject[] */,\n      ) /*: ElementDescriptor[] */ {\n        if (elementObjects === undefined) return;\n        return toArray(elementObjects).map(function(elementObject) {\n          var element = this.toElementDescriptor(elementObject);\n          this.disallowProperty(elementObject, \"finisher\", \"An element descriptor\");\n          this.disallowProperty(elementObject, \"extras\", \"An element descriptor\");\n          return element;\n        }, this);\n      },\n\n      // ToElementDescriptor\n      toElementDescriptor: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementDescriptor */ {\n        var kind = String(elementObject.kind);\n        if (kind !== \"method\" && kind !== \"field\") {\n          throw new TypeError(\n            'An element descriptor\\\\'s .kind property must be either \"method\" or' +\n              ' \"field\", but a decorator created an element descriptor with' +\n              ' .kind \"' +\n              kind +\n              '\"',\n          );\n        }\n\n        var key = toPropertyKey(elementObject.key);\n\n        var placement = String(elementObject.placement);\n        if (\n          placement !== \"static\" &&\n          placement !== \"prototype\" &&\n          placement !== \"own\"\n        ) {\n          throw new TypeError(\n            'An element descriptor\\\\'s .placement property must be one of \"static\",' +\n              ' \"prototype\" or \"own\", but a decorator created an element descriptor' +\n              ' with .placement \"' +\n              placement +\n              '\"',\n          );\n        }\n\n        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;\n\n        this.disallowProperty(elementObject, \"elements\", \"An element descriptor\");\n\n        var element /*: ElementDescriptor */ = {\n          kind: kind,\n          key: key,\n          placement: placement,\n          descriptor: Object.assign({}, descriptor),\n        };\n\n        if (kind !== \"field\") {\n          this.disallowProperty(elementObject, \"initializer\", \"A method descriptor\");\n        } else {\n          this.disallowProperty(\n            descriptor,\n            \"get\",\n            \"The property descriptor of a field descriptor\",\n          );\n          this.disallowProperty(\n            descriptor,\n            \"set\",\n            \"The property descriptor of a field descriptor\",\n          );\n          this.disallowProperty(\n            descriptor,\n            \"value\",\n            \"The property descriptor of a field descriptor\",\n          );\n\n          element.initializer = elementObject.initializer;\n        }\n\n        return element;\n      },\n\n      toElementFinisherExtras: function(\n        elementObject /*: ElementObject */,\n      ) /*: ElementFinisherExtras */ {\n        var element /*: ElementDescriptor */ = this.toElementDescriptor(\n          elementObject,\n        );\n        var finisher /*: ClassFinisher */ = _optionalCallableProperty(\n          elementObject,\n          \"finisher\",\n        );\n        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(\n          elementObject.extras,\n        );\n\n        return { element: element, finisher: finisher, extras: extras };\n      },\n\n      // FromClassDescriptor\n      fromClassDescriptor: function(\n        elements /*: ElementDescriptor[] */,\n      ) /*: ClassObject */ {\n        var obj = {\n          kind: \"class\",\n          elements: elements.map(this.fromElementDescriptor, this),\n        };\n\n        var desc = { value: \"Descriptor\", configurable: true };\n        Object.defineProperty(obj, Symbol.toStringTag, desc);\n\n        return obj;\n      },\n\n      // ToClassDescriptor\n      toClassDescriptor: function(\n        obj /*: ClassObject */,\n      ) /*: ElementsFinisher */ {\n        var kind = String(obj.kind);\n        if (kind !== \"class\") {\n          throw new TypeError(\n            'A class descriptor\\\\'s .kind property must be \"class\", but a decorator' +\n              ' created a class descriptor with .kind \"' +\n              kind +\n              '\"',\n          );\n        }\n\n        this.disallowProperty(obj, \"key\", \"A class descriptor\");\n        this.disallowProperty(obj, \"placement\", \"A class descriptor\");\n        this.disallowProperty(obj, \"descriptor\", \"A class descriptor\");\n        this.disallowProperty(obj, \"initializer\", \"A class descriptor\");\n        this.disallowProperty(obj, \"extras\", \"A class descriptor\");\n\n        var finisher = _optionalCallableProperty(obj, \"finisher\");\n        var elements = this.toElementDescriptors(obj.elements);\n\n        return { elements: elements, finisher: finisher };\n      },\n\n      // RunClassFinishers\n      runClassFinishers: function(\n        constructor /*: Class<*> */,\n        finishers /*: ClassFinisher[] */,\n      ) /*: Class<*> */ {\n        for (var i = 0; i < finishers.length; i++) {\n          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);\n          if (newConstructor !== undefined) {\n            // NOTE: This should check if IsConstructor(newConstructor) is false.\n            if (typeof newConstructor !== \"function\") {\n              throw new TypeError(\"Finishers must return a constructor.\");\n            }\n            constructor = newConstructor;\n          }\n        }\n        return constructor;\n      },\n\n      disallowProperty: function(obj, name, objectType) {\n        if (obj[name] !== undefined) {\n          throw new TypeError(objectType + \" can't have a .\" + name + \" property.\");\n        }\n      }\n    };\n\n    return api;\n  }\n\n  // ClassElementEvaluation\n  function _createElementDescriptor(\n    def /*: ElementDefinition */,\n  ) /*: ElementDescriptor */ {\n    var key = toPropertyKey(def.key);\n\n    var descriptor /*: PropertyDescriptor */;\n    if (def.kind === \"method\") {\n      descriptor = {\n        value: def.value,\n        writable: true,\n        configurable: true,\n        enumerable: false,\n      };\n    } else if (def.kind === \"get\") {\n      descriptor = { get: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === \"set\") {\n      descriptor = { set: def.value, configurable: true, enumerable: false };\n    } else if (def.kind === \"field\") {\n      descriptor = { configurable: true, writable: true, enumerable: true };\n    }\n\n    var element /*: ElementDescriptor */ = {\n      kind: def.kind === \"field\" ? \"field\" : \"method\",\n      key: key,\n      placement: def.static\n        ? \"static\"\n        : def.kind === \"field\"\n        ? \"own\"\n        : \"prototype\",\n      descriptor: descriptor,\n    };\n    if (def.decorators) element.decorators = def.decorators;\n    if (def.kind === \"field\") element.initializer = def.value;\n\n    return element;\n  }\n\n  // CoalesceGetterSetter\n  function _coalesceGetterSetter(\n    element /*: ElementDescriptor */,\n    other /*: ElementDescriptor */,\n  ) {\n    if (element.descriptor.get !== undefined) {\n      other.descriptor.get = element.descriptor.get;\n    } else {\n      other.descriptor.set = element.descriptor.set;\n    }\n  }\n\n  // CoalesceClassElements\n  function _coalesceClassElements(\n    elements /*: ElementDescriptor[] */,\n  ) /*: ElementDescriptor[] */ {\n    var newElements /*: ElementDescriptor[] */ = [];\n\n    var isSameElement = function(\n      other /*: ElementDescriptor */,\n    ) /*: boolean */ {\n      return (\n        other.kind === \"method\" &&\n        other.key === element.key &&\n        other.placement === element.placement\n      );\n    };\n\n    for (var i = 0; i < elements.length; i++) {\n      var element /*: ElementDescriptor */ = elements[i];\n      var other /*: ElementDescriptor */;\n\n      if (\n        element.kind === \"method\" &&\n        (other = newElements.find(isSameElement))\n      ) {\n        if (\n          _isDataDescriptor(element.descriptor) ||\n          _isDataDescriptor(other.descriptor)\n        ) {\n          if (_hasDecorators(element) || _hasDecorators(other)) {\n            throw new ReferenceError(\n              \"Duplicated methods (\" + element.key + \") can't be decorated.\",\n            );\n          }\n          other.descriptor = element.descriptor;\n        } else {\n          if (_hasDecorators(element)) {\n            if (_hasDecorators(other)) {\n              throw new ReferenceError(\n                \"Decorators can't be placed on different accessors with for \" +\n                  \"the same property (\" +\n                  element.key +\n                  \").\",\n              );\n            }\n            other.decorators = element.decorators;\n          }\n          _coalesceGetterSetter(element, other);\n        }\n      } else {\n        newElements.push(element);\n      }\n    }\n\n    return newElements;\n  }\n\n  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {\n    return element.decorators && element.decorators.length;\n  }\n\n  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {\n    return (\n      desc !== undefined &&\n      !(desc.value === undefined && desc.writable === undefined)\n    );\n  }\n\n  function _optionalCallableProperty /*::<T>*/(\n    obj /*: T */,\n    name /*: $Keys<T> */,\n  ) /*: ?Function */ {\n    var value = obj[name];\n    if (value !== undefined && typeof value !== \"function\") {\n      throw new TypeError(\"Expected '\" + name + \"' to be a function\");\n    }\n    return value;\n  }\n\n`;\nhelpers.classPrivateMethodGet = helper(\"7.1.6\")`\n  export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n      throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n  }\n`;\nhelpers.checkPrivateRedeclaration = helper(\"7.14.1\")`\n  export default function _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n      throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n  }\n`;\nhelpers.classPrivateFieldInitSpec = helper(\"7.14.1\")`\n  import checkPrivateRedeclaration from \"checkPrivateRedeclaration\";\n\n  export default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n    checkPrivateRedeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n  }\n`;\nhelpers.classPrivateMethodInitSpec = helper(\"7.14.1\")`\n  import checkPrivateRedeclaration from \"checkPrivateRedeclaration\";\n\n  export default function _classPrivateMethodInitSpec(obj, privateSet) {\n    checkPrivateRedeclaration(obj, privateSet);\n    privateSet.add(obj);\n  }\n`;\n{\n  helpers.classPrivateMethodSet = helper(\"7.1.6\")`\n    export default function _classPrivateMethodSet() {\n      throw new TypeError(\"attempted to reassign private method\");\n    }\n  `;\n}\nhelpers.identity = helper(\"7.17.0\")`\n  export default function _identity(x) {\n    return x;\n  }\n`;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.ensure = ensure;\nexports.get = get;\nexports.getDependencies = getDependencies;\nexports.list = void 0;\nexports.minVersion = minVersion;\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helpers = require(\"./helpers\");\n\nconst {\n  assignmentExpression,\n  cloneNode,\n  expressionStatement,\n  file,\n  identifier\n} = _t;\n\nfunction makePath(path) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet FileClass = undefined;\n\nfunction getHelperMetadata(file) {\n  const globals = new Set();\n  const localBindingNames = new Set();\n  const dependencies = new Map();\n  let exportName;\n  let exportPath;\n  const exportBindingAssignments = [];\n  const importPaths = [];\n  const importBindingsReferences = [];\n  const dependencyVisitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n\n      if (!_helpers.default[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n\n      if (child.get(\"specifiers\").length !== 1 || !child.get(\"specifiers.0\").isImportDefaultSpecifier()) {\n        throw child.buildCodeFrameError(\"Helpers can only import a default value\");\n      }\n\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (!decl.isFunctionDeclaration() || !decl.node.id) {\n        throw decl.buildCodeFrameError(\"Helpers can only export named function declarations\");\n      }\n\n      exportName = decl.node.id.name;\n      exportPath = makePath(child);\n    },\n\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    Statement(child) {\n      if (child.isModuleDeclaration()) return;\n      child.skip();\n    }\n\n  };\n  const referenceVisitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n        localBindingNames.add(name);\n      });\n    },\n\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name);\n\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding != null && binding.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    }\n\n  };\n  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);\n  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);\n  if (!exportPath) throw new Error(\"Helpers must have a default export.\");\n  exportBindingAssignments.reverse();\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  };\n}\n\nfunction permuteHelperAST(file, metadata, id, localBindings, getDependency) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  } = metadata;\n  const dependenciesRefs = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] = typeof getDependency === \"function\" && getDependency(name) || id;\n  });\n  const toRename = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const {\n    path\n  } = file;\n  const exp = path.get(exportPath);\n  const imps = importPaths.map(p => path.get(p));\n  const impsBindingRefs = importBindingsReferences.map(p => path.get(p));\n  const decl = exp.get(\"declaration\");\n\n  if (id.type === \"Identifier\") {\n    exp.replaceWith(decl);\n  } else if (id.type === \"MemberExpression\") {\n    exportBindingAssignments.forEach(assignPath => {\n      const assign = path.get(assignPath);\n      assign.replaceWith(assignmentExpression(\"=\", id, assign.node));\n    });\n    exp.replaceWith(decl);\n    path.pushContainer(\"body\", expressionStatement(assignmentExpression(\"=\", id, identifier(exportName))));\n  } else {\n    throw new Error(\"Unexpected helper format.\");\n  }\n\n  Object.keys(toRename).forEach(name => {\n    path.scope.rename(name, toRename[name]);\n  });\n\n  for (const path of imps) path.remove();\n\n  for (const path of impsBindingRefs) {\n    const node = cloneNode(dependenciesRefs[path.node.name]);\n    path.replaceWith(node);\n  }\n}\n\nconst helperData = Object.create(null);\n\nfunction loadHelper(name) {\n  if (!helperData[name]) {\n    const helper = _helpers.default[name];\n\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name\n      });\n    }\n\n    const fn = () => {\n      {\n        if (!FileClass) {\n          const fakeFile = {\n            ast: file(helper.ast()),\n            path: null\n          };\n          (0, _traverse.default)(fakeFile.ast, {\n            Program: path => (fakeFile.path = path).stop()\n          });\n          return fakeFile;\n        }\n      }\n      return new FileClass({\n        filename: `babel-helper://${name}`\n      }, {\n        ast: file(helper.ast()),\n        code: \"[internal Babel helper code]\",\n        inputMap: null\n      });\n    };\n\n    let metadata = null;\n    helperData[name] = {\n      minVersion: helper.minVersion,\n\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        metadata || (metadata = getHelperMetadata(file));\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals\n        };\n      },\n\n      getDependencies() {\n        metadata || (metadata = getHelperMetadata(fn()));\n        return Array.from(metadata.dependencies.values());\n      }\n\n    };\n  }\n\n  return helperData[name];\n}\n\nfunction get(name, getDependency, id, localBindings) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nfunction minVersion(name) {\n  return loadHelper(name).minVersion;\n}\n\nfunction getDependencies(name) {\n  return loadHelper(name).getDependencies();\n}\n\nfunction ensure(name, newFileClass) {\n  FileClass || (FileClass = newFileClass);\n  loadHelper(name);\n}\n\nconst list = Object.keys(_helpers.default).map(name => name.replace(/^_/, \"\"));\nexports.list = list;\nvar _default = get;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isModule;\n\nfunction isModule(path) {\n  const {\n    sourceType\n  } = path.node;\n\n  if (sourceType !== \"module\" && sourceType !== \"script\") {\n    throw path.buildCodeFrameError(`Unknown sourceType \"${sourceType}\", cannot transform.`);\n  }\n\n  return path.node.sourceType === \"module\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nconst {\n  numericLiteral,\n  sequenceExpression\n} = _t;\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    let newOpts;\n\n    if (typeof importedSource === \"string\") {\n      newOpts = Object.assign({}, this._defaultOpts, {\n        importedSource\n      }, opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      newOpts = Object.assign({}, this._defaultOpts, importedSource);\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ImportInjector\", {\n  enumerable: true,\n  get: function () {\n    return _importInjector.default;\n  }\n});\nexports.addDefault = addDefault;\nexports.addNamed = addNamed;\nexports.addNamespace = addNamespace;\nexports.addSideEffect = addSideEffect;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _isModule.default;\n  }\n});\n\nvar _importInjector = require(\"./import-injector\");\n\nvar _isModule = require(\"./is-module\");\n\nfunction addDefault(path, importedSource, opts) {\n  return new _importInjector.default(path).addDefault(importedSource, opts);\n}\n\nfunction addNamed(path, name, importedSource, opts) {\n  return new _importInjector.default(path).addNamed(name, importedSource, opts);\n}\n\nfunction addNamespace(path, importedSource, opts) {\n  return new _importInjector.default(path).addNamespace(importedSource, opts);\n}\n\nfunction addSideEffect(path, importedSource, opts) {\n  return new _importInjector.default(path).addSideEffect(importedSource, opts);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rewriteThis;\n\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  numericLiteral,\n  unaryExpression\n} = _t;\n\nfunction rewriteThis(programPath) {\n  (0, _traverse.default)(programPath.node, Object.assign({}, rewriteThisVisitor, {\n    noScope: true\n  }));\n}\n\nconst rewriteThisVisitor = _traverse.default.visitors.merge([_helperEnvironmentVisitor.default, {\n  ThisExpression(path) {\n    path.replaceWith(unaryExpression(\"void\", numericLiteral(0), true));\n  }\n\n}]);", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = simplifyAccess;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  LOGICAL_OPERATORS,\n  assignmentExpression,\n  binaryExpression,\n  cloneNode,\n  identifier,\n  logicalExpression,\n  numericLiteral,\n  sequenceExpression,\n  unaryExpression\n} = _t;\n\nfunction simplifyAccess(path, bindingNames, includeUpdateExpression = true) {\n  path.traverse(simpleAssignmentVisitor, {\n    scope: path.scope,\n    bindingNames,\n    seen: new WeakSet(),\n    includeUpdateExpression\n  });\n}\n\nconst simpleAssignmentVisitor = {\n  UpdateExpression: {\n    exit(path) {\n      const {\n        scope,\n        bindingNames,\n        includeUpdateExpression\n      } = this;\n\n      if (!includeUpdateExpression) {\n        return;\n      }\n\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (!bindingNames.has(localName)) return;\n\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord()) {\n        const operator = path.node.operator == \"++\" ? \"+=\" : \"-=\";\n        path.replaceWith(assignmentExpression(operator, arg.node, numericLiteral(1)));\n      } else if (path.node.prefix) {\n        path.replaceWith(assignmentExpression(\"=\", identifier(localName), binaryExpression(path.node.operator[0], unaryExpression(\"+\", arg.node), numericLiteral(1))));\n      } else {\n        const old = path.scope.generateUidIdentifierBasedOnNode(arg.node, \"old\");\n        const varName = old.name;\n        path.scope.push({\n          id: old\n        });\n        const binary = binaryExpression(path.node.operator[0], identifier(varName), numericLiteral(1));\n        path.replaceWith(sequenceExpression([assignmentExpression(\"=\", identifier(varName), unaryExpression(\"+\", arg.node)), assignmentExpression(\"=\", cloneNode(arg.node), binary), identifier(varName)]));\n      }\n    }\n\n  },\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        bindingNames\n      } = this;\n      if (path.node.operator === \"=\") return;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n      if (!left.isIdentifier()) return;\n      const localName = left.node.name;\n      if (!bindingNames.has(localName)) return;\n\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n\n      const operator = path.node.operator.slice(0, -1);\n\n      if (LOGICAL_OPERATORS.includes(operator)) {\n        path.replaceWith(logicalExpression(operator, path.node.left, assignmentExpression(\"=\", cloneNode(path.node.left), path.node.right)));\n      } else {\n        path.node.right = binaryExpression(operator, cloneNode(path.node.left), path.node.right);\n        path.node.operator = \"=\";\n      }\n    }\n\n  }\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rewriteLiveReferences;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperSimpleAccess = require(\"@babel/helper-simple-access\");\n\nconst {\n  assignmentExpression,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  getOuterBindingIdentifiers,\n  identifier,\n  isMemberExpression,\n  isVariableDeclaration,\n  jsxIdentifier,\n  jsxMemberExpression,\n  memberExpression,\n  numericLiteral,\n  sequenceExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction isInType(path) {\n  do {\n    switch (path.parent.type) {\n      case \"TSTypeAnnotation\":\n      case \"TSTypeAliasDeclaration\":\n      case \"TSTypeReference\":\n      case \"TypeAnnotation\":\n      case \"TypeAlias\":\n        return true;\n\n      case \"ExportSpecifier\":\n        return path.parentPath.parent.exportKind === \"type\";\n\n      default:\n        if (path.parentPath.isStatement() || path.parentPath.isExpression()) {\n          return false;\n        }\n\n    }\n  } while (path = path.parentPath);\n}\n\nfunction rewriteLiveReferences(programPath, metadata) {\n  const imported = new Map();\n  const exported = new Map();\n\n  const requeueInParent = path => {\n    programPath.requeue(path);\n  };\n\n  for (const [source, data] of metadata.source) {\n    for (const [localName, importName] of data.imports) {\n      imported.set(localName, [source, importName, null]);\n    }\n\n    for (const localName of data.importsNamespace) {\n      imported.set(localName, [source, null, localName]);\n    }\n  }\n\n  for (const [local, data] of metadata.local) {\n    let exportMeta = exported.get(local);\n\n    if (!exportMeta) {\n      exportMeta = [];\n      exported.set(local, exportMeta);\n    }\n\n    exportMeta.push(...data.names);\n  }\n\n  const rewriteBindingInitVisitorState = {\n    metadata,\n    requeueInParent,\n    scope: programPath.scope,\n    exported\n  };\n  programPath.traverse(rewriteBindingInitVisitor, rewriteBindingInitVisitorState);\n  (0, _helperSimpleAccess.default)(programPath, new Set([...Array.from(imported.keys()), ...Array.from(exported.keys())]), false);\n  const rewriteReferencesVisitorState = {\n    seen: new WeakSet(),\n    metadata,\n    requeueInParent,\n    scope: programPath.scope,\n    imported,\n    exported,\n    buildImportReference: ([source, importName, localName], identNode) => {\n      const meta = metadata.source.get(source);\n\n      if (localName) {\n        if (meta.lazy) {\n          identNode = callExpression(identNode, []);\n        }\n\n        return identNode;\n      }\n\n      let namespace = identifier(meta.name);\n      if (meta.lazy) namespace = callExpression(namespace, []);\n\n      if (importName === \"default\" && meta.interop === \"node-default\") {\n        return namespace;\n      }\n\n      const computed = metadata.stringSpecifiers.has(importName);\n      return memberExpression(namespace, computed ? stringLiteral(importName) : identifier(importName), computed);\n    }\n  };\n  programPath.traverse(rewriteReferencesVisitor, rewriteReferencesVisitorState);\n}\n\nconst rewriteBindingInitVisitor = {\n  Scope(path) {\n    path.skip();\n  },\n\n  ClassDeclaration(path) {\n    const {\n      requeueInParent,\n      exported,\n      metadata\n    } = this;\n    const {\n      id\n    } = path.node;\n    if (!id) throw new Error(\"Expected class to have a name\");\n    const localName = id.name;\n    const exportNames = exported.get(localName) || [];\n\n    if (exportNames.length > 0) {\n      const statement = expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, identifier(localName), path.scope));\n      statement._blockHoist = path.node._blockHoist;\n      requeueInParent(path.insertAfter(statement)[0]);\n    }\n  },\n\n  VariableDeclaration(path) {\n    const {\n      requeueInParent,\n      exported,\n      metadata\n    } = this;\n    Object.keys(path.getOuterBindingIdentifiers()).forEach(localName => {\n      const exportNames = exported.get(localName) || [];\n\n      if (exportNames.length > 0) {\n        const statement = expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, identifier(localName), path.scope));\n        statement._blockHoist = path.node._blockHoist;\n        requeueInParent(path.insertAfter(statement)[0]);\n      }\n    });\n  }\n\n};\n\nconst buildBindingExportAssignmentExpression = (metadata, exportNames, localExpr, scope) => {\n  const exportsObjectName = metadata.exportName;\n\n  for (let currentScope = scope; currentScope != null; currentScope = currentScope.parent) {\n    if (currentScope.hasOwnBinding(exportsObjectName)) {\n      currentScope.rename(exportsObjectName);\n    }\n  }\n\n  return (exportNames || []).reduce((expr, exportName) => {\n    const {\n      stringSpecifiers\n    } = metadata;\n    const computed = stringSpecifiers.has(exportName);\n    return assignmentExpression(\"=\", memberExpression(identifier(exportsObjectName), computed ? stringLiteral(exportName) : identifier(exportName), computed), expr);\n  }, localExpr);\n};\n\nconst buildImportThrow = localName => {\n  return _template.default.expression.ast`\n    (function() {\n      throw new Error('\"' + '${localName}' + '\" is read-only.');\n    })()\n  `;\n};\n\nconst rewriteReferencesVisitor = {\n  ReferencedIdentifier(path) {\n    const {\n      seen,\n      buildImportReference,\n      scope,\n      imported,\n      requeueInParent\n    } = this;\n    if (seen.has(path.node)) return;\n    seen.add(path.node);\n    const localName = path.node.name;\n    const importData = imported.get(localName);\n\n    if (importData) {\n      if (isInType(path)) {\n        throw path.buildCodeFrameError(`Cannot transform the imported binding \"${localName}\" since it's also used in a type annotation. ` + `Please strip type annotations using @babel/preset-typescript or @babel/preset-flow.`);\n      }\n\n      const localBinding = path.scope.getBinding(localName);\n      const rootBinding = scope.getBinding(localName);\n      if (rootBinding !== localBinding) return;\n      const ref = buildImportReference(importData, path.node);\n      ref.loc = path.node.loc;\n\n      if ((path.parentPath.isCallExpression({\n        callee: path.node\n      }) || path.parentPath.isOptionalCallExpression({\n        callee: path.node\n      }) || path.parentPath.isTaggedTemplateExpression({\n        tag: path.node\n      })) && isMemberExpression(ref)) {\n        path.replaceWith(sequenceExpression([numericLiteral(0), ref]));\n      } else if (path.isJSXIdentifier() && isMemberExpression(ref)) {\n        const {\n          object,\n          property\n        } = ref;\n        path.replaceWith(jsxMemberExpression(jsxIdentifier(object.name), jsxIdentifier(property.name)));\n      } else {\n        path.replaceWith(ref);\n      }\n\n      requeueInParent(path);\n      path.skip();\n    }\n  },\n\n  UpdateExpression(path) {\n    const {\n      scope,\n      seen,\n      imported,\n      exported,\n      requeueInParent,\n      buildImportReference\n    } = this;\n    if (seen.has(path.node)) return;\n    seen.add(path.node);\n    const arg = path.get(\"argument\");\n    if (arg.isMemberExpression()) return;\n    const update = path.node;\n\n    if (arg.isIdentifier()) {\n      const localName = arg.node.name;\n\n      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n        return;\n      }\n\n      const exportedNames = exported.get(localName);\n      const importData = imported.get(localName);\n\n      if ((exportedNames == null ? void 0 : exportedNames.length) > 0 || importData) {\n        if (importData) {\n          path.replaceWith(assignmentExpression(update.operator[0] + \"=\", buildImportReference(importData, arg.node), buildImportThrow(localName)));\n        } else if (update.prefix) {\n          path.replaceWith(buildBindingExportAssignmentExpression(this.metadata, exportedNames, cloneNode(update), path.scope));\n        } else {\n          const ref = scope.generateDeclaredUidIdentifier(localName);\n          path.replaceWith(sequenceExpression([assignmentExpression(\"=\", cloneNode(ref), cloneNode(update)), buildBindingExportAssignmentExpression(this.metadata, exportedNames, identifier(localName), path.scope), cloneNode(ref)]));\n        }\n      }\n    }\n\n    requeueInParent(path);\n    path.skip();\n  },\n\n  AssignmentExpression: {\n    exit(path) {\n      const {\n        scope,\n        seen,\n        imported,\n        exported,\n        requeueInParent,\n        buildImportReference\n      } = this;\n      if (seen.has(path.node)) return;\n      seen.add(path.node);\n      const left = path.get(\"left\");\n      if (left.isMemberExpression()) return;\n\n      if (left.isIdentifier()) {\n        const localName = left.node.name;\n\n        if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {\n          return;\n        }\n\n        const exportedNames = exported.get(localName);\n        const importData = imported.get(localName);\n\n        if ((exportedNames == null ? void 0 : exportedNames.length) > 0 || importData) {\n          _assert(path.node.operator === \"=\", \"Path was not simplified\");\n\n          const assignment = path.node;\n\n          if (importData) {\n            assignment.left = buildImportReference(importData, left.node);\n            assignment.right = sequenceExpression([assignment.right, buildImportThrow(localName)]);\n          }\n\n          path.replaceWith(buildBindingExportAssignmentExpression(this.metadata, exportedNames, assignment, path.scope));\n          requeueInParent(path);\n        }\n      } else {\n        const ids = left.getOuterBindingIdentifiers();\n        const programScopeIds = Object.keys(ids).filter(localName => scope.getBinding(localName) === path.scope.getBinding(localName));\n        const id = programScopeIds.find(localName => imported.has(localName));\n\n        if (id) {\n          path.node.right = sequenceExpression([path.node.right, buildImportThrow(id)]);\n        }\n\n        const items = [];\n        programScopeIds.forEach(localName => {\n          const exportedNames = exported.get(localName) || [];\n\n          if (exportedNames.length > 0) {\n            items.push(buildBindingExportAssignmentExpression(this.metadata, exportedNames, identifier(localName), path.scope));\n          }\n        });\n\n        if (items.length > 0) {\n          let node = sequenceExpression(items);\n\n          if (path.parentPath.isExpressionStatement()) {\n            node = expressionStatement(node);\n            node._blockHoist = path.parentPath.node._blockHoist;\n          }\n\n          const statement = path.insertAfter(node)[0];\n          requeueInParent(statement);\n        }\n      }\n    }\n\n  },\n\n  \"ForOfStatement|ForInStatement\"(path) {\n    const {\n      scope,\n      node\n    } = path;\n    const {\n      left\n    } = node;\n    const {\n      exported,\n      imported,\n      scope: programScope\n    } = this;\n\n    if (!isVariableDeclaration(left)) {\n      let didTransformExport = false,\n          importConstViolationName;\n      const loopBodyScope = path.get(\"body\").scope;\n\n      for (const name of Object.keys(getOuterBindingIdentifiers(left))) {\n        if (programScope.getBinding(name) === scope.getBinding(name)) {\n          if (exported.has(name)) {\n            didTransformExport = true;\n\n            if (loopBodyScope.hasOwnBinding(name)) {\n              loopBodyScope.rename(name);\n            }\n          }\n\n          if (imported.has(name) && !importConstViolationName) {\n            importConstViolationName = name;\n          }\n        }\n      }\n\n      if (!didTransformExport && !importConstViolationName) {\n        return;\n      }\n\n      path.ensureBlock();\n      const bodyPath = path.get(\"body\");\n      const newLoopId = scope.generateUidIdentifierBasedOnNode(left);\n      path.get(\"left\").replaceWith(variableDeclaration(\"let\", [variableDeclarator(cloneNode(newLoopId))]));\n      scope.registerDeclaration(path.get(\"left\"));\n\n      if (didTransformExport) {\n        bodyPath.unshiftContainer(\"body\", expressionStatement(assignmentExpression(\"=\", left, newLoopId)));\n      }\n\n      if (importConstViolationName) {\n        bodyPath.unshiftContainer(\"body\", expressionStatement(buildImportThrow(importConstViolationName)));\n      }\n    }\n  }\n\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeModuleAndLoadMetadata;\nexports.hasExports = hasExports;\nexports.isSideEffectImport = isSideEffectImport;\nexports.validateImportInteropOption = validateImportInteropOption;\n\nvar _path = require(\"path\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nfunction hasExports(metadata) {\n  return metadata.hasExports;\n}\n\nfunction isSideEffectImport(source) {\n  return source.imports.size === 0 && source.importsNamespace.size === 0 && source.reexports.size === 0 && source.reexportNamespace.size === 0 && !source.reexportAll;\n}\n\nfunction validateImportInteropOption(importInterop) {\n  if (typeof importInterop !== \"function\" && importInterop !== \"none\" && importInterop !== \"babel\" && importInterop !== \"node\") {\n    throw new Error(`.importInterop must be one of \"none\", \"babel\", \"node\", or a function returning one of those values (received ${importInterop}).`);\n  }\n\n  return importInterop;\n}\n\nfunction resolveImportInterop(importInterop, source, filename) {\n  if (typeof importInterop === \"function\") {\n    return validateImportInteropOption(importInterop(source, filename));\n  }\n\n  return importInterop;\n}\n\nfunction normalizeModuleAndLoadMetadata(programPath, exportName, {\n  importInterop,\n  initializeReexports = false,\n  lazy = false,\n  esNamespaceOnly = false,\n  filename\n}) {\n  if (!exportName) {\n    exportName = programPath.scope.generateUidIdentifier(\"exports\").name;\n  }\n\n  const stringSpecifiers = new Set();\n  nameAnonymousExports(programPath);\n  const {\n    local,\n    source,\n    hasExports\n  } = getModuleMetadata(programPath, {\n    initializeReexports,\n    lazy\n  }, stringSpecifiers);\n  removeModuleDeclarations(programPath);\n\n  for (const [, metadata] of source) {\n    if (metadata.importsNamespace.size > 0) {\n      metadata.name = metadata.importsNamespace.values().next().value;\n    }\n\n    const resolvedInterop = resolveImportInterop(importInterop, metadata.source, filename);\n\n    if (resolvedInterop === \"none\") {\n      metadata.interop = \"none\";\n    } else if (resolvedInterop === \"node\" && metadata.interop === \"namespace\") {\n      metadata.interop = \"node-namespace\";\n    } else if (resolvedInterop === \"node\" && metadata.interop === \"default\") {\n      metadata.interop = \"node-default\";\n    } else if (esNamespaceOnly && metadata.interop === \"namespace\") {\n      metadata.interop = \"default\";\n    }\n  }\n\n  return {\n    exportName,\n    exportNameListName: null,\n    hasExports,\n    local,\n    source,\n    stringSpecifiers\n  };\n}\n\nfunction getExportSpecifierName(path, stringSpecifiers) {\n  if (path.isIdentifier()) {\n    return path.node.name;\n  } else if (path.isStringLiteral()) {\n    const stringValue = path.node.value;\n\n    if (!(0, _helperValidatorIdentifier.isIdentifierName)(stringValue)) {\n      stringSpecifiers.add(stringValue);\n    }\n\n    return stringValue;\n  } else {\n    throw new Error(`Expected export specifier to be either Identifier or StringLiteral, got ${path.node.type}`);\n  }\n}\n\nfunction assertExportSpecifier(path) {\n  if (path.isExportSpecifier()) {\n    return;\n  } else if (path.isExportNamespaceSpecifier()) {\n    throw path.buildCodeFrameError(\"Export namespace should be first transformed by `@babel/plugin-proposal-export-namespace-from`.\");\n  } else {\n    throw path.buildCodeFrameError(\"Unexpected export specifier type\");\n  }\n}\n\nfunction getModuleMetadata(programPath, {\n  lazy,\n  initializeReexports\n}, stringSpecifiers) {\n  const localData = getLocalExportMetadata(programPath, initializeReexports, stringSpecifiers);\n  const sourceData = new Map();\n\n  const getData = sourceNode => {\n    const source = sourceNode.value;\n    let data = sourceData.get(source);\n\n    if (!data) {\n      data = {\n        name: programPath.scope.generateUidIdentifier((0, _path.basename)(source, (0, _path.extname)(source))).name,\n        interop: \"none\",\n        loc: null,\n        imports: new Map(),\n        importsNamespace: new Set(),\n        reexports: new Map(),\n        reexportNamespace: new Set(),\n        reexportAll: null,\n        lazy: false,\n        source\n      };\n      sourceData.set(source, data);\n    }\n\n    return data;\n  };\n\n  let hasExports = false;\n  programPath.get(\"body\").forEach(child => {\n    if (child.isImportDeclaration()) {\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(spec => {\n        if (spec.isImportDefaultSpecifier()) {\n          const localName = spec.get(\"local\").node.name;\n          data.imports.set(localName, \"default\");\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexports.set(name, \"default\");\n            });\n          }\n        } else if (spec.isImportNamespaceSpecifier()) {\n          const localName = spec.get(\"local\").node.name;\n          data.importsNamespace.add(localName);\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexportNamespace.add(name);\n            });\n          }\n        } else if (spec.isImportSpecifier()) {\n          const importName = getExportSpecifierName(spec.get(\"imported\"), stringSpecifiers);\n          const localName = spec.get(\"local\").node.name;\n          data.imports.set(localName, importName);\n          const reexport = localData.get(localName);\n\n          if (reexport) {\n            localData.delete(localName);\n            reexport.names.forEach(name => {\n              data.reexports.set(name, importName);\n            });\n          }\n        }\n      });\n    } else if (child.isExportAllDeclaration()) {\n      hasExports = true;\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      data.reexportAll = {\n        loc: child.node.loc\n      };\n    } else if (child.isExportNamedDeclaration() && child.node.source) {\n      hasExports = true;\n      const data = getData(child.node.source);\n      if (!data.loc) data.loc = child.node.loc;\n      child.get(\"specifiers\").forEach(spec => {\n        assertExportSpecifier(spec);\n        const importName = getExportSpecifierName(spec.get(\"local\"), stringSpecifiers);\n        const exportName = getExportSpecifierName(spec.get(\"exported\"), stringSpecifiers);\n        data.reexports.set(exportName, importName);\n\n        if (exportName === \"__esModule\") {\n          throw spec.get(\"exported\").buildCodeFrameError('Illegal export \"__esModule\".');\n        }\n      });\n    } else if (child.isExportNamedDeclaration() || child.isExportDefaultDeclaration()) {\n      hasExports = true;\n    }\n  });\n\n  for (const metadata of sourceData.values()) {\n    let needsDefault = false;\n    let needsNamed = false;\n\n    if (metadata.importsNamespace.size > 0) {\n      needsDefault = true;\n      needsNamed = true;\n    }\n\n    if (metadata.reexportAll) {\n      needsNamed = true;\n    }\n\n    for (const importName of metadata.imports.values()) {\n      if (importName === \"default\") needsDefault = true;else needsNamed = true;\n    }\n\n    for (const importName of metadata.reexports.values()) {\n      if (importName === \"default\") needsDefault = true;else needsNamed = true;\n    }\n\n    if (needsDefault && needsNamed) {\n      metadata.interop = \"namespace\";\n    } else if (needsDefault) {\n      metadata.interop = \"default\";\n    }\n  }\n\n  for (const [source, metadata] of sourceData) {\n    if (lazy !== false && !(isSideEffectImport(metadata) || metadata.reexportAll)) {\n      if (lazy === true) {\n        metadata.lazy = !/\\./.test(source);\n      } else if (Array.isArray(lazy)) {\n        metadata.lazy = lazy.indexOf(source) !== -1;\n      } else if (typeof lazy === \"function\") {\n        metadata.lazy = lazy(source);\n      } else {\n        throw new Error(`.lazy must be a boolean, string array, or function`);\n      }\n    }\n  }\n\n  return {\n    hasExports,\n    local: localData,\n    source: sourceData\n  };\n}\n\nfunction getLocalExportMetadata(programPath, initializeReexports, stringSpecifiers) {\n  const bindingKindLookup = new Map();\n  programPath.get(\"body\").forEach(child => {\n    let kind;\n\n    if (child.isImportDeclaration()) {\n      kind = \"import\";\n    } else {\n      if (child.isExportDefaultDeclaration()) {\n        child = child.get(\"declaration\");\n      }\n\n      if (child.isExportNamedDeclaration()) {\n        if (child.node.declaration) {\n          child = child.get(\"declaration\");\n        } else if (initializeReexports && child.node.source && child.get(\"source\").isStringLiteral()) {\n          child.get(\"specifiers\").forEach(spec => {\n            assertExportSpecifier(spec);\n            bindingKindLookup.set(spec.get(\"local\").node.name, \"block\");\n          });\n          return;\n        }\n      }\n\n      if (child.isFunctionDeclaration()) {\n        kind = \"hoisted\";\n      } else if (child.isClassDeclaration()) {\n        kind = \"block\";\n      } else if (child.isVariableDeclaration({\n        kind: \"var\"\n      })) {\n        kind = \"var\";\n      } else if (child.isVariableDeclaration()) {\n        kind = \"block\";\n      } else {\n        return;\n      }\n    }\n\n    Object.keys(child.getOuterBindingIdentifiers()).forEach(name => {\n      bindingKindLookup.set(name, kind);\n    });\n  });\n  const localMetadata = new Map();\n\n  const getLocalMetadata = idPath => {\n    const localName = idPath.node.name;\n    let metadata = localMetadata.get(localName);\n\n    if (!metadata) {\n      const kind = bindingKindLookup.get(localName);\n\n      if (kind === undefined) {\n        throw idPath.buildCodeFrameError(`Exporting local \"${localName}\", which is not declared.`);\n      }\n\n      metadata = {\n        names: [],\n        kind\n      };\n      localMetadata.set(localName, metadata);\n    }\n\n    return metadata;\n  };\n\n  programPath.get(\"body\").forEach(child => {\n    if (child.isExportNamedDeclaration() && (initializeReexports || !child.node.source)) {\n      if (child.node.declaration) {\n        const declaration = child.get(\"declaration\");\n        const ids = declaration.getOuterBindingIdentifierPaths();\n        Object.keys(ids).forEach(name => {\n          if (name === \"__esModule\") {\n            throw declaration.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          getLocalMetadata(ids[name]).names.push(name);\n        });\n      } else {\n        child.get(\"specifiers\").forEach(spec => {\n          const local = spec.get(\"local\");\n          const exported = spec.get(\"exported\");\n          const localMetadata = getLocalMetadata(local);\n          const exportName = getExportSpecifierName(exported, stringSpecifiers);\n\n          if (exportName === \"__esModule\") {\n            throw exported.buildCodeFrameError('Illegal export \"__esModule\".');\n          }\n\n          localMetadata.names.push(exportName);\n        });\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      const declaration = child.get(\"declaration\");\n\n      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {\n        getLocalMetadata(declaration.get(\"id\")).names.push(\"default\");\n      } else {\n        throw declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    }\n  });\n  return localMetadata;\n}\n\nfunction nameAnonymousExports(programPath) {\n  programPath.get(\"body\").forEach(child => {\n    if (!child.isExportDefaultDeclaration()) return;\n    (0, _helperSplitExportDeclaration.default)(child);\n  });\n}\n\nfunction removeModuleDeclarations(programPath) {\n  programPath.get(\"body\").forEach(child => {\n    if (child.isImportDeclaration()) {\n      child.remove();\n    } else if (child.isExportNamedDeclaration()) {\n      if (child.node.declaration) {\n        child.node.declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(child.node.declaration);\n      } else {\n        child.remove();\n      }\n    } else if (child.isExportDefaultDeclaration()) {\n      const declaration = child.get(\"declaration\");\n\n      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {\n        declaration._blockHoist = child.node._blockHoist;\n        child.replaceWith(declaration);\n      } else {\n        throw declaration.buildCodeFrameError(\"Unexpected default expression export.\");\n      }\n    } else if (child.isExportAllDeclaration()) {\n      child.remove();\n    }\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModuleName;\n{\n  const originalGetModuleName = getModuleName;\n\n  exports.default = getModuleName = function getModuleName(rootOpts, pluginOpts) {\n    var _pluginOpts$moduleId, _pluginOpts$moduleIds, _pluginOpts$getModule, _pluginOpts$moduleRoo;\n\n    return originalGetModuleName(rootOpts, {\n      moduleId: (_pluginOpts$moduleId = pluginOpts.moduleId) != null ? _pluginOpts$moduleId : rootOpts.moduleId,\n      moduleIds: (_pluginOpts$moduleIds = pluginOpts.moduleIds) != null ? _pluginOpts$moduleIds : rootOpts.moduleIds,\n      getModuleId: (_pluginOpts$getModule = pluginOpts.getModuleId) != null ? _pluginOpts$getModule : rootOpts.getModuleId,\n      moduleRoot: (_pluginOpts$moduleRoo = pluginOpts.moduleRoot) != null ? _pluginOpts$moduleRoo : rootOpts.moduleRoot\n    });\n  };\n}\n\nfunction getModuleName(rootOpts, pluginOpts) {\n  const {\n    filename,\n    filenameRelative = filename,\n    sourceRoot = pluginOpts.moduleRoot\n  } = rootOpts;\n  const {\n    moduleId,\n    moduleIds = !!moduleId,\n    getModuleId,\n    moduleRoot = sourceRoot\n  } = pluginOpts;\n  if (!moduleIds) return null;\n\n  if (moduleId != null && !getModuleId) {\n    return moduleId;\n  }\n\n  let moduleName = moduleRoot != null ? moduleRoot + \"/\" : \"\";\n\n  if (filenameRelative) {\n    const sourceRootReplacer = sourceRoot != null ? new RegExp(\"^\" + sourceRoot + \"/?\") : \"\";\n    moduleName += filenameRelative.replace(sourceRootReplacer, \"\").replace(/\\.(\\w*?)$/, \"\");\n  }\n\n  moduleName = moduleName.replace(/\\\\/g, \"/\");\n\n  if (getModuleId) {\n    return getModuleId(moduleName) || moduleName;\n  } else {\n    return moduleName;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nexports.wrapInterop = wrapInterop;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nconst {\n  booleanLiteral,\n  callExpression,\n  cloneNode,\n  directive,\n  directiveLiteral,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  memberExpression,\n  stringLiteral,\n  valueToNode,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  loose,\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  noInterop,\n  importInterop = noInterop ? \"none\" : \"babel\",\n  lazy,\n  esNamespaceOnly,\n  filename,\n  constantReexports = loose,\n  enumerableModuleMeta = loose,\n  noIncompleteNsImportDetection\n}) {\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop,\n    initializeReexports: constantReexports,\n    lazy,\n    esNamespaceOnly,\n    filename\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", directive(directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, constantReexports, noIncompleteNsImportDetection));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {\n  const statements = [];\n  let srcNamespace = identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: cloneNode(srcNamespace)\n    }));\n  }\n\n  if (constantReexports) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  constantComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: _template.default.statement`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, constantReexports) => {\n  const namespace = metadata.lazy ? callExpression(identifier(metadata.name), []) : identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT = cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = memberExpression(NAMESPACE_IMPORT, identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerableModuleMeta = false) {\n  return (enumerableModuleMeta ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || !!data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: variableDeclaration(\"var\", [variableDeclarator(name, valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, constantReexports = false, noIncompleteNsImportDetection = false) {\n  const initStatements = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push([data.names[0], buildInitStatement(metadata, data.names, identifier(localName))]);\n    } else if (!noIncompleteNsImportDetection) {\n      for (const exportName of data.names) {\n        initStatements.push([exportName, null]);\n      }\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!constantReexports) {\n      const reexportsStatements = buildReexportsFromMeta(metadata, data, false);\n      const reexports = [...data.reexports.keys()];\n\n      for (let i = 0; i < reexportsStatements.length; i++) {\n        initStatements.push([reexports[i], reexportsStatements[i]]);\n      }\n    }\n\n    if (!noIncompleteNsImportDetection) {\n      for (const exportName of data.reexportNamespace) {\n        initStatements.push([exportName, null]);\n      }\n    }\n  }\n\n  initStatements.sort(([a], [b]) => {\n    if (a < b) return -1;\n    if (b < a) return 1;\n    return 0;\n  });\n  const results = [];\n\n  if (noIncompleteNsImportDetection) {\n    for (const [, initStatement] of initStatements) {\n      results.push(initStatement);\n    }\n  } else {\n    const chunkSize = 100;\n\n    for (let i = 0; i < initStatements.length; i += chunkSize) {\n      let uninitializedExportNames = [];\n\n      for (let j = 0; j < chunkSize && i + j < initStatements.length; j++) {\n        const [exportName, initStatement] = initStatements[i + j];\n\n        if (initStatement !== null) {\n          if (uninitializedExportNames.length > 0) {\n            results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n            uninitializedExportNames = [];\n          }\n\n          results.push(initStatement);\n        } else {\n          uninitializedExportNames.push(exportName);\n        }\n      }\n\n      if (uninitializedExportNames.length > 0) {\n        results.push(buildInitStatement(metadata, uninitializedExportNames, programPath.scope.buildUndefinedNode()));\n      }\n    }\n  }\n\n  return results;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}", "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperModuleTransforms() {\n  const data = require(\"@babel/helper-module-transforms\");\n\n  _helperModuleTransforms = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  const data = require(\"semver\");\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst {\n  cloneNode,\n  interpreterDirective\n} = _t();\n\nconst errorVisitor = {\n  enter(path, state) {\n    const loc = path.node.loc;\n\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  }\n\n};\n\nclass File {\n  constructor(options, {\n    code,\n    ast,\n    inputMap\n  }) {\n    this._map = new Map();\n    this.opts = void 0;\n    this.declarations = {};\n    this.path = void 0;\n    this.ast = void 0;\n    this.scope = void 0;\n    this.metadata = {};\n    this.code = \"\";\n    this.inputMap = void 0;\n    this.hub = {\n      file: this,\n      getCode: () => this.code,\n      getScope: () => this.scope,\n      addHelper: this.addHelper.bind(this),\n      buildError: this.buildCodeFrameError.bind(this)\n    };\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n    this.path = _traverse().NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\"\n    }).setContext();\n    this.scope = this.path.scope;\n  }\n\n  get shebang() {\n    const {\n      interpreter\n    } = this.path.node;\n    return interpreter ? interpreter.value : \"\";\n  }\n\n  set shebang(value) {\n    if (value) {\n      this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n    } else {\n      this.path.get(\"interpreter\").remove();\n    }\n  }\n\n  set(key, val) {\n    if (key === \"helpersNamespace\") {\n      throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" + \"If you are using @babel/plugin-external-helpers you will need to use a newer \" + \"version than the one you currently have installed. \" + \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" + \"alongside 'file.availableHelper()'.\");\n    }\n\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  getModuleName() {\n    return (0, _helperModuleTransforms().getModuleName)(this.opts, this.opts);\n  }\n\n  addImport() {\n    throw new Error(\"This API has been removed. If you're looking for this \" + \"functionality in Babel 7, you should import the \" + \"'@babel/helper-module-imports' module and use the functions exposed \" + \" from that module, such as 'addNamed' or 'addDefault'.\");\n  }\n\n  availableHelper(name, versionRange) {\n    let minVersion;\n\n    try {\n      minVersion = helpers().minVersion(name);\n    } catch (err) {\n      if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n      return false;\n    }\n\n    if (typeof versionRange !== \"string\") return true;\n    if (_semver().valid(versionRange)) versionRange = `^${versionRange}`;\n    return !_semver().intersects(`<${minVersion}`, versionRange) && !_semver().intersects(`>=8.0.0`, versionRange);\n  }\n\n  addHelper(name) {\n    const declar = this.declarations[name];\n    if (declar) return cloneNode(declar);\n    const generator = this.get(\"helperGenerator\");\n\n    if (generator) {\n      const res = generator(name);\n      if (res) return res;\n    }\n\n    helpers().ensure(name, File);\n    const uid = this.declarations[name] = this.scope.generateUidIdentifier(name);\n    const dependencies = {};\n\n    for (const dep of helpers().getDependencies(name)) {\n      dependencies[dep] = this.addHelper(dep);\n    }\n\n    const {\n      nodes,\n      globals\n    } = helpers().get(name, dep => dependencies[dep], uid, Object.keys(this.scope.getAllBindings()));\n    globals.forEach(name => {\n      if (this.path.scope.hasBinding(name, true)) {\n        this.path.scope.rename(name);\n      }\n    });\n    nodes.forEach(node => {\n      node._compact = true;\n    });\n    this.path.unshiftContainer(\"body\", nodes);\n    this.path.get(\"body\").forEach(path => {\n      if (nodes.indexOf(path.node) === -1) return;\n      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);\n    });\n    return uid;\n  }\n\n  addTemplateObject() {\n    throw new Error(\"This function has been moved into the template literal transform itself.\");\n  }\n\n  buildCodeFrameError(node, msg, _Error = SyntaxError) {\n    let loc = node && (node.loc || node._loc);\n\n    if (!loc && node) {\n      const state = {\n        loc: null\n      };\n      (0, _traverse().default)(node, errorVisitor, this.scope, state);\n      loc = state.loc;\n      let txt = \"This is an error on an internal node. Probably an internal error.\";\n      if (loc) txt += \" Location has been estimated.\";\n      msg += ` (${txt})`;\n    }\n\n    if (loc) {\n      const {\n        highlightCode = true\n      } = this.opts;\n      msg += \"\\n\" + (0, _codeFrame().codeFrameColumns)(this.code, {\n        start: {\n          line: loc.start.line,\n          column: loc.start.column + 1\n        },\n        end: loc.end && loc.start.line === loc.end.line ? {\n          line: loc.end.line,\n          column: loc.end.column + 1\n        } : undefined\n      }, {\n        highlightCode\n      });\n    }\n\n    return new _Error(msg);\n  }\n\n}\n\nexports.default = File;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = require(\"@babel/generator\");\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = require(\"@babel/template\");\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = require(\"../transformation/file/file\");\n\nconst {\n  arrayExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  exportNamedDeclaration,\n  exportSpecifier,\n  expressionStatement,\n  functionExpression,\n  identifier,\n  memberExpression,\n  objectExpression,\n  program,\n  stringLiteral,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t();\n\nconst buildUmdWrapper = replacements => _template().default.statement`\n    (function (root, factory) {\n      if (typeof define === \"function\" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === \"object\") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  `(replacements);\n\nfunction buildGlobal(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  const container = functionExpression(null, [identifier(\"global\")], blockStatement(body));\n  const tree = program([expressionStatement(callExpression(container, [conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", identifier(\"global\")), stringLiteral(\"undefined\")), identifier(\"self\"), identifier(\"global\"))]))]);\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, assignmentExpression(\"=\", memberExpression(identifier(\"global\"), namespace), objectExpression([])))]));\n  buildHelpers(body, namespace, allowlist);\n  return tree;\n}\n\nfunction buildModule(allowlist) {\n  const body = [];\n  const refs = buildHelpers(body, null, allowlist);\n  body.unshift(exportNamedDeclaration(null, Object.keys(refs).map(name => {\n    return exportSpecifier(cloneNode(refs[name]), identifier(name));\n  })));\n  return program(body, [], \"module\");\n}\n\nfunction buildUmd(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, identifier(\"global\"))]));\n  buildHelpers(body, namespace, allowlist);\n  return program([buildUmdWrapper({\n    FACTORY_PARAMETERS: identifier(\"global\"),\n    BROWSER_ARGUMENTS: assignmentExpression(\"=\", memberExpression(identifier(\"root\"), namespace), objectExpression([])),\n    COMMON_ARGUMENTS: identifier(\"exports\"),\n    AMD_ARGUMENTS: arrayExpression([stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, objectExpression([]))]));\n  const tree = program(body);\n  buildHelpers(body, namespace, allowlist);\n  body.push(expressionStatement(namespace));\n  return tree;\n}\n\nfunction buildHelpers(body, namespace, allowlist) {\n  const getHelperReference = name => {\n    return namespace ? memberExpression(namespace, identifier(name)) : identifier(`_${name}`);\n  };\n\n  const refs = {};\n  helpers().list.forEach(function (name) {\n    if (allowlist && allowlist.indexOf(name) < 0) return;\n    const ref = refs[name] = getHelperReference(name);\n    helpers().ensure(name, _file.default);\n    const {\n      nodes\n    } = helpers().get(name, getHelperReference, ref);\n    body.push(...nodes);\n  });\n  return refs;\n}\n\nfunction _default(allowlist, outputType = \"global\") {\n  let tree;\n  const build = {\n    global: buildGlobal,\n    module: buildModule,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(allowlist);\n  } else {\n    throw new Error(`Unsupported output type ${outputType}`);\n  }\n\n  return (0, _generator().default)(tree).code;\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ROOT_CONFIG_FILENAMES = void 0;\nexports.findConfigUpwards = findConfigUpwards;\nexports.findPackageData = findPackageData;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.resolveShowConfigPath = resolveShowConfigPath;\n\nfunction findConfigUpwards(rootDir) {\n  return null;\n}\n\nfunction* findPackageData(filepath) {\n  return {\n    filepath,\n    directories: [],\n    pkg: null,\n    isPackage: false\n  };\n}\n\nfunction* findRelativeConfig(pkgData, envName, caller) {\n  return {\n    config: null,\n    ignore: null\n  };\n}\n\nfunction* findRootConfig(dirname, envName, caller) {\n  return null;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);\n}\n\nfunction* resolveShowConfigPath(dirname) {\n  return null;\n}\n\nconst ROOT_CONFIG_FILENAMES = [];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n\nfunction resolvePlugin(name, dirname) {\n  return null;\n}\n\nfunction resolvePreset(name, dirname) {\n  return null;\n}\n\nfunction loadPlugin(name, dirname) {\n  throw new Error(`Cannot load plugin ${name} relative to ${dirname} in a browser`);\n}\n\nfunction loadPreset(name, dirname) {\n  throw new Error(`Cannot load preset ${name} relative to ${dirname} in a browser`);\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnv = getEnv;\n\nfunction getEnv(defaultValue = \"development\") {\n  return process.env.BABEL_ENV || process.env.NODE_ENV || defaultValue;\n}\n\n0 && 0;", "\"use strict\";\n\n// These use the global symbol registry so that multiple copies of this\n// library can work together in case they are not deduped.\nconst GENSYNC_START = Symbol.for(\"gensync:v1:start\");\nconst GENSYNC_SUSPEND = Symbol.for(\"gensync:v1:suspend\");\n\nconst GENSYNC_EXPECTED_START = \"GENSYNC_EXPECTED_START\";\nconst GENSYNC_EXPECTED_SUSPEND = \"GENSYNC_EXPECTED_SUSPEND\";\nconst GENSYNC_OPTIONS_ERROR = \"GENSYNC_OPTIONS_ERROR\";\nconst GENSYNC_RACE_NONEMPTY = \"GENSYNC_RACE_NONEMPTY\";\nconst GENSYNC_ERRBACK_NO_CALLBACK = \"GENSYNC_ERRBACK_NO_CALLBACK\";\n\nmodule.exports = Object.assign(\n  function gensync(optsOrFn) {\n    let genFn = optsOrFn;\n    if (typeof optsOrFn !== \"function\") {\n      genFn = newGenerator(optsOrFn);\n    } else {\n      genFn = wrapGenerator(optsOrFn);\n    }\n\n    return Object.assign(genFn, makeFunctionAPI(genFn));\n  },\n  {\n    all: buildOperation({\n      name: \"all\",\n      arity: 1,\n      sync: function(args) {\n        const items = Array.from(args[0]);\n        return items.map(item => evaluateSync(item));\n      },\n      async: function(args, resolve, reject) {\n        const items = Array.from(args[0]);\n\n        if (items.length === 0) {\n          Promise.resolve().then(() => resolve([]));\n          return;\n        }\n\n        let count = 0;\n        const results = items.map(() => undefined);\n        items.forEach((item, i) => {\n          evaluateAsync(\n            item,\n            val => {\n              results[i] = val;\n              count += 1;\n\n              if (count === results.length) resolve(results);\n            },\n            reject\n          );\n        });\n      },\n    }),\n    race: buildOperation({\n      name: \"race\",\n      arity: 1,\n      sync: function(args) {\n        const items = Array.from(args[0]);\n        if (items.length === 0) {\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n        }\n\n        return evaluateSync(items[0]);\n      },\n      async: function(args, resolve, reject) {\n        const items = Array.from(args[0]);\n        if (items.length === 0) {\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n        }\n\n        for (const item of items) {\n          evaluateAsync(item, resolve, reject);\n        }\n      },\n    }),\n  }\n);\n\n/**\n * Given a generator function, return the standard API object that executes\n * the generator and calls the callbacks.\n */\nfunction makeFunctionAPI(genFn) {\n  const fns = {\n    sync: function(...args) {\n      return evaluateSync(genFn.apply(this, args));\n    },\n    async: function(...args) {\n      return new Promise((resolve, reject) => {\n        evaluateAsync(genFn.apply(this, args), resolve, reject);\n      });\n    },\n    errback: function(...args) {\n      const cb = args.pop();\n      if (typeof cb !== \"function\") {\n        throw makeError(\n          \"Asynchronous function called without callback\",\n          GENSYNC_ERRBACK_NO_CALLBACK\n        );\n      }\n\n      let gen;\n      try {\n        gen = genFn.apply(this, args);\n      } catch (err) {\n        cb(err);\n        return;\n      }\n\n      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));\n    },\n  };\n  return fns;\n}\n\nfunction assertTypeof(type, name, value, allowUndefined) {\n  if (\n    typeof value === type ||\n    (allowUndefined && typeof value === \"undefined\")\n  ) {\n    return;\n  }\n\n  let msg;\n  if (allowUndefined) {\n    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;\n  } else {\n    msg = `Expected opts.${name} to be a ${type}.`;\n  }\n\n  throw makeError(msg, GENSYNC_OPTIONS_ERROR);\n}\nfunction makeError(msg, code) {\n  return Object.assign(new Error(msg), { code });\n}\n\n/**\n * Given an options object, return a new generator that dispatches the\n * correct handler based on sync or async execution.\n */\nfunction newGenerator({ name, arity, sync, async, errback }) {\n  assertTypeof(\"string\", \"name\", name, true /* allowUndefined */);\n  assertTypeof(\"number\", \"arity\", arity, true /* allowUndefined */);\n  assertTypeof(\"function\", \"sync\", sync);\n  assertTypeof(\"function\", \"async\", async, true /* allowUndefined */);\n  assertTypeof(\"function\", \"errback\", errback, true /* allowUndefined */);\n  if (async && errback) {\n    throw makeError(\n      \"Expected one of either opts.async or opts.errback, but got _both_.\",\n      GENSYNC_OPTIONS_ERROR\n    );\n  }\n\n  if (typeof name !== \"string\") {\n    let fnName;\n    if (errback && errback.name && errback.name !== \"errback\") {\n      fnName = errback.name;\n    }\n    if (async && async.name && async.name !== \"async\") {\n      fnName = async.name.replace(/Async$/, \"\");\n    }\n    if (sync && sync.name && sync.name !== \"sync\") {\n      fnName = sync.name.replace(/Sync$/, \"\");\n    }\n\n    if (typeof fnName === \"string\") {\n      name = fnName;\n    }\n  }\n\n  if (typeof arity !== \"number\") {\n    arity = sync.length;\n  }\n\n  return buildOperation({\n    name,\n    arity,\n    sync: function(args) {\n      return sync.apply(this, args);\n    },\n    async: function(args, resolve, reject) {\n      if (async) {\n        async.apply(this, args).then(resolve, reject);\n      } else if (errback) {\n        errback.call(this, ...args, (err, value) => {\n          if (err == null) resolve(value);\n          else reject(err);\n        });\n      } else {\n        resolve(sync.apply(this, args));\n      }\n    },\n  });\n}\n\nfunction wrapGenerator(genFn) {\n  return setFunctionMetadata(genFn.name, genFn.length, function(...args) {\n    return genFn.apply(this, args);\n  });\n}\n\nfunction buildOperation({ name, arity, sync, async }) {\n  return setFunctionMetadata(name, arity, function*(...args) {\n    const resume = yield GENSYNC_START;\n    if (!resume) {\n      // Break the tail call to avoid a bug in V8 v6.X with --harmony enabled.\n      const res = sync.call(this, args);\n      return res;\n    }\n\n    let result;\n    try {\n      async.call(\n        this,\n        args,\n        value => {\n          if (result) return;\n\n          result = { value };\n          resume();\n        },\n        err => {\n          if (result) return;\n\n          result = { err };\n          resume();\n        }\n      );\n    } catch (err) {\n      result = { err };\n      resume();\n    }\n\n    // Suspend until the callbacks run. Will resume synchronously if the\n    // callback was already called.\n    yield GENSYNC_SUSPEND;\n\n    if (result.hasOwnProperty(\"err\")) {\n      throw result.err;\n    }\n\n    return result.value;\n  });\n}\n\nfunction evaluateSync(gen) {\n  let value;\n  while (!({ value } = gen.next()).done) {\n    assertStart(value, gen);\n  }\n  return value;\n}\n\nfunction evaluateAsync(gen, resolve, reject) {\n  (function step() {\n    try {\n      let value;\n      while (!({ value } = gen.next()).done) {\n        assertStart(value, gen);\n\n        // If this throws, it is considered to have broken the contract\n        // established for async handlers. If these handlers are called\n        // synchronously, it is also considered bad behavior.\n        let sync = true;\n        let didSyncResume = false;\n        const out = gen.next(() => {\n          if (sync) {\n            didSyncResume = true;\n          } else {\n            step();\n          }\n        });\n        sync = false;\n\n        assertSuspend(out, gen);\n\n        if (!didSyncResume) {\n          // Callback wasn't called synchronously, so break out of the loop\n          // and let it call 'step' later.\n          return;\n        }\n      }\n\n      return resolve(value);\n    } catch (err) {\n      return reject(err);\n    }\n  })();\n}\n\nfunction assertStart(value, gen) {\n  if (value === GENSYNC_START) return;\n\n  throwError(\n    gen,\n    makeError(\n      `Got unexpected yielded value in gensync generator: ${JSON.stringify(\n        value\n      )}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,\n      GENSYNC_EXPECTED_START\n    )\n  );\n}\nfunction assertSuspend({ value, done }, gen) {\n  if (!done && value === GENSYNC_SUSPEND) return;\n\n  throwError(\n    gen,\n    makeError(\n      done\n        ? \"Unexpected generator completion. If you get this, it is probably a gensync bug.\"\n        : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(\n            value\n          )}. If you get this, it is probably a gensync bug.`,\n      GENSYNC_EXPECTED_SUSPEND\n    )\n  );\n}\n\nfunction throwError(gen, err) {\n  // Call `.throw` so that users can step in a debugger to easily see which\n  // 'yield' passed an unexpected value. If the `.throw` call didn't throw\n  // back to the generator, we explicitly do it to stop the error\n  // from being swallowed by user code try/catches.\n  if (gen.throw) gen.throw(err);\n  throw err;\n}\n\nfunction isIterable(value) {\n  return (\n    !!value &&\n    (typeof value === \"object\" || typeof value === \"function\") &&\n    !value[Symbol.iterator]\n  );\n}\n\nfunction setFunctionMetadata(name, arity, fn) {\n  if (typeof name === \"string\") {\n    // This should always work on the supported Node versions, but for the\n    // sake of users that are compiling to older versions, we check for\n    // configurability so we don't throw.\n    const nameDesc = Object.getOwnPropertyDescriptor(fn, \"name\");\n    if (!nameDesc || nameDesc.configurable) {\n      Object.defineProperty(\n        fn,\n        \"name\",\n        Object.assign(nameDesc || {}, {\n          configurable: true,\n          value: name,\n        })\n      );\n    }\n  }\n\n  if (typeof arity === \"number\") {\n    const lengthDesc = Object.getOwnPropertyDescriptor(fn, \"length\");\n    if (!lengthDesc || lengthDesc.configurable) {\n      Object.defineProperty(\n        fn,\n        \"length\",\n        Object.assign(lengthDesc || {}, {\n          configurable: true,\n          value: arity,\n        })\n      );\n    }\n  }\n\n  return fn;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forwardAsync = forwardAsync;\nexports.isAsync = void 0;\nexports.isThenable = isThenable;\nexports.maybeAsync = maybeAsync;\nexports.waitFor = exports.onFirstPause = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nconst runGenerator = _gensync()(function* (item) {\n  return yield* item;\n});\n\nconst isAsync = _gensync()({\n  sync: () => false,\n  errback: cb => cb(null, true)\n});\n\nexports.isAsync = isAsync;\n\nfunction maybeAsync(fn, message) {\n  return _gensync()({\n    sync(...args) {\n      const result = fn.apply(this, args);\n      if (isThenable(result)) throw new Error(message);\n      return result;\n    },\n\n    async(...args) {\n      return Promise.resolve(fn.apply(this, args));\n    }\n\n  });\n}\n\nconst withKind = _gensync()({\n  sync: cb => cb(\"sync\"),\n  async: function () {\n    var _ref = _asyncToGenerator(function* (cb) {\n      return cb(\"async\");\n    });\n\n    return function async(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()\n});\n\nfunction forwardAsync(action, cb) {\n  const g = _gensync()(action);\n\n  return withKind(kind => {\n    const adapted = g[kind];\n    return cb(adapted);\n  });\n}\n\nconst onFirstPause = _gensync()({\n  name: \"onFirstPause\",\n  arity: 2,\n  sync: function (item) {\n    return runGenerator.sync(item);\n  },\n  errback: function (item, firstPause, cb) {\n    let completed = false;\n    runGenerator.errback(item, (err, value) => {\n      completed = true;\n      cb(err, value);\n    });\n\n    if (!completed) {\n      firstPause();\n    }\n  }\n});\n\nexports.onFirstPause = onFirstPause;\n\nconst waitFor = _gensync()({\n  sync: x => x,\n  async: function () {\n    var _ref2 = _asyncToGenerator(function* (x) {\n      return x;\n    });\n\n    return function async(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }()\n});\n\nexports.waitFor = waitFor;\n\nfunction isThenable(val) {\n  return !!val && (typeof val === \"object\" || typeof val === \"function\") && !!val.then && typeof val.then === \"function\";\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIterableIterator = isIterableIterator;\nexports.mergeOptions = mergeOptions;\n\nfunction mergeOptions(target, source) {\n  for (const k of Object.keys(source)) {\n    if ((k === \"parserOpts\" || k === \"generatorOpts\" || k === \"assumptions\") && source[k]) {\n      const parserOpts = source[k];\n      const targetObj = target[k] || (target[k] = {});\n      mergeDefaultFields(targetObj, parserOpts);\n    } else {\n      const val = source[k];\n      if (val !== undefined) target[k] = val;\n    }\n  }\n}\n\nfunction mergeDefaultFields(target, source) {\n  for (const k of Object.keys(source)) {\n    const val = source[k];\n    if (val !== undefined) target[k] = val;\n  }\n}\n\nfunction isIterableIterator(value) {\n  return !!value && typeof value.next === \"function\" && typeof value[Symbol.iterator] === \"function\";\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.finalize = finalize;\nexports.flattenToSet = flattenToSet;\n\nfunction finalize(deepArr) {\n  return Object.freeze(deepArr);\n}\n\nfunction flattenToSet(arr) {\n  const result = new Set();\n  const stack = [arr];\n\n  while (stack.length > 0) {\n    for (const el of stack.pop()) {\n      if (Array.isArray(el)) stack.push(el);else result.add(el);\n    }\n  }\n\n  return result;\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _deepArray = require(\"./helpers/deep-array\");\n\nclass Plugin {\n  constructor(plugin, options, key, externalDependencies = (0, _deepArray.finalize)([])) {\n    this.key = void 0;\n    this.manipulateOptions = void 0;\n    this.post = void 0;\n    this.pre = void 0;\n    this.visitor = void 0;\n    this.parserOverride = void 0;\n    this.generatorOverride = void 0;\n    this.options = void 0;\n    this.externalDependencies = void 0;\n    this.key = plugin.name || key;\n    this.manipulateOptions = plugin.manipulateOptions;\n    this.post = plugin.post;\n    this.pre = plugin.pre;\n    this.visitor = plugin.visitor || {};\n    this.parserOverride = plugin.parserOverride;\n    this.generatorOverride = plugin.generatorOverride;\n    this.options = options;\n    this.externalDependencies = externalDependencies;\n  }\n\n}\n\nexports.default = Plugin;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertSimpleType = assertSimpleType;\nexports.makeStrongCache = makeStrongCache;\nexports.makeStrongCacheSync = makeStrongCacheSync;\nexports.makeWeakCache = makeWeakCache;\nexports.makeWeakCacheSync = makeWeakCacheSync;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _async = require(\"../gensync-utils/async\");\n\nvar _util = require(\"./util\");\n\nconst synchronize = gen => {\n  return _gensync()(gen).sync;\n};\n\nfunction* genTrue() {\n  return true;\n}\n\nfunction makeWeakCache(handler) {\n  return makeCachedFunction(WeakMap, handler);\n}\n\nfunction makeWeakCacheSync(handler) {\n  return synchronize(makeWeakCache(handler));\n}\n\nfunction makeStrongCache(handler) {\n  return makeCachedFunction(Map, handler);\n}\n\nfunction makeStrongCacheSync(handler) {\n  return synchronize(makeStrongCache(handler));\n}\n\nfunction makeCachedFunction(CallCache, handler) {\n  const callCacheSync = new CallCache();\n  const callCacheAsync = new CallCache();\n  const futureCache = new CallCache();\n  return function* cachedFunction(arg, data) {\n    const asyncContext = yield* (0, _async.isAsync)();\n    const callCache = asyncContext ? callCacheAsync : callCacheSync;\n    const cached = yield* getCachedValueOrWait(asyncContext, callCache, futureCache, arg, data);\n    if (cached.valid) return cached.value;\n    const cache = new CacheConfigurator(data);\n    const handlerResult = handler(arg, cache);\n    let finishLock;\n    let value;\n\n    if ((0, _util.isIterableIterator)(handlerResult)) {\n      value = yield* (0, _async.onFirstPause)(handlerResult, () => {\n        finishLock = setupAsyncLocks(cache, futureCache, arg);\n      });\n    } else {\n      value = handlerResult;\n    }\n\n    updateFunctionCache(callCache, cache, arg, value);\n\n    if (finishLock) {\n      futureCache.delete(arg);\n      finishLock.release(value);\n    }\n\n    return value;\n  };\n}\n\nfunction* getCachedValue(cache, arg, data) {\n  const cachedValue = cache.get(arg);\n\n  if (cachedValue) {\n    for (const {\n      value,\n      valid\n    } of cachedValue) {\n      if (yield* valid(data)) return {\n        valid: true,\n        value\n      };\n    }\n  }\n\n  return {\n    valid: false,\n    value: null\n  };\n}\n\nfunction* getCachedValueOrWait(asyncContext, callCache, futureCache, arg, data) {\n  const cached = yield* getCachedValue(callCache, arg, data);\n\n  if (cached.valid) {\n    return cached;\n  }\n\n  if (asyncContext) {\n    const cached = yield* getCachedValue(futureCache, arg, data);\n\n    if (cached.valid) {\n      const value = yield* (0, _async.waitFor)(cached.value.promise);\n      return {\n        valid: true,\n        value\n      };\n    }\n  }\n\n  return {\n    valid: false,\n    value: null\n  };\n}\n\nfunction setupAsyncLocks(config, futureCache, arg) {\n  const finishLock = new Lock();\n  updateFunctionCache(futureCache, config, arg, finishLock);\n  return finishLock;\n}\n\nfunction updateFunctionCache(cache, config, arg, value) {\n  if (!config.configured()) config.forever();\n  let cachedValue = cache.get(arg);\n  config.deactivate();\n\n  switch (config.mode()) {\n    case \"forever\":\n      cachedValue = [{\n        value,\n        valid: genTrue\n      }];\n      cache.set(arg, cachedValue);\n      break;\n\n    case \"invalidate\":\n      cachedValue = [{\n        value,\n        valid: config.validator()\n      }];\n      cache.set(arg, cachedValue);\n      break;\n\n    case \"valid\":\n      if (cachedValue) {\n        cachedValue.push({\n          value,\n          valid: config.validator()\n        });\n      } else {\n        cachedValue = [{\n          value,\n          valid: config.validator()\n        }];\n        cache.set(arg, cachedValue);\n      }\n\n  }\n}\n\nclass CacheConfigurator {\n  constructor(data) {\n    this._active = true;\n    this._never = false;\n    this._forever = false;\n    this._invalidate = false;\n    this._configured = false;\n    this._pairs = [];\n    this._data = void 0;\n    this._data = data;\n  }\n\n  simple() {\n    return makeSimpleConfigurator(this);\n  }\n\n  mode() {\n    if (this._never) return \"never\";\n    if (this._forever) return \"forever\";\n    if (this._invalidate) return \"invalidate\";\n    return \"valid\";\n  }\n\n  forever() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n\n    if (this._never) {\n      throw new Error(\"Caching has already been configured with .never()\");\n    }\n\n    this._forever = true;\n    this._configured = true;\n  }\n\n  never() {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n\n    if (this._forever) {\n      throw new Error(\"Caching has already been configured with .forever()\");\n    }\n\n    this._never = true;\n    this._configured = true;\n  }\n\n  using(handler) {\n    if (!this._active) {\n      throw new Error(\"Cannot change caching after evaluation has completed.\");\n    }\n\n    if (this._never || this._forever) {\n      throw new Error(\"Caching has already been configured with .never or .forever()\");\n    }\n\n    this._configured = true;\n    const key = handler(this._data);\n    const fn = (0, _async.maybeAsync)(handler, `You appear to be using an async cache handler, but Babel has been called synchronously`);\n\n    if ((0, _async.isThenable)(key)) {\n      return key.then(key => {\n        this._pairs.push([key, fn]);\n\n        return key;\n      });\n    }\n\n    this._pairs.push([key, fn]);\n\n    return key;\n  }\n\n  invalidate(handler) {\n    this._invalidate = true;\n    return this.using(handler);\n  }\n\n  validator() {\n    const pairs = this._pairs;\n    return function* (data) {\n      for (const [key, fn] of pairs) {\n        if (key !== (yield* fn(data))) return false;\n      }\n\n      return true;\n    };\n  }\n\n  deactivate() {\n    this._active = false;\n  }\n\n  configured() {\n    return this._configured;\n  }\n\n}\n\nfunction makeSimpleConfigurator(cache) {\n  function cacheFn(val) {\n    if (typeof val === \"boolean\") {\n      if (val) cache.forever();else cache.never();\n      return;\n    }\n\n    return cache.using(() => assertSimpleType(val()));\n  }\n\n  cacheFn.forever = () => cache.forever();\n\n  cacheFn.never = () => cache.never();\n\n  cacheFn.using = cb => cache.using(() => assertSimpleType(cb()));\n\n  cacheFn.invalidate = cb => cache.invalidate(() => assertSimpleType(cb()));\n\n  return cacheFn;\n}\n\nfunction assertSimpleType(value) {\n  if ((0, _async.isThenable)(value)) {\n    throw new Error(`You appear to be using an async cache handler, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously handle your caching logic.`);\n  }\n\n  if (value != null && typeof value !== \"string\" && typeof value !== \"boolean\" && typeof value !== \"number\") {\n    throw new Error(\"Cache keys must be either string, boolean, number, null, or undefined.\");\n  }\n\n  return value;\n}\n\nclass Lock {\n  constructor() {\n    this.released = false;\n    this.promise = void 0;\n    this._resolve = void 0;\n    this.promise = new Promise(resolve => {\n      this._resolve = resolve;\n    });\n  }\n\n  release(value) {\n    this.released = true;\n\n    this._resolve(value);\n  }\n\n}\n\n0 && 0;", "module.exports={A:\"ie\",B:\"edge\",C:\"firefox\",D:\"chrome\",E:\"safari\",F:\"opera\",G:\"ios_saf\",H:\"op_mini\",I:\"android\",J:\"bb\",K:\"op_mob\",L:\"and_chr\",M:\"and_ff\",N:\"ie_mob\",O:\"and_uc\",P:\"samsung\",Q:\"and_qq\",R:\"baidu\",S:\"kaios\"};\n", "module.exports.browsers = require('../../data/browsers')\n", "module.exports={\"0\":\"31\",\"1\":\"32\",\"2\":\"33\",\"3\":\"34\",\"4\":\"35\",\"5\":\"36\",\"6\":\"37\",\"7\":\"38\",\"8\":\"39\",\"9\":\"40\",A:\"10\",B:\"11\",C:\"12\",D:\"7\",E:\"8\",F:\"9\",G:\"15\",H:\"103\",I:\"4\",J:\"6\",K:\"13\",L:\"14\",M:\"16\",N:\"17\",O:\"18\",P:\"79\",Q:\"80\",R:\"81\",S:\"83\",T:\"84\",U:\"85\",V:\"86\",W:\"87\",X:\"88\",Y:\"89\",Z:\"90\",a:\"101\",b:\"64\",c:\"91\",d:\"92\",e:\"93\",f:\"94\",g:\"95\",h:\"96\",i:\"97\",j:\"98\",k:\"99\",l:\"100\",m:\"102\",n:\"5\",o:\"19\",p:\"20\",q:\"21\",r:\"22\",s:\"23\",t:\"24\",u:\"25\",v:\"26\",w:\"27\",x:\"28\",y:\"29\",z:\"30\",AB:\"41\",BB:\"42\",CB:\"43\",DB:\"44\",EB:\"45\",FB:\"46\",GB:\"47\",HB:\"48\",IB:\"49\",JB:\"50\",KB:\"51\",LB:\"52\",MB:\"53\",NB:\"54\",OB:\"55\",PB:\"56\",QB:\"57\",RB:\"58\",SB:\"60\",TB:\"62\",UB:\"63\",VB:\"65\",WB:\"66\",XB:\"67\",YB:\"68\",ZB:\"69\",aB:\"70\",bB:\"71\",cB:\"72\",dB:\"73\",eB:\"74\",fB:\"75\",gB:\"76\",hB:\"77\",iB:\"78\",jB:\"11.1\",kB:\"12.1\",lB:\"16.0\",mB:\"3\",nB:\"59\",oB:\"61\",pB:\"82\",qB:\"104\",rB:\"105\",sB:\"3.2\",tB:\"10.1\",uB:\"15.2-15.3\",vB:\"15.4\",wB:\"15.5\",xB:\"11.5\",yB:\"4.2-4.3\",zB:\"5.5\",\"0B\":\"2\",\"1B\":\"3.5\",\"2B\":\"3.6\",\"3B\":\"106\",\"4B\":\"3.1\",\"5B\":\"5.1\",\"6B\":\"6.1\",\"7B\":\"7.1\",\"8B\":\"9.1\",\"9B\":\"13.1\",AC:\"14.1\",BC:\"15.1\",CC:\"15.6\",DC:\"TP\",EC:\"9.5-9.6\",FC:\"10.0-10.1\",GC:\"10.5\",HC:\"10.6\",IC:\"11.6\",JC:\"4.0-4.1\",KC:\"5.0-5.1\",LC:\"6.0-6.1\",MC:\"7.0-7.1\",NC:\"8.1-8.4\",OC:\"9.0-9.2\",PC:\"9.3\",QC:\"10.0-10.2\",RC:\"10.3\",SC:\"11.0-11.2\",TC:\"11.3-11.4\",UC:\"12.0-12.1\",VC:\"12.2-12.5\",WC:\"13.0-13.1\",XC:\"13.2\",YC:\"13.3\",ZC:\"13.4-13.7\",aC:\"14.0-14.4\",bC:\"14.5-14.8\",cC:\"15.0-15.1\",dC:\"all\",eC:\"2.1\",fC:\"2.2\",gC:\"2.3\",hC:\"4.1\",iC:\"4.4\",jC:\"4.4.3-4.4.4\",kC:\"12.12\",lC:\"5.0-5.4\",mC:\"6.2-6.4\",nC:\"7.2-7.4\",oC:\"8.2\",pC:\"9.2\",qC:\"11.1-11.2\",rC:\"12.0\",sC:\"13.0\",tC:\"14.0\",uC:\"15.0\",vC:\"17.0\",wC:\"10.4\",xC:\"7.12\",yC:\"2.5\"};\n", "module.exports.browserVersions = require('../../data/browserVersions')\n", "module.exports={A:{A:{J:0.0131217,D:0.00621152,E:0.0145876,F:0.0364691,A:0.00556471,B:0.488685,zB:0.009298},B:\"ms\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"zB\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"\",\"\",\"\"],E:\"IE\",F:{zB:962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.003801,K:0.004267,L:0.004268,G:0.003801,M:0.003801,N:0.007602,O:0.022806,P:0,Q:0.004298,R:0.00944,S:0.004043,T:0.003801,U:0.007602,V:0.003801,W:0.003801,X:0.004318,Y:0.007602,Z:0.004118,c:0.003939,d:0.007602,e:0.004118,f:0.003939,g:0.003801,h:0.007602,i:0.007602,j:0.011403,k:0.019005,l:0.034209,a:0.444717,m:2.86595,H:0.589155},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"a\",\"m\",\"H\",\"\",\"\",\"\"],E:\"Edge\",F:{C:1438128000,K:1447286400,L:1470096000,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,c:1622073600,d:1626912000,e:1630627200,f:1632441600,g:1634774400,h:1637539200,i:1641427200,j:1643932800,k:1646265600,l:1649635200,a:1651190400,m:1653955200,H:1655942400},D:{C:\"ms\",K:\"ms\",L:\"ms\",G:\"ms\",M:\"ms\",N:\"ms\",O:\"ms\"}},C:{A:{\"0\":0.008928,\"1\":0.004471,\"2\":0.009284,\"3\":0.004707,\"4\":0.009076,\"5\":0.007602,\"6\":0.004783,\"7\":0.004271,\"8\":0.004783,\"9\":0.00487,\"0B\":0.004118,mB:0.004271,I:0.019005,n:0.004879,J:0.020136,D:0.005725,E:0.004525,F:0.00533,A:0.004283,B:0.011403,C:0.004471,K:0.004486,L:0.00453,G:0.008322,M:0.004417,N:0.004425,O:0.004161,o:0.004443,p:0.004283,q:0.008322,r:0.013698,s:0.004161,t:0.008786,u:0.004118,v:0.004317,w:0.004393,x:0.004418,y:0.008834,z:0.008322,AB:0.005029,BB:0.0047,CB:0.019005,DB:0.007602,EB:0.003867,FB:0.004525,GB:0.004293,HB:0.003801,IB:0.004538,JB:0.008282,KB:0.011601,LB:0.060816,MB:0.011601,NB:0.007602,OB:0.003801,PB:0.007602,QB:0.011601,RB:0.003939,nB:0.003801,SB:0.003801,oB:0.004356,TB:0.004425,UB:0.008322,b:0.00415,VB:0.004267,WB:0.003801,XB:0.004267,YB:0.007602,ZB:0.00415,aB:0.004293,bB:0.004425,cB:0.003801,dB:0.00415,eB:0.00415,fB:0.004318,gB:0.004356,hB:0.003801,iB:0.041811,P:0.003801,Q:0.003801,R:0.011403,pB:0.003801,S:0.003801,T:0.007602,U:0.004268,V:0.003801,W:0.011403,X:0.011403,Y:0.007602,Z:0.007602,c:0.095025,d:0.003801,e:0.007602,f:0.022806,g:0.007602,h:0.007602,i:0.011403,j:0.015204,k:0.045612,l:0.288876,a:2.00313,m:0.083622,H:0,qB:0,rB:0,\"1B\":0.008786,\"2B\":0.00487},B:\"moz\",C:[\"0B\",\"mB\",\"1B\",\"2B\",\"I\",\"n\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"nB\",\"SB\",\"oB\",\"TB\",\"UB\",\"b\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"P\",\"Q\",\"R\",\"pB\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"a\",\"m\",\"H\",\"qB\",\"rB\",\"\"],E:\"Firefox\",F:{\"0\":1405987200,\"1\":1409616000,\"2\":1413244800,\"3\":1417392000,\"4\":1421107200,\"5\":1424736000,\"6\":1428278400,\"7\":1431475200,\"8\":1435881600,\"9\":1439251200,\"0B\":1161648000,mB:1213660800,\"1B\":1246320000,\"2B\":1264032000,I:1300752000,n:1308614400,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112000,N:1349740800,O:1353628800,o:1357603200,p:1361232000,q:1364860800,r:1368489600,s:1372118400,t:1375747200,u:1379376000,v:1386633600,w:1391472000,x:1395100800,y:1398729600,z:1402358400,AB:1442880000,BB:1446508800,CB:1450137600,DB:1453852800,EB:1457395200,FB:1461628800,GB:1465257600,HB:1470096000,IB:1474329600,JB:1479168000,KB:1485216000,LB:1488844800,MB:1492560000,NB:1497312000,OB:1502150400,PB:1506556800,QB:1510617600,RB:1516665600,nB:1520985600,SB:1525824000,oB:1529971200,TB:1536105600,UB:1540252800,b:1544486400,VB:1548720000,WB:1552953600,XB:1558396800,YB:1562630400,ZB:1567468800,aB:1571788800,bB:1575331200,cB:1578355200,dB:1581379200,eB:1583798400,fB:1586304000,gB:1588636800,hB:1591056000,iB:1593475200,P:1595894400,Q:1598313600,R:1600732800,pB:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,c:1628553600,d:1630972800,e:1633392000,f:1635811200,g:1638835200,h:1641859200,i:1644364800,j:1646697600,k:1649116800,l:1651536000,a:1653955200,m:1656374400,H:1658793600,qB:null,rB:null}},D:{A:{\"0\":0.008596,\"1\":0.004566,\"2\":0.004118,\"3\":0.007602,\"4\":0.003801,\"5\":0.004335,\"6\":0.004464,\"7\":0.019005,\"8\":0.003867,\"9\":0.011403,I:0.004706,n:0.004879,J:0.004879,D:0.005591,E:0.005591,F:0.005591,A:0.004534,B:0.004464,C:0.010424,K:0.0083,L:0.004706,G:0.015087,M:0.004393,N:0.004393,O:0.008652,o:0.008322,p:0.004393,q:0.004317,r:0.007602,s:0.008786,t:0.003939,u:0.004461,v:0.004141,w:0.004326,x:0.0047,y:0.004538,z:0.008322,AB:0.007734,BB:0.007734,CB:0.007602,DB:0.003867,EB:0.003867,FB:0.003867,GB:0.011403,HB:0.019005,IB:0.053214,JB:0.003867,KB:0.003801,LB:0.003801,MB:0.011403,NB:0.003867,OB:0.003801,PB:0.026607,QB:0.003801,RB:0.007602,nB:0.003801,SB:0.011403,oB:0.011403,TB:0.007602,UB:0.011403,b:0.007602,VB:0.011403,WB:0.026607,XB:0.011403,YB:0.007602,ZB:0.049413,aB:0.022806,bB:0.011403,cB:0.026607,dB:0.007602,eB:0.022806,fB:0.060816,gB:0.060816,hB:0.011403,iB:0.034209,P:0.193851,Q:0.03801,R:0.034209,S:0.110229,T:0.049413,U:0.07602,V:0.072219,W:0.448518,X:0.019005,Y:0.060816,Z:0.026607,c:0.072219,d:0.053214,e:0.045612,f:0.049413,g:0.034209,h:0.106428,i:0.098826,j:0.129234,k:0.163443,l:0.387702,a:1.47099,m:17.8077,H:1.61923,qB:0.015204,rB:0.011403,\"3B\":0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"I\",\"n\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"nB\",\"SB\",\"oB\",\"TB\",\"UB\",\"b\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"a\",\"m\",\"H\",\"qB\",\"rB\",\"3B\"],E:\"Chrome\",F:{\"0\":1384214400,\"1\":1389657600,\"2\":1392940800,\"3\":1397001600,\"4\":1400544000,\"5\":1405468800,\"6\":1409011200,\"7\":1412640000,\"8\":1416268800,\"9\":1421798400,I:1264377600,n:1274745600,J:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,o:1332892800,p:1337040000,q:1340668800,r:1343692800,s:1348531200,t:1352246400,u:1357862400,v:1361404800,w:1364428800,x:1369094400,y:1374105600,z:1376956800,AB:1425513600,BB:1429401600,CB:1432080000,DB:1437523200,EB:1441152000,FB:1444780800,GB:1449014400,HB:1453248000,IB:1456963200,JB:1460592000,KB:1464134400,LB:1469059200,MB:1472601600,NB:1476230400,OB:1480550400,PB:1485302400,QB:1489017600,RB:1492560000,nB:1496707200,SB:1500940800,oB:1504569600,TB:1508198400,UB:1512518400,b:1516752000,VB:1520294400,WB:1523923200,XB:1527552000,YB:1532390400,ZB:1536019200,aB:1539648000,bB:1543968000,cB:1548720000,dB:1552348800,eB:1555977600,fB:1559606400,gB:1564444800,hB:1568073600,iB:1571702400,P:1575936000,Q:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,c:1621987200,d:1626739200,e:1630368000,f:1632268800,g:1634601600,h:1637020800,i:1641340800,j:1643673600,k:1646092800,l:1648512000,a:1650931200,m:1653350400,H:1655769600,qB:null,rB:null,\"3B\":null}},E:{A:{I:0,n:0.008322,J:0.004656,D:0.004465,E:0.004356,F:0.004891,A:0.004425,B:0.004318,C:0.003801,K:0.034209,L:0.140637,G:0.045612,\"4B\":0,sB:0.008692,\"5B\":0.007602,\"6B\":0.00456,\"7B\":0.004283,\"8B\":0.015204,tB:0.007602,jB:0.022806,kB:0.045612,\"9B\":0.254667,AC:0.41811,BC:0.083622,uB:0.079821,vB:0.528339,wB:1.47859,CC:0,lB:0.003801,DC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"4B\",\"sB\",\"I\",\"n\",\"5B\",\"J\",\"6B\",\"D\",\"7B\",\"E\",\"F\",\"8B\",\"A\",\"tB\",\"B\",\"jB\",\"C\",\"kB\",\"K\",\"9B\",\"L\",\"AC\",\"G\",\"BC\",\"uB\",\"vB\",\"wB\",\"CC\",\"lB\",\"DC\",\"\"],E:\"Safari\",F:{\"4B\":1205798400,sB:1226534400,I:1244419200,n:1275868800,\"5B\":1311120000,J:1343174400,\"6B\":1382400000,D:1382400000,\"7B\":1410998400,E:1413417600,F:1443657600,\"8B\":1458518400,A:1474329600,tB:1490572800,B:1505779200,jB:1522281600,C:1537142400,kB:1553472000,K:1568851200,\"9B\":1585008000,L:1600214400,AC:1619395200,G:1632096000,BC:1635292800,uB:1639353600,vB:1647216000,wB:1652745600,CC:1658275200,lB:null,DC:null}},F:{A:{\"0\":0.003801,\"1\":0.005152,\"2\":0.005014,\"3\":0.009758,\"4\":0.004879,\"5\":0.003801,\"6\":0.004283,\"7\":0.004367,\"8\":0.004534,\"9\":0.007602,F:0.0082,B:0.016581,C:0.004317,G:0.00685,M:0.00685,N:0.00685,O:0.005014,o:0.006015,p:0.004879,q:0.006597,r:0.006597,s:0.013434,t:0.006702,u:0.006015,v:0.005595,w:0.004393,x:0.007602,y:0.004879,z:0.004879,AB:0.004227,BB:0.004418,CB:0.004161,DB:0.004227,EB:0.004725,FB:0.011403,GB:0.008942,HB:0.004707,IB:0.004827,JB:0.004707,KB:0.004707,LB:0.004326,MB:0.008922,NB:0.014349,OB:0.004425,PB:0.00472,QB:0.004425,RB:0.004425,SB:0.00472,TB:0.004532,UB:0.004566,b:0.02283,VB:0.00867,WB:0.004656,XB:0.004642,YB:0.003867,ZB:0.00944,aB:0.004293,bB:0.003867,cB:0.004298,dB:0.096692,eB:0.004201,fB:0.004141,gB:0.004257,hB:0.003939,iB:0.008236,P:0.003939,Q:0.003939,R:0.008514,pB:0.003939,S:0.003939,T:0.003801,U:0.034209,V:0.300279,W:0.592956,X:0,Y:0,Z:0,EC:0.00685,FC:0,GC:0.008392,HC:0.004706,jB:0.006229,xB:0.004879,IC:0.008786,kB:0.00472},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"F\",\"EC\",\"FC\",\"GC\",\"HC\",\"B\",\"jB\",\"xB\",\"IC\",\"C\",\"kB\",\"G\",\"M\",\"N\",\"O\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"b\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"P\",\"Q\",\"R\",\"pB\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"\",\"\"],E:\"Opera\",F:{\"0\":1438646400,\"1\":1442448000,\"2\":1445904000,\"3\":1449100800,\"4\":1454371200,\"5\":1457308800,\"6\":1462320000,\"7\":1465344000,\"8\":1470096000,\"9\":1474329600,F:1150761600,EC:1223424000,FC:1251763200,GC:1267488000,HC:1277942400,B:1292457600,jB:1302566400,xB:1309219200,IC:1323129600,C:1323129600,kB:1352073600,G:1372723200,M:1377561600,N:1381104000,O:1386288000,o:1390867200,p:1393891200,q:1399334400,r:1401753600,s:1405987200,t:1409616000,u:1413331200,v:1417132800,w:1422316800,x:1425945600,y:1430179200,z:1433808000,AB:1477267200,BB:1481587200,CB:1486425600,DB:1490054400,EB:1494374400,FB:1498003200,GB:1502236800,HB:1506470400,IB:1510099200,JB:1515024000,KB:1517961600,LB:1521676800,MB:1525910400,NB:1530144000,OB:1534982400,PB:1537833600,QB:1543363200,RB:1548201600,SB:1554768000,TB:1561593600,UB:1566259200,b:1570406400,VB:1573689600,WB:1578441600,XB:1583971200,YB:1587513600,ZB:1592956800,aB:1595894400,bB:1600128000,cB:1603238400,dB:1613520000,eB:1612224000,fB:1616544000,gB:1619568000,hB:1623715200,iB:1627948800,P:1631577600,Q:1633392000,R:1635984000,pB:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:null},D:{F:\"o\",B:\"o\",C:\"o\",EC:\"o\",FC:\"o\",GC:\"o\",HC:\"o\",jB:\"o\",xB:\"o\",IC:\"o\",kB:\"o\"}},G:{A:{E:0,sB:0.00149648,JC:0,yB:0.00149648,KC:0.00448945,LC:0.00448945,MC:0.0164613,NC:0.00748241,OC:0.0164613,PC:0.0748241,QC:0.00897889,RC:0.0823065,SC:0.040405,TC:0.0299296,UC:0.0299296,VC:0.559684,WC:0.0254402,XC:0.0119719,YC:0.0553698,ZC:0.173592,aC:0.528258,bC:1.278,cC:0.399561,uB:0.749737,vB:2.16691,wB:8.63769,lB:0.0284332},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"sB\",\"JC\",\"yB\",\"KC\",\"LC\",\"MC\",\"E\",\"NC\",\"OC\",\"PC\",\"QC\",\"RC\",\"SC\",\"TC\",\"UC\",\"VC\",\"WC\",\"XC\",\"YC\",\"ZC\",\"aC\",\"bC\",\"cC\",\"uB\",\"vB\",\"wB\",\"lB\",\"\",\"\"],E:\"Safari on iOS\",F:{sB:1270252800,JC:1283904000,yB:1299628800,KC:1331078400,LC:1359331200,MC:1394409600,E:1410912000,NC:1413763200,OC:1442361600,PC:1458518400,QC:1473724800,RC:1490572800,SC:1505779200,TC:1522281600,UC:1537142400,VC:1553472000,WC:1568851200,XC:1572220800,YC:1580169600,ZC:1585008000,aC:1600214400,bC:1619395200,cC:1632096000,uB:1639353600,vB:1647216000,wB:1652659200,lB:null}},H:{A:{dC:0.950748},B:\"odC\",\"\",\"\",\"\"],E:\"Opera Mini\",F:{dC:1426464000}},I:{A:{mB:0,I:0.0154975,H:0,eC:0,fC:0,gC:0,hC:0.0206633,yB:0.06199,iC:0,jC:0.304784},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"eC\",\"fC\",\"gC\",\"mB\",\"I\",\"hC\",\"yB\",\"iC\",\"jC\",\"H\",\"\",\"\",\"\"],E:\"Android Browser\",F:{eC:1256515200,fC:1274313600,gC:1291593600,mB:1298332800,I:1318896000,hC:1341792000,yB:1374624000,iC:1386547200,jC:1401667200,H:1655856000}},J:{A:{D:0,A:0},B:\"webkitlackberry Browser\",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,b:0.0111391,jB:0,xB:0,kB:0},B:\"ojB\",\"xB\",\"C\",\"kB\",\"b\",\"\",\"\",\"\"],E:\"Opera Mobile\",F:{A:1287100800,B:1300752000,jB:1314835200,xB:1318291200,C:1330300800,kB:1349740800,b:1613433600},D:{b:\"webkit\"}},L:{A:{H:42.3898},B:\"webkithrome for Android\",F:{H:1655769600}},M:{A:{a:0.30995},B:\"moza\",\"\",\"\",\"\"],E:\"Firefox for Android\",F:{a:1653955200}},N:{A:{A:0.0115934,B:0.022664},B:\"msobile\",F:{A:1340150400,B:1353456000}},O:{A:{kC:0.712885},B:\"webkitkC\",\"\",\"\",\"\"],E:\"UC Browser for Android\",F:{kC:1471392000},D:{kC:\"webkit\"}},P:{A:{I:0.207064,lC:0.0103543,mC:0.010304,nC:0.0828255,oC:0.0103584,pC:0.0103532,tB:0.0105043,qC:0.0414128,rC:0.0207064,sC:0.0828255,tC:0.0931787,uC:0.0931787,lB:0.238123,vC:2.11205},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"I\",\"lC\",\"mC\",\"nC\",\"oC\",\"pC\",\"tB\",\"qC\",\"rC\",\"sC\",\"tC\",\"uC\",\"lB\",\"vC\",\"\",\"\",\"\"],E:\"Samsung Internet\",F:{I:1461024000,lC:1481846400,mC:1509408000,nC:1528329600,oC:1546128000,pC:1554163200,tB:1567900800,qC:1582588800,rC:1593475200,sC:1605657600,tC:1618531200,uC:1629072000,lB:1640736000,vC:1651708800}},Q:{A:{wC:0.142577},B:\"webkitwC\",\"\",\"\",\"\"],E:\"QQ Browser\",F:{wC:1589846400}},R:{A:{xC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"xC\",\"\",\"\",\"\"],E:\"Baidu Browser\",F:{xC:1491004800}},S:{A:{yC:0.049592},B:\"mozyC\",\"\",\"\",\"\"],E:\"KaiOS Browser\",F:{yC:1527811200}}};\n", "'use strict'\n\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\nconst agentsData = require('../../data/agents')\n\nfunction unpackBrowserVersions(versionsData) {\n  return Object.keys(versionsData).reduce((usage, version) => {\n    usage[versions[version]] = versionsData[version]\n    return usage\n  }, {})\n}\n\nmodule.exports.agents = Object.keys(agentsData).reduce((map, key) => {\n  let versionsData = agentsData[key]\n  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {\n    if (entry === 'A') {\n      data.usage_global = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'C') {\n      data.versions = versionsData[entry].reduce((list, version) => {\n        if (version === '') {\n          list.push(null)\n        } else {\n          list.push(versions[version])\n        }\n        return list\n      }, [])\n    } else if (entry === 'D') {\n      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'E') {\n      data.browser = versionsData[entry]\n    } else if (entry === 'F') {\n      data.release_date = Object.keys(versionsData[entry]).reduce(\n        (map2, key2) => {\n          map2[versions[key2]] = versionsData[entry][key2]\n          return map2\n        },\n        {}\n      )\n    } else {\n      // entry is B\n      data.prefix = versionsData[entry]\n    }\n    return data\n  }, {})\n  return map\n}, {})\n", "module.exports = {\n\t\"0.20\": \"39\",\n\t\"0.21\": \"41\",\n\t\"0.22\": \"41\",\n\t\"0.23\": \"41\",\n\t\"0.24\": \"41\",\n\t\"0.25\": \"42\",\n\t\"0.26\": \"42\",\n\t\"0.27\": \"43\",\n\t\"0.28\": \"43\",\n\t\"0.29\": \"43\",\n\t\"0.30\": \"44\",\n\t\"0.31\": \"45\",\n\t\"0.32\": \"45\",\n\t\"0.33\": \"45\",\n\t\"0.34\": \"45\",\n\t\"0.35\": \"45\",\n\t\"0.36\": \"47\",\n\t\"0.37\": \"49\",\n\t\"1.0\": \"49\",\n\t\"1.1\": \"50\",\n\t\"1.2\": \"51\",\n\t\"1.3\": \"52\",\n\t\"1.4\": \"53\",\n\t\"1.5\": \"54\",\n\t\"1.6\": \"56\",\n\t\"1.7\": \"58\",\n\t\"1.8\": \"59\",\n\t\"2.0\": \"61\",\n\t\"2.1\": \"61\",\n\t\"3.0\": \"66\",\n\t\"3.1\": \"66\",\n\t\"4.0\": \"69\",\n\t\"4.1\": \"69\",\n\t\"4.2\": \"69\",\n\t\"5.0\": \"73\",\n\t\"6.0\": \"76\",\n\t\"6.1\": \"76\",\n\t\"7.0\": \"78\",\n\t\"7.1\": \"78\",\n\t\"7.2\": \"78\",\n\t\"7.3\": \"78\",\n\t\"8.0\": \"80\",\n\t\"8.1\": \"80\",\n\t\"8.2\": \"80\",\n\t\"8.3\": \"80\",\n\t\"8.4\": \"80\",\n\t\"8.5\": \"80\",\n\t\"9.0\": \"83\",\n\t\"9.1\": \"83\",\n\t\"9.2\": \"83\",\n\t\"9.3\": \"83\",\n\t\"9.4\": \"83\",\n\t\"10.0\": \"85\",\n\t\"10.1\": \"85\",\n\t\"10.2\": \"85\",\n\t\"10.3\": \"85\",\n\t\"10.4\": \"85\",\n\t\"11.0\": \"87\",\n\t\"11.1\": \"87\",\n\t\"11.2\": \"87\",\n\t\"11.3\": \"87\",\n\t\"11.4\": \"87\",\n\t\"11.5\": \"87\",\n\t\"12.0\": \"89\",\n\t\"12.1\": \"89\",\n\t\"12.2\": \"89\",\n\t\"13.0\": \"91\",\n\t\"13.1\": \"91\",\n\t\"13.2\": \"91\",\n\t\"13.3\": \"91\",\n\t\"13.4\": \"91\",\n\t\"13.5\": \"91\",\n\t\"13.6\": \"91\",\n\t\"14.0\": \"93\",\n\t\"14.1\": \"93\",\n\t\"14.2\": \"93\",\n\t\"15.0\": \"94\",\n\t\"15.1\": \"94\",\n\t\"15.2\": \"94\",\n\t\"15.3\": \"94\",\n\t\"15.4\": \"94\",\n\t\"15.5\": \"94\",\n\t\"16.0\": \"96\",\n\t\"16.1\": \"96\",\n\t\"16.2\": \"96\",\n\t\"17.0\": \"98\",\n\t\"17.1\": \"98\",\n\t\"17.2\": \"98\",\n\t\"17.3\": \"98\",\n\t\"17.4\": \"98\",\n\t\"18.0\": \"100\",\n\t\"18.1\": \"100\",\n\t\"18.2\": \"100\",\n\t\"18.3\": \"100\",\n\t\"19.0\": \"102\",\n\t\"20.0\": \"104\"\n};", "function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n", "var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n", "var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop\n}\n", "var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar parse = require('./parse')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.released.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parse(QUERIES, queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['feature'],\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var features = browserslist.cache[node.feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 91', 'firefox 102']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSuggestion = findSuggestion;\nconst {\n  min\n} = Math;\n\nfunction levenshtein(a, b) {\n  let t = [],\n      u = [],\n      i,\n      j;\n  const m = a.length,\n        n = b.length;\n\n  if (!m) {\n    return n;\n  }\n\n  if (!n) {\n    return m;\n  }\n\n  for (j = 0; j <= n; j++) {\n    t[j] = j;\n  }\n\n  for (i = 1; i <= m; i++) {\n    for (u = [i], j = 1; j <= n; j++) {\n      u[j] = a[i - 1] === b[j - 1] ? t[j - 1] : min(t[j - 1], t[j], u[j - 1]) + 1;\n    }\n\n    t = u;\n  }\n\n  return u[n];\n}\n\nfunction findSuggestion(str, arr) {\n  const distances = arr.map(el => levenshtein(el, str));\n  return arr[distances.indexOf(min(...distances))];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionValidator = void 0;\n\nvar _findSuggestion = require(\"./find-suggestion\");\n\nclass OptionValidator {\n  constructor(descriptor) {\n    this.descriptor = descriptor;\n  }\n\n  validateTopLevelOptions(options, TopLevelOptionShape) {\n    const validOptionNames = Object.keys(TopLevelOptionShape);\n\n    for (const option of Object.keys(options)) {\n      if (!validOptionNames.includes(option)) {\n        throw new Error(this.formatMessage(`'${option}' is not a valid top-level option.\n- Did you mean '${(0, _findSuggestion.findSuggestion)(option, validOptionNames)}'?`));\n      }\n    }\n  }\n\n  validateBooleanOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"boolean\", `'${name}' option must be a boolean.`);\n    }\n\n    return value;\n  }\n\n  validateStringOption(name, value, defaultValue) {\n    if (value === undefined) {\n      return defaultValue;\n    } else {\n      this.invariant(typeof value === \"string\", `'${name}' option must be a string.`);\n    }\n\n    return value;\n  }\n\n  invariant(condition, message) {\n    if (!condition) {\n      throw new Error(this.formatMessage(message));\n    }\n  }\n\n  formatMessage(message) {\n    return `${this.descriptor}: ${message}`;\n  }\n\n}\n\nexports.OptionValidator = OptionValidator;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"OptionValidator\", {\n  enumerable: true,\n  get: function () {\n    return _validator.OptionValidator;\n  }\n});\nObject.defineProperty(exports, \"findSuggestion\", {\n  enumerable: true,\n  get: function () {\n    return _findSuggestion.findSuggestion;\n  }\n});\n\nvar _validator = require(\"./validator\");\n\nvar _findSuggestion = require(\"./find-suggestion\");", "module.exports = require(\"./data/native-modules.json\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreleasedLabels = exports.browserNameMap = void 0;\nconst unreleasedLabels = {\n  safari: \"tp\"\n};\nexports.unreleasedLabels = unreleasedLabels;\nconst browserNameMap = {\n  and_chr: \"chrome\",\n  and_ff: \"firefox\",\n  android: \"android\",\n  chrome: \"chrome\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  ie: \"ie\",\n  ie_mob: \"ie\",\n  ios_saf: \"ios\",\n  node: \"node\",\n  op_mob: \"opera\",\n  opera: \"opera\",\n  safari: \"safari\",\n  samsung: \"samsung\"\n};\nexports.browserNameMap = browserNameMap;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHighestUnreleased = getHighestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.semverMin = semverMin;\nexports.semverify = semverify;\n\nvar _semver = require(\"semver\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _targets = require(\"./targets\");\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction semverMin(first, second) {\n  return first && _semver.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.valid(version)) {\n    return version;\n  }\n\n  v.invariant(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n\n  if (a === unreleasedLabel) {\n    return b;\n  }\n\n  if (b === unreleasedLabel) {\n    return a;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getHighestUnreleased(a, b, env) {\n  return getLowestUnreleased(a, b, env) === a ? b : a;\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetNames = void 0;\nconst TargetNames = {\n  node: \"node\",\n  chrome: \"chrome\",\n  opera: \"opera\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  safari: \"safari\",\n  ie: \"ie\",\n  ios: \"ios\",\n  android: \"android\",\n  electron: \"electron\",\n  samsung: \"samsung\",\n  rhino: \"rhino\"\n};\nexports.TargetNames = TargetNames;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prettifyTargets = prettifyTargets;\nexports.prettifyVersion = prettifyVersion;\n\nvar _semver = require(\"semver\");\n\nvar _targets = require(\"./targets\");\n\nfunction prettifyVersion(version) {\n  if (typeof version !== \"string\") {\n    return version;\n  }\n\n  const parts = [_semver.major(version)];\n\n  const minor = _semver.minor(version);\n\n  const patch = _semver.patch(version);\n\n  if (minor || patch) {\n    parts.push(minor);\n  }\n\n  if (patch) {\n    parts.push(patch);\n  }\n\n  return parts.join(\".\");\n}\n\nfunction prettifyTargets(targets) {\n  return Object.keys(targets).reduce((results, target) => {\n    let value = targets[target];\n    const unreleasedLabel = _targets.unreleasedLabels[target];\n\n    if (typeof value === \"string\" && unreleasedLabel !== value) {\n      value = prettifyVersion(value);\n    }\n\n    results[target] = value;\n    return results;\n  }, {});\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInclusionReasons = getInclusionReasons;\n\nvar _semver = require(\"semver\");\n\nvar _pretty = require(\"./pretty\");\n\nvar _utils = require(\"./utils\");\n\nfunction getInclusionReasons(item, targetVersions, list) {\n  const minVersions = list[item] || {};\n  return Object.keys(targetVersions).reduce((result, env) => {\n    const minVersion = (0, _utils.getLowestImplementedVersion)(minVersions, env);\n    const targetVersion = targetVersions[env];\n\n    if (!minVersion) {\n      result[env] = (0, _pretty.prettifyVersion)(targetVersion);\n    } else {\n      const minIsUnreleased = (0, _utils.isUnreleasedVersion)(minVersion, env);\n      const targetIsUnreleased = (0, _utils.isUnreleasedVersion)(targetVersion, env);\n\n      if (!targetIsUnreleased && (minIsUnreleased || _semver.lt(targetVersion.toString(), (0, _utils.semverify)(minVersion)))) {\n        result[env] = (0, _pretty.prettifyVersion)(targetVersion);\n      }\n    }\n\n    return result;\n  }, {});\n}", "module.exports = require(\"./data/plugins.json\");\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filterItems;\nexports.isRequired = isRequired;\nexports.targetsSupported = targetsSupported;\n\nvar _semver = require(\"semver\");\n\nvar _plugins = require(\"@babel/compat-data/plugins\");\n\nvar _utils = require(\"./utils\");\n\nfunction targetsSupported(target, support) {\n  const targetEnvironments = Object.keys(target);\n\n  if (targetEnvironments.length === 0) {\n    return false;\n  }\n\n  const unsupportedEnvironments = targetEnvironments.filter(environment => {\n    const lowestImplementedVersion = (0, _utils.getLowestImplementedVersion)(support, environment);\n\n    if (!lowestImplementedVersion) {\n      return true;\n    }\n\n    const lowestTargetedVersion = target[environment];\n\n    if ((0, _utils.isUnreleasedVersion)(lowestTargetedVersion, environment)) {\n      return false;\n    }\n\n    if ((0, _utils.isUnreleasedVersion)(lowestImplementedVersion, environment)) {\n      return true;\n    }\n\n    if (!_semver.valid(lowestTargetedVersion.toString())) {\n      throw new Error(`Invalid version passed for target \"${environment}\": \"${lowestTargetedVersion}\". ` + \"Versions must be in semver format (major.minor.patch)\");\n    }\n\n    return _semver.gt((0, _utils.semverify)(lowestImplementedVersion), lowestTargetedVersion.toString());\n  });\n  return unsupportedEnvironments.length === 0;\n}\n\nfunction isRequired(name, targets, {\n  compatData = _plugins,\n  includes,\n  excludes\n} = {}) {\n  if (excludes != null && excludes.has(name)) return false;\n  if (includes != null && includes.has(name)) return true;\n  return !targetsSupported(targets, compatData[name]);\n}\n\nfunction filterItems(list, includes, excludes, targets, defaultIncludes, defaultExcludes, pluginSyntaxMap) {\n  const result = new Set();\n  const options = {\n    compatData: list,\n    includes,\n    excludes\n  };\n\n  for (const item in list) {\n    if (isRequired(item, targets, options)) {\n      result.add(item);\n    } else if (pluginSyntaxMap) {\n      const shippedProposalsSyntax = pluginSyntaxMap.get(item);\n\n      if (shippedProposalsSyntax) {\n        result.add(shippedProposalsSyntax);\n      }\n    }\n  }\n\n  if (defaultIncludes) {\n    defaultIncludes.forEach(item => !excludes.has(item) && result.add(item));\n  }\n\n  if (defaultExcludes) {\n    defaultExcludes.forEach(item => !includes.has(item) && result.delete(item));\n  }\n\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TargetNames\", {\n  enumerable: true,\n  get: function () {\n    return _options.TargetNames;\n  }\n});\nexports.default = getTargets;\nObject.defineProperty(exports, \"filterItems\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.default;\n  }\n});\nObject.defineProperty(exports, \"getInclusionReasons\", {\n  enumerable: true,\n  get: function () {\n    return _debug.getInclusionReasons;\n  }\n});\nexports.isBrowsersQueryValid = isBrowsersQueryValid;\nObject.defineProperty(exports, \"isRequired\", {\n  enumerable: true,\n  get: function () {\n    return _filterItems.isRequired;\n  }\n});\nObject.defineProperty(exports, \"prettifyTargets\", {\n  enumerable: true,\n  get: function () {\n    return _pretty.prettifyTargets;\n  }\n});\nObject.defineProperty(exports, \"unreleasedLabels\", {\n  enumerable: true,\n  get: function () {\n    return _targets.unreleasedLabels;\n  }\n});\n\nvar _browserslist = require(\"browserslist\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nvar _nativeModules = require(\"@babel/compat-data/native-modules\");\n\nvar _utils = require(\"./utils\");\n\nvar _targets = require(\"./targets\");\n\nvar _options = require(\"./options\");\n\nvar _pretty = require(\"./pretty\");\n\nvar _debug = require(\"./debug\");\n\nvar _filterItems = require(\"./filter-items\");\n\nconst ESM_SUPPORT = _nativeModules[\"es6.module\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/helper-compilation-targets\");\n\nfunction validateTargetNames(targets) {\n  const validTargets = Object.keys(_options.TargetNames);\n\n  for (const target of Object.keys(targets)) {\n    if (!(target in _options.TargetNames)) {\n      throw new Error(v.formatMessage(`'${target}' is not a valid target\n- Did you mean '${(0, _helperValidatorOption.findSuggestion)(target, validTargets)}'?`));\n    }\n  }\n\n  return targets;\n}\n\nfunction isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers) && browsers.every(b => typeof b === \"string\");\n}\n\nfunction validateBrowsers(browsers) {\n  v.invariant(browsers === undefined || isBrowsersQueryValid(browsers), `'${String(browsers)}' is not a valid browserslist query`);\n  return browsers;\n}\n\nfunction getLowestVersions(browsers) {\n  return browsers.reduce((all, browser) => {\n    const [browserName, browserVersion] = browser.split(\" \");\n    const target = _targets.browserNameMap[browserName];\n\n    if (!target) {\n      return all;\n    }\n\n    try {\n      const splitVersion = browserVersion.split(\"-\")[0].toLowerCase();\n      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, target);\n\n      if (!all[target]) {\n        all[target] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);\n        return all;\n      }\n\n      const version = all[target];\n      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, target);\n\n      if (isUnreleased && isSplitUnreleased) {\n        all[target] = (0, _utils.getLowestUnreleased)(version, splitVersion, target);\n      } else if (isUnreleased) {\n        all[target] = (0, _utils.semverify)(splitVersion);\n      } else if (!isUnreleased && !isSplitUnreleased) {\n        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n        all[target] = (0, _utils.semverMin)(version, parsedBrowserVersion);\n      }\n    } catch (e) {}\n\n    return all;\n  }, {});\n}\n\nfunction outputDecimalWarning(decimalTargets) {\n  if (!decimalTargets.length) {\n    return;\n  }\n\n  console.warn(\"Warning, the following targets are using a decimal version:\\n\");\n  decimalTargets.forEach(({\n    target,\n    value\n  }) => console.warn(`  ${target}: ${value}`));\n  console.warn(`\nWe recommend using a string for minor/patch versions to avoid numbers like 6.10\ngetting parsed as 6.1, which can lead to unexpected behavior.\n`);\n}\n\nfunction semverifyTarget(target, value) {\n  try {\n    return (0, _utils.semverify)(value);\n  } catch (error) {\n    throw new Error(v.formatMessage(`'${value}' is not a valid value for 'targets.${target}'.`));\n  }\n}\n\nfunction nodeTargetParser(value) {\n  const parsed = value === true || value === \"current\" ? process.versions.node : semverifyTarget(\"node\", value);\n  return [\"node\", parsed];\n}\n\nfunction defaultTargetParser(target, value) {\n  const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);\n  return [target, version];\n}\n\nfunction generateTargets(inputTargets) {\n  const input = Object.assign({}, inputTargets);\n  delete input.esmodules;\n  delete input.browsers;\n  return input;\n}\n\nfunction resolveTargets(queries, env) {\n  const resolved = _browserslist(queries, {\n    mobileToDesktop: true,\n    env\n  });\n\n  return getLowestVersions(resolved);\n}\n\nfunction getTargets(inputTargets = {}, options = {}) {\n  var _browsers, _browsers2;\n\n  let {\n    browsers,\n    esmodules\n  } = inputTargets;\n  const {\n    configPath = \".\"\n  } = options;\n  validateBrowsers(browsers);\n  const input = generateTargets(inputTargets);\n  let targets = validateTargetNames(input);\n  const shouldParseBrowsers = !!browsers;\n  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;\n  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;\n\n  if (!browsers && shouldSearchForConfig) {\n    browsers = _browserslist.loadConfig({\n      config: options.configFile,\n      path: configPath,\n      env: options.browserslistEnv\n    });\n\n    if (browsers == null) {\n      {\n        browsers = [];\n      }\n    }\n  }\n\n  if (esmodules && (esmodules !== \"intersect\" || !((_browsers = browsers) != null && _browsers.length))) {\n    browsers = Object.keys(ESM_SUPPORT).map(browser => `${browser} >= ${ESM_SUPPORT[browser]}`).join(\", \");\n    esmodules = false;\n  }\n\n  if ((_browsers2 = browsers) != null && _browsers2.length) {\n    const queryBrowsers = resolveTargets(browsers, options.browserslistEnv);\n\n    if (esmodules === \"intersect\") {\n      for (const browser of Object.keys(queryBrowsers)) {\n        const version = queryBrowsers[browser];\n        const esmSupportVersion = ESM_SUPPORT[browser];\n\n        if (esmSupportVersion) {\n          queryBrowsers[browser] = (0, _utils.getHighestUnreleased)(version, (0, _utils.semverify)(esmSupportVersion), browser);\n        } else {\n          delete queryBrowsers[browser];\n        }\n      }\n    }\n\n    targets = Object.assign(queryBrowsers, targets);\n  }\n\n  const result = {};\n  const decimalWarnings = [];\n\n  for (const target of Object.keys(targets).sort()) {\n    const value = targets[target];\n\n    if (typeof value === \"number\" && value % 1 !== 0) {\n      decimalWarnings.push({\n        target,\n        value\n      });\n    }\n\n    const [parsedTarget, parsedValue] = target === \"node\" ? nodeTargetParser(value) : defaultTargetParser(target, value);\n\n    if (parsedValue) {\n      result[parsedTarget] = parsedValue;\n    }\n  }\n\n  outputDecimalWarning(decimalWarnings);\n  return result;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveBrowserslistConfigFile = resolveBrowserslistConfigFile;\nexports.resolveTargets = resolveTargets;\n\nfunction _helperCompilationTargets() {\n  const data = require(\"@babel/helper-compilation-targets\");\n\n  _helperCompilationTargets = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction resolveBrowserslistConfigFile(browserslistConfigFile, configFilePath) {\n  return undefined;\n}\n\nfunction resolveTargets(options, root) {\n  const optTargets = options.targets;\n  let targets;\n\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = {\n      browsers: optTargets\n    };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = Object.assign({}, optTargets, {\n        esmodules: \"intersect\"\n      });\n    } else {\n      targets = optTargets;\n    }\n  }\n\n  return (0, _helperCompilationTargets().default)(targets, {\n    ignoreBrowserslistConfig: true,\n    browserslistEnv: options.browserslistEnv\n  });\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createDescriptor = createDescriptor;\nexports.createUncachedDescriptors = createUncachedDescriptors;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _files = require(\"./files\");\n\nvar _item = require(\"./item\");\n\nvar _caching = require(\"./caching\");\n\nvar _resolveTargets = require(\"./resolve-targets\");\n\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\n\nfunction* handlerOf(value) {\n  return value;\n}\n\nfunction optionsWithResolvedBrowserslistConfigFile(options, dirname) {\n  if (typeof options.browserslistConfigFile === \"string\") {\n    options.browserslistConfigFile = (0, _resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile, dirname);\n  }\n\n  return options;\n}\n\nfunction createCachedDescriptors(dirname, options, alias) {\n  const {\n    plugins,\n    presets,\n    passPerPreset\n  } = options;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => handlerOf([]),\n    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => handlerOf([])\n  };\n}\n\nfunction createUncachedDescriptors(dirname, options, alias) {\n  let plugins;\n  let presets;\n  return {\n    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),\n\n    *plugins() {\n      if (!plugins) {\n        plugins = yield* createPluginDescriptors(options.plugins || [], dirname, alias);\n      }\n\n      return plugins;\n    },\n\n    *presets() {\n      if (!presets) {\n        presets = yield* createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n      }\n\n      return presets;\n    }\n\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCache)(function* (passPerPreset) {\n    const descriptors = yield* createPresetDescriptors(items, dirname, alias, passPerPreset);\n    return descriptors.map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc));\n  }));\n});\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCache)(function* (alias) {\n    const descriptors = yield* createPluginDescriptors(items, dirname, alias);\n    return descriptors.map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc));\n  });\n});\nconst DEFAULT_OPTIONS = {};\n\nfunction loadCachedDescriptor(cache, desc) {\n  const {\n    value,\n    options = DEFAULT_OPTIONS\n  } = desc;\n  if (options === false) return desc;\n  let cacheByOptions = cache.get(value);\n\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));\n\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction* createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return yield* createDescriptors(\"preset\", items, dirname, alias, passPerPreset);\n}\n\nfunction* createPluginDescriptors(items, dirname, alias) {\n  return yield* createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction* createDescriptors(type, items, dirname, alias, ownPass) {\n  const descriptors = yield* _gensync().all(items.map((item, index) => createDescriptor(item, dirname, {\n    type,\n    alias: `${alias}$${index}`,\n    ownPass: !!ownPass\n  })));\n  assertNoDuplicates(descriptors);\n  return descriptors;\n}\n\nfunction* createDescriptor(pair, dirname, {\n  type,\n  alias,\n  ownPass\n}) {\n  const desc = (0, _item.getItemDescriptor)(pair);\n\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  let value = pair;\n\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\"To resolve a string-based item, the type of item must be given\");\n    }\n\n    const resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n    const request = value;\n    ({\n      filepath,\n      value\n    } = yield* resolver(value, dirname));\n    file = {\n      request,\n      resolved: filepath\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file\n  };\n}\n\nfunction assertNoDuplicates(items) {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n    let nameMap = map.get(item.value);\n\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join(\"\\n\"));\n    }\n\n    nameMap.add(item.name);\n  }\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConfigItem = createConfigItem;\nexports.createItemFromDescriptor = createItemFromDescriptor;\nexports.getItemDescriptor = getItemDescriptor;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nfunction createItemFromDescriptor(desc) {\n  return new ConfigItem(desc);\n}\n\nfunction* createConfigItem(value, {\n  dirname = \".\",\n  type\n} = {}) {\n  const descriptor = yield* (0, _configDescriptors.createDescriptor)(value, _path().resolve(dirname), {\n    type,\n    alias: \"programmatic item\"\n  });\n  return createItemFromDescriptor(descriptor);\n}\n\nfunction getItemDescriptor(item) {\n  if (item != null && item[CONFIG_ITEM_BRAND]) {\n    return item._descriptor;\n  }\n\n  return undefined;\n}\n\nconst CONFIG_ITEM_BRAND = Symbol.for(\"@babel/core@7 - ConfigItem\");\n\nclass ConfigItem {\n  constructor(descriptor) {\n    this._descriptor = void 0;\n    this[CONFIG_ITEM_BRAND] = true;\n    this.value = void 0;\n    this.options = void 0;\n    this.dirname = void 0;\n    this.name = void 0;\n    this.file = void 0;\n    this._descriptor = descriptor;\n    Object.defineProperty(this, \"_descriptor\", {\n      enumerable: false\n    });\n    Object.defineProperty(this, CONFIG_ITEM_BRAND, {\n      enumerable: false\n    });\n    this.value = this._descriptor.value;\n    this.options = this._descriptor.options;\n    this.dirname = this._descriptor.dirname;\n    this.name = this._descriptor.name;\n    this.file = this._descriptor.file ? {\n      request: this._descriptor.file.request,\n      resolved: this._descriptor.file.resolved\n    } : undefined;\n    Object.freeze(this);\n  }\n\n}\n\nObject.freeze(ConfigItem.prototype);\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  auxiliaryComment: {\n    message: \"Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`\"\n  },\n  blacklist: {\n    message: \"Put the specific transforms you want in the `plugins` option\"\n  },\n  breakConfig: {\n    message: \"This is not a necessary option in Babel 6\"\n  },\n  experimental: {\n    message: \"Put the specific transforms you want in the `plugins` option\"\n  },\n  externalHelpers: {\n    message: \"Use the `external-helpers` plugin instead. \" + \"Check out http://babeljs.io/docs/plugins/external-helpers/\"\n  },\n  extra: {\n    message: \"\"\n  },\n  jsxPragma: {\n    message: \"use the `pragma` option in the `react-jsx` plugin. \" + \"Check out http://babeljs.io/docs/plugins/transform-react-jsx/\"\n  },\n  loose: {\n    message: \"Specify the `loose` option for the relevant plugin you are using \" + \"or use a preset that sets the option.\"\n  },\n  metadataUsedHelpers: {\n    message: \"Not required anymore as this is enabled by default\"\n  },\n  modules: {\n    message: \"Use the corresponding module transform plugin in the `plugins` option. \" + \"Check out http://babeljs.io/docs/plugins/#modules\"\n  },\n  nonStandard: {\n    message: \"Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. \" + \"Also check out the react preset http://babeljs.io/docs/plugins/preset-react/\"\n  },\n  optional: {\n    message: \"Put the specific transforms you want in the `plugins` option\"\n  },\n  sourceMapName: {\n    message: \"The `sourceMapName` option has been removed because it makes more sense for the \" + \"tooling that calls Babel to assign `map.file` themselves.\"\n  },\n  stage: {\n    message: \"Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets\"\n  },\n  whitelist: {\n    message: \"Put the specific transforms you want in the `plugins` option\"\n  },\n  resolveModuleSource: {\n    version: 6,\n    message: \"Use `babel-plugin-module-resolver@3`'s 'resolvePath' options\"\n  },\n  metadata: {\n    version: 6,\n    message: \"Generated plugin metadata is always included in the output result\"\n  },\n  sourceMapTarget: {\n    version: 6,\n    message: \"The `sourceMapTarget` option has been removed because it makes more sense for the tooling \" + \"that calls Babel to assign `map.file` themselves.\"\n  }\n};\nexports.default = _default;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.access = access;\nexports.assertArray = assertArray;\nexports.assertAssumptions = assertAssumptions;\nexports.assertBabelrcSearch = assertBabelrcSearch;\nexports.assertBoolean = assertBoolean;\nexports.assertCallerMetadata = assertCallerMetadata;\nexports.assertCompact = assertCompact;\nexports.assertConfigApplicableTest = assertConfigApplicableTest;\nexports.assertConfigFileSearch = assertConfigFileSearch;\nexports.assertFunction = assertFunction;\nexports.assertIgnoreList = assertIgnoreList;\nexports.assertInputSourceMap = assertInputSourceMap;\nexports.assertObject = assertObject;\nexports.assertPluginList = assertPluginList;\nexports.assertRootMode = assertRootMode;\nexports.assertSourceMaps = assertSourceMaps;\nexports.assertSourceType = assertSourceType;\nexports.assertString = assertString;\nexports.assertTargets = assertTargets;\nexports.msg = msg;\n\nfunction _helperCompilationTargets() {\n  const data = require(\"@babel/helper-compilation-targets\");\n\n  _helperCompilationTargets = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./options\");\n\nfunction msg(loc) {\n  switch (loc.type) {\n    case \"root\":\n      return ``;\n\n    case \"env\":\n      return `${msg(loc.parent)}.env[\"${loc.name}\"]`;\n\n    case \"overrides\":\n      return `${msg(loc.parent)}.overrides[${loc.index}]`;\n\n    case \"option\":\n      return `${msg(loc.parent)}.${loc.name}`;\n\n    case \"access\":\n      return `${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;\n\n    default:\n      throw new Error(`Assertion failure: Unknown type ${loc.type}`);\n  }\n}\n\nfunction access(loc, name) {\n  return {\n    type: \"access\",\n    name,\n    parent: loc\n  };\n}\n\nfunction assertRootMode(loc, value) {\n  if (value !== undefined && value !== \"root\" && value !== \"upward\" && value !== \"upward-optional\") {\n    throw new Error(`${msg(loc)} must be a \"root\", \"upward\", \"upward-optional\" or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceMaps(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"inline\" && value !== \"both\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"inline\", \"both\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCompact(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && value !== \"auto\") {\n    throw new Error(`${msg(loc)} must be a boolean, \"auto\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertSourceType(loc, value) {\n  if (value !== undefined && value !== \"module\" && value !== \"script\" && value !== \"unambiguous\") {\n    throw new Error(`${msg(loc)} must be \"module\", \"script\", \"unambiguous\", or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertCallerMetadata(loc, value) {\n  const obj = assertObject(loc, value);\n\n  if (obj) {\n    if (typeof obj.name !== \"string\") {\n      throw new Error(`${msg(loc)} set but does not contain \"name\" property string`);\n    }\n\n    for (const prop of Object.keys(obj)) {\n      const propLoc = access(loc, prop);\n      const value = obj[prop];\n\n      if (value != null && typeof value !== \"boolean\" && typeof value !== \"string\" && typeof value !== \"number\") {\n        throw new Error(`${msg(propLoc)} must be null, undefined, a boolean, a string, or a number.`);\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction assertInputSourceMap(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && (typeof value !== \"object\" || !value)) {\n    throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertString(loc, value) {\n  if (value !== undefined && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a string, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertFunction(loc, value) {\n  if (value !== undefined && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a function, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertBoolean(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\") {\n    throw new Error(`${msg(loc)} must be a boolean, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertObject(loc, value) {\n  if (value !== undefined && (typeof value !== \"object\" || Array.isArray(value) || !value)) {\n    throw new Error(`${msg(loc)} must be an object, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertArray(loc, value) {\n  if (value != null && !Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be an array, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertIgnoreList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertIgnoreItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertIgnoreItem(loc, value) {\n  if (typeof value !== \"string\" && typeof value !== \"function\" && !(value instanceof RegExp)) {\n    throw new Error(`${msg(loc)} must be an array of string/Function/RegExp values, or undefined`);\n  }\n\n  return value;\n}\n\nfunction assertConfigApplicableTest(loc, value) {\n  if (value === undefined) return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a string/Function/RegExp, or an array of those`);\n  }\n\n  return value;\n}\n\nfunction checkValidTest(value) {\n  return typeof value === \"string\" || typeof value === \"function\" || value instanceof RegExp;\n}\n\nfunction assertConfigFileSearch(loc, value) {\n  if (value !== undefined && typeof value !== \"boolean\" && typeof value !== \"string\") {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string, ` + `got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertBabelrcSearch(loc, value) {\n  if (value === undefined || typeof value === \"boolean\") return value;\n\n  if (Array.isArray(value)) {\n    value.forEach((item, i) => {\n      if (!checkValidTest(item)) {\n        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);\n      }\n    });\n  } else if (!checkValidTest(value)) {\n    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp ` + `or an array of those, got ${JSON.stringify(value)}`);\n  }\n\n  return value;\n}\n\nfunction assertPluginList(loc, value) {\n  const arr = assertArray(loc, value);\n\n  if (arr) {\n    arr.forEach((item, i) => assertPluginItem(access(loc, i), item));\n  }\n\n  return arr;\n}\n\nfunction assertPluginItem(loc, value) {\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      throw new Error(`${msg(loc)} must include an object`);\n    }\n\n    if (value.length > 3) {\n      throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);\n    }\n\n    assertPluginTarget(access(loc, 0), value[0]);\n\n    if (value.length > 1) {\n      const opts = value[1];\n\n      if (opts !== undefined && opts !== false && (typeof opts !== \"object\" || Array.isArray(opts) || opts === null)) {\n        throw new Error(`${msg(access(loc, 1))} must be an object, false, or undefined`);\n      }\n    }\n\n    if (value.length === 3) {\n      const name = value[2];\n\n      if (name !== undefined && typeof name !== \"string\") {\n        throw new Error(`${msg(access(loc, 2))} must be a string, or undefined`);\n      }\n    }\n  } else {\n    assertPluginTarget(loc, value);\n  }\n\n  return value;\n}\n\nfunction assertPluginTarget(loc, value) {\n  if ((typeof value !== \"object\" || !value) && typeof value !== \"string\" && typeof value !== \"function\") {\n    throw new Error(`${msg(loc)} must be a string, object, function`);\n  }\n\n  return value;\n}\n\nfunction assertTargets(loc, value) {\n  if ((0, _helperCompilationTargets().isBrowsersQueryValid)(value)) return value;\n\n  if (typeof value !== \"object\" || !value || Array.isArray(value)) {\n    throw new Error(`${msg(loc)} must be a string, an array of strings or an object`);\n  }\n\n  const browsersLoc = access(loc, \"browsers\");\n  const esmodulesLoc = access(loc, \"esmodules\");\n  assertBrowsersList(browsersLoc, value.browsers);\n  assertBoolean(esmodulesLoc, value.esmodules);\n\n  for (const key of Object.keys(value)) {\n    const val = value[key];\n    const subLoc = access(loc, key);\n    if (key === \"esmodules\") assertBoolean(subLoc, val);else if (key === \"browsers\") assertBrowsersList(subLoc, val);else if (!Object.hasOwnProperty.call(_helperCompilationTargets().TargetNames, key)) {\n      const validTargets = Object.keys(_helperCompilationTargets().TargetNames).join(\", \");\n      throw new Error(`${msg(subLoc)} is not a valid target. Supported targets are ${validTargets}`);\n    } else assertBrowserVersion(subLoc, val);\n  }\n\n  return value;\n}\n\nfunction assertBrowsersList(loc, value) {\n  if (value !== undefined && !(0, _helperCompilationTargets().isBrowsersQueryValid)(value)) {\n    throw new Error(`${msg(loc)} must be undefined, a string or an array of strings`);\n  }\n}\n\nfunction assertBrowserVersion(loc, value) {\n  if (typeof value === \"number\" && Math.round(value) === value) return;\n  if (typeof value === \"string\") return;\n  throw new Error(`${msg(loc)} must be a string or an integer number`);\n}\n\nfunction assertAssumptions(loc, value) {\n  if (value === undefined) return;\n\n  if (typeof value !== \"object\" || value === null) {\n    throw new Error(`${msg(loc)} must be an object or undefined.`);\n  }\n\n  let root = loc;\n\n  do {\n    root = root.parent;\n  } while (root.type !== \"root\");\n\n  const inPreset = root.source === \"preset\";\n\n  for (const name of Object.keys(value)) {\n    const subLoc = access(loc, name);\n\n    if (!_options.assumptionsNames.has(name)) {\n      throw new Error(`${msg(subLoc)} is not a supported assumption.`);\n    }\n\n    if (typeof value[name] !== \"boolean\") {\n      throw new Error(`${msg(subLoc)} must be a boolean.`);\n    }\n\n    if (inPreset && value[name] === false) {\n      throw new Error(`${msg(subLoc)} cannot be set to 'false' inside presets.`);\n    }\n  }\n\n  return value;\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assumptionsNames = void 0;\nexports.checkNoUnwrappedItemOptionPairs = checkNoUnwrappedItemOptionPairs;\nexports.validate = validate;\n\nvar _plugin = require(\"../plugin\");\n\nvar _removed = require(\"./removed\");\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nconst ROOT_VALIDATORS = {\n  cwd: _optionAssertions.assertString,\n  root: _optionAssertions.assertString,\n  rootMode: _optionAssertions.assertRootMode,\n  configFile: _optionAssertions.assertConfigFileSearch,\n  caller: _optionAssertions.assertCallerMetadata,\n  filename: _optionAssertions.assertString,\n  filenameRelative: _optionAssertions.assertString,\n  code: _optionAssertions.assertBoolean,\n  ast: _optionAssertions.assertBoolean,\n  cloneInputAst: _optionAssertions.assertBoolean,\n  envName: _optionAssertions.assertString\n};\nconst BABELRC_VALIDATORS = {\n  babelrc: _optionAssertions.assertBoolean,\n  babelrcRoots: _optionAssertions.assertBabelrcSearch\n};\nconst NONPRESET_VALIDATORS = {\n  extends: _optionAssertions.assertString,\n  ignore: _optionAssertions.assertIgnoreList,\n  only: _optionAssertions.assertIgnoreList,\n  targets: _optionAssertions.assertTargets,\n  browserslistConfigFile: _optionAssertions.assertConfigFileSearch,\n  browserslistEnv: _optionAssertions.assertString\n};\nconst COMMON_VALIDATORS = {\n  inputSourceMap: _optionAssertions.assertInputSourceMap,\n  presets: _optionAssertions.assertPluginList,\n  plugins: _optionAssertions.assertPluginList,\n  passPerPreset: _optionAssertions.assertBoolean,\n  assumptions: _optionAssertions.assertAssumptions,\n  env: assertEnvSet,\n  overrides: assertOverridesList,\n  test: _optionAssertions.assertConfigApplicableTest,\n  include: _optionAssertions.assertConfigApplicableTest,\n  exclude: _optionAssertions.assertConfigApplicableTest,\n  retainLines: _optionAssertions.assertBoolean,\n  comments: _optionAssertions.assertBoolean,\n  shouldPrintComment: _optionAssertions.assertFunction,\n  compact: _optionAssertions.assertCompact,\n  minified: _optionAssertions.assertBoolean,\n  auxiliaryCommentBefore: _optionAssertions.assertString,\n  auxiliaryCommentAfter: _optionAssertions.assertString,\n  sourceType: _optionAssertions.assertSourceType,\n  wrapPluginVisitorMethod: _optionAssertions.assertFunction,\n  highlightCode: _optionAssertions.assertBoolean,\n  sourceMaps: _optionAssertions.assertSourceMaps,\n  sourceMap: _optionAssertions.assertSourceMaps,\n  sourceFileName: _optionAssertions.assertString,\n  sourceRoot: _optionAssertions.assertString,\n  parserOpts: _optionAssertions.assertObject,\n  generatorOpts: _optionAssertions.assertObject\n};\n{\n  Object.assign(COMMON_VALIDATORS, {\n    getModuleId: _optionAssertions.assertFunction,\n    moduleRoot: _optionAssertions.assertString,\n    moduleIds: _optionAssertions.assertBoolean,\n    moduleId: _optionAssertions.assertString\n  });\n}\nconst knownAssumptions = [\"arrayLikeIsIterable\", \"constantReexports\", \"constantSuper\", \"enumerableModuleMeta\", \"ignoreFunctionLength\", \"ignoreToPrimitiveHint\", \"iterableIsArray\", \"mutableTemplateObject\", \"noClassCalls\", \"noDocumentAll\", \"noIncompleteNsImportDetection\", \"noNewArrows\", \"objectRestNoSymbols\", \"privateFieldsAsProperties\", \"pureGetters\", \"setClassMethods\", \"setComputedProperties\", \"setPublicClassFields\", \"setSpreadProperties\", \"skipForOfIteratorClosing\", \"superIsCallableConstructor\"];\nconst assumptionsNames = new Set(knownAssumptions);\nexports.assumptionsNames = assumptionsNames;\n\nfunction getSource(loc) {\n  return loc.type === \"root\" ? loc.source : getSource(loc.parent);\n}\n\nfunction validate(type, opts) {\n  return validateNested({\n    type: \"root\",\n    source: type\n  }, opts);\n}\n\nfunction validateNested(loc, opts) {\n  const type = getSource(loc);\n  assertNoDuplicateSourcemap(opts);\n  Object.keys(opts).forEach(key => {\n    const optLoc = {\n      type: \"option\",\n      name: key,\n      parent: loc\n    };\n\n    if (type === \"preset\" && NONPRESET_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);\n    }\n\n    if (type !== \"arguments\" && ROOT_VALIDATORS[key]) {\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);\n    }\n\n    if (type !== \"arguments\" && type !== \"configfile\" && BABELRC_VALIDATORS[key]) {\n      if (type === \"babelrcfile\" || type === \"extendsfile\") {\n        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or \"extends\"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);\n      }\n\n      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);\n    }\n\n    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;\n    validator(optLoc, opts[key]);\n  });\n  return opts;\n}\n\nfunction throwUnknownError(loc) {\n  const key = loc.name;\n\n  if (_removed.default[key]) {\n    const {\n      message,\n      version = 5\n    } = _removed.default[key];\n    throw new Error(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);\n  } else {\n    const unknownOptErr = new Error(`Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);\n    unknownOptErr.code = \"BABEL_UNKNOWN_OPTION\";\n    throw unknownOptErr;\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction assertNoDuplicateSourcemap(opts) {\n  if (has(opts, \"sourceMap\") && has(opts, \"sourceMaps\")) {\n    throw new Error(\".sourceMap is an alias for .sourceMaps, cannot use both\");\n  }\n}\n\nfunction assertEnvSet(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);\n  }\n\n  const parent = loc.parent;\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n\n  if (obj) {\n    for (const envName of Object.keys(obj)) {\n      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);\n      if (!env) continue;\n      const envLoc = {\n        type: \"env\",\n        name: envName,\n        parent\n      };\n      validateNested(envLoc, env);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertOverridesList(loc, value) {\n  if (loc.parent.type === \"env\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);\n  }\n\n  if (loc.parent.type === \"overrides\") {\n    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);\n  }\n\n  const parent = loc.parent;\n  const arr = (0, _optionAssertions.assertArray)(loc, value);\n\n  if (arr) {\n    for (const [index, item] of arr.entries()) {\n      const objLoc = (0, _optionAssertions.access)(loc, index);\n      const env = (0, _optionAssertions.assertObject)(objLoc, item);\n      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);\n      const overridesLoc = {\n        type: \"overrides\",\n        index,\n        parent\n      };\n      validateNested(overridesLoc, env);\n    }\n  }\n\n  return arr;\n}\n\nfunction checkNoUnwrappedItemOptionPairs(items, index, type, e) {\n  if (index === 0) return;\n  const lastItem = items[index - 1];\n  const thisItem = items[index];\n\n  if (lastItem.file && lastItem.options === undefined && typeof thisItem.value === \"object\") {\n    e.message += `\\n- Maybe you meant to use\\n` + `\"${type}s\": [\\n  [\"${lastItem.file.request}\", ${JSON.stringify(thisItem.value, undefined, 2)}]\\n]\\n` + `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;\n  }\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pathToPattern;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst sep = `\\\\${_path().sep}`;\nconst endSep = `(?:${sep}|$)`;\nconst substitution = `[^${sep}]+`;\nconst starPat = `(?:${substitution}${sep})`;\nconst starPatLast = `(?:${substitution}${endSep})`;\nconst starStarPat = `${starPat}*?`;\nconst starStarPatLast = `${starPat}*?${starPatLast}?`;\n\nfunction escapeRegExp(string) {\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n}\n\nfunction pathToPattern(pattern, dirname) {\n  const parts = _path().resolve(dirname, pattern).split(_path().sep);\n\n  return new RegExp([\"^\", ...parts.map((part, i) => {\n    const last = i === parts.length - 1;\n    if (part === \"**\") return last ? starStarPatLast : starStarPat;\n    if (part === \"*\") return last ? starPatLast : starPat;\n\n    if (part.indexOf(\"*.\") === 0) {\n      return substitution + escapeRegExp(part.slice(1)) + (last ? endSep : sep);\n    }\n\n    return escapeRegExp(part) + (last ? endSep : sep);\n  })].join(\"\"));\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigPrinter = exports.ChainFormatter = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst ChainFormatter = {\n  Programmatic: 0,\n  Config: 1\n};\nexports.ChainFormatter = ChainFormatter;\nconst Formatter = {\n  title(type, callerName, filepath) {\n    let title = \"\";\n\n    if (type === ChainFormatter.Programmatic) {\n      title = \"programmatic options\";\n\n      if (callerName) {\n        title += \" from \" + callerName;\n      }\n    } else {\n      title = \"config \" + filepath;\n    }\n\n    return title;\n  },\n\n  loc(index, envName) {\n    let loc = \"\";\n\n    if (index != null) {\n      loc += `.overrides[${index}]`;\n    }\n\n    if (envName != null) {\n      loc += `.env[\"${envName}\"]`;\n    }\n\n    return loc;\n  },\n\n  *optionsAndDescriptors(opt) {\n    const content = Object.assign({}, opt.options);\n    delete content.overrides;\n    delete content.env;\n    const pluginDescriptors = [...(yield* opt.plugins())];\n\n    if (pluginDescriptors.length) {\n      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));\n    }\n\n    const presetDescriptors = [...(yield* opt.presets())];\n\n    if (presetDescriptors.length) {\n      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));\n    }\n\n    return JSON.stringify(content, undefined, 2);\n  }\n\n};\n\nfunction descriptorToConfig(d) {\n  var _d$file;\n\n  let name = (_d$file = d.file) == null ? void 0 : _d$file.request;\n\n  if (name == null) {\n    if (typeof d.value === \"object\") {\n      name = d.value;\n    } else if (typeof d.value === \"function\") {\n      name = `[Function: ${d.value.toString().slice(0, 50)} ... ]`;\n    }\n  }\n\n  if (name == null) {\n    name = \"[Unknown]\";\n  }\n\n  if (d.options === undefined) {\n    return name;\n  } else if (d.name == null) {\n    return [name, d.options];\n  } else {\n    return [name, d.options, d.name];\n  }\n}\n\nclass ConfigPrinter {\n  constructor() {\n    this._stack = [];\n  }\n\n  configure(enabled, type, {\n    callerName,\n    filepath\n  }) {\n    if (!enabled) return () => {};\n    return (content, index, envName) => {\n      this._stack.push({\n        type,\n        callerName,\n        filepath,\n        content,\n        index,\n        envName\n      });\n    };\n  }\n\n  static *format(config) {\n    let title = Formatter.title(config.type, config.callerName, config.filepath);\n    const loc = Formatter.loc(config.index, config.envName);\n    if (loc) title += ` ${loc}`;\n    const content = yield* Formatter.optionsAndDescriptors(config.content);\n    return `${title}\\n${content}`;\n  }\n\n  *output() {\n    if (this._stack.length === 0) return \"\";\n    const configs = yield* _gensync().all(this._stack.map(s => ConfigPrinter.format(s)));\n    return configs.join(\"\\n\\n\");\n  }\n\n}\n\nexports.ConfigPrinter = ConfigPrinter;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildPresetChainWalker = void 0;\nexports.buildRootChain = buildRootChain;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = require(\"debug\");\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = require(\"./pattern-to-regex\");\n\nvar _printer = require(\"./printer\");\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nconst debug = _debug()(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set()\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  let configReport, babelRcReport;\n  const programmaticLogger = new _printer.ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context, undefined, programmaticLogger);\n  if (!programmaticChain) return null;\n  const programmaticReport = yield* programmaticLogger.output();\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n  const configFileLogger = new _printer.ConfigPrinter();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context, undefined, configFileLogger);\n    if (!result) return null;\n    configReport = yield* configFileLogger.output();\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && typeof context.filename === \"string\") {\n    const pkgData = yield* (0, _files.findPackageData)(context.filename);\n\n    if (pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n      ({\n        ignore: ignoreFile,\n        config: babelrcFile\n      } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n      if (ignoreFile) {\n        fileChain.files.add(ignoreFile.filepath);\n      }\n\n      if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n        isIgnored = true;\n      }\n\n      if (babelrcFile && !isIgnored) {\n        const validatedFile = validateBabelrcFile(babelrcFile);\n        const babelrcLogger = new _printer.ConfigPrinter();\n        const result = yield* loadFileChain(validatedFile, context, undefined, babelrcLogger);\n\n        if (!result) {\n          isIgnored = true;\n        } else {\n          babelRcReport = yield* babelrcLogger.output();\n          mergeChain(fileChain, result);\n        }\n      }\n\n      if (babelrcFile && isIgnored) {\n        fileChain.files.add(babelrcFile.filepath);\n      }\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(`Babel configs on \"${context.filename}\" (ascending priority):\\n` + [configReport, babelRcReport, programmaticReport].filter(x => !!x).join(\"\\n\\n\") + \"\\n-----End Babel configs-----\");\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns];\n  }\n\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName),\n  createLogger: (input, context, baseLogger) => buildProgrammaticLogger(input, context, baseLogger)\n});\nconst loadFileChainWalker = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) => buildFileLogger(file.filepath, context, baseLogger)\n});\n\nfunction* loadFileChain(input, context, files, baseLogger) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n\n  if (chain) {\n    chain.files.add(input.filepath);\n  }\n\n  return chain;\n}\n\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath\n  });\n}\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger\n}) {\n  return function* (input, context, files = new Set(), baseLogger) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined\n      });\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined\n          });\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName\n            });\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      config: {\n        options: {\n          ignore,\n          only\n        }\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const {\n      config,\n      index,\n      envName\n    } of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger))) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      yield* mergeChainOpts(chain, config);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files, baseLogger);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction* mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...(yield* plugins()));\n  target.presets.push(...(yield* presets()));\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction ignoreListReplacer(_key, value) {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n\n  return value;\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n\n    const message = `No config is applied to \"${(_context$filename = context.filename) != null ? _context$filename : \"(unknown)\"}\" because it matches one of \\`ignore: ${JSON.stringify(ignore, ignoreListReplacer)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n\n    const message = `No config is applied to \"${(_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\"}\" because it fails to match one of \\`only: ${JSON.stringify(only, ignoreListReplacer)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validatePluginObject = validatePluginObject;\n\nvar _optionAssertions = require(\"./option-assertions\");\n\nconst VALIDATORS = {\n  name: _optionAssertions.assertString,\n  manipulateOptions: _optionAssertions.assertFunction,\n  pre: _optionAssertions.assertFunction,\n  post: _optionAssertions.assertFunction,\n  inherits: _optionAssertions.assertFunction,\n  visitor: assertVisitorMap,\n  parserOverride: _optionAssertions.assertFunction,\n  generatorOverride: _optionAssertions.assertFunction\n};\n\nfunction assertVisitorMap(loc, value) {\n  const obj = (0, _optionAssertions.assertObject)(loc, value);\n\n  if (obj) {\n    Object.keys(obj).forEach(prop => assertVisitorHandler(prop, obj[prop]));\n\n    if (obj.enter || obj.exit) {\n      throw new Error(`${(0, _optionAssertions.msg)(loc)} cannot contain catch-all \"enter\" or \"exit\" handlers. Please target individual nodes.`);\n    }\n  }\n\n  return obj;\n}\n\nfunction assertVisitorHandler(key, value) {\n  if (value && typeof value === \"object\") {\n    Object.keys(value).forEach(handler => {\n      if (handler !== \"enter\" && handler !== \"exit\") {\n        throw new Error(`.visitor[\"${key}\"] may only have .enter and/or .exit handlers.`);\n      }\n    });\n  } else if (typeof value !== \"function\") {\n    throw new Error(`.visitor[\"${key}\"] must be a function`);\n  }\n\n  return value;\n}\n\nfunction validatePluginObject(obj) {\n  const rootPath = {\n    type: \"root\",\n    source: \"plugin\"\n  };\n  Object.keys(obj).forEach(key => {\n    const validator = VALIDATORS[key];\n\n    if (validator) {\n      const optLoc = {\n        type: \"option\",\n        name: key,\n        parent: rootPath\n      };\n      validator(optLoc, obj[key]);\n    } else {\n      const invalidPluginPropertyError = new Error(`.${key} is not a valid Plugin property`);\n      invalidPluginPropertyError.code = \"BABEL_UNKNOWN_PLUGIN_PROPERTY\";\n      throw invalidPluginPropertyError;\n    }\n  });\n  return obj;\n}\n\n0 && 0;", "0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeConfigAPI = makeConfigAPI;\nexports.makePluginAPI = makePluginAPI;\nexports.makePresetAPI = makePresetAPI;\n\nfunction _semver() {\n  const data = require(\"semver\");\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _ = require(\"../../\");\n\nvar _caching = require(\"../caching\");\n\nvar Context = require(\"../cache-contexts\");\n\nfunction makeConfigAPI(cache) {\n  const env = value => cache.using(data => {\n    if (typeof value === \"undefined\") return data.envName;\n\n    if (typeof value === \"function\") {\n      return (0, _caching.assertSimpleType)(value(data.envName));\n    }\n\n    return (Array.isArray(value) ? value : [value]).some(entry => {\n      if (typeof entry !== \"string\") {\n        throw new Error(\"Unexpected non-string value\");\n      }\n\n      return entry === data.envName;\n    });\n  });\n\n  const caller = cb => cache.using(data => (0, _caching.assertSimpleType)(cb(data.caller)));\n\n  return {\n    version: _.version,\n    cache: cache.simple(),\n    env,\n    async: () => false,\n    caller,\n    assertVersion\n  };\n}\n\nfunction makePresetAPI(cache, externalDependencies) {\n  const targets = () => JSON.parse(cache.using(data => JSON.stringify(data.targets)));\n\n  const addExternalDependency = ref => {\n    externalDependencies.push(ref);\n  };\n\n  return Object.assign({}, makeConfigAPI(cache), {\n    targets,\n    addExternalDependency\n  });\n}\n\nfunction makePluginAPI(cache, externalDependencies) {\n  const assumption = name => cache.using(data => data.assumptions[name]);\n\n  return Object.assign({}, makePresetAPI(cache, externalDependencies), {\n    assumption\n  });\n}\n\nfunction assertVersion(range) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n\n    range = `^${range}.0.0-0`;\n  }\n\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  if (_semver().satisfies(_.version, range)) return;\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n\n  const err = new Error(`Requires Babel \"${range}\", but was loaded with \"${_.version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version: _.version,\n    range\n  });\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = require(\"./plugin\");\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nvar _resolveTargets = require(\"./resolve-targets\");\n\nconst _excluded = [\"showIgnoredFiles\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true\n  } = args;\n\n  const absoluteCwd = _path().resolve(cwd);\n\n  const absoluteRootDir = resolveRootMode(_path().resolve(absoluteCwd, rootDir), rootMode);\n  const filename = typeof args.filename === \"string\" ? _path().resolve(cwd, args.filename) : undefined;\n  const showConfigPath = yield* (0, _files.resolveShowConfigPath)(absoluteCwd);\n  const context = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const merged = {\n    assumptions: {}\n  };\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(merged, opts);\n  });\n  const options = Object.assign({}, merged, {\n    targets: (0, _resolveTargets.resolveTargets)(merged, absoluteRootDir),\n    cloneInputAst,\n    babelrc: false,\n    configFile: false,\n    browserslistConfigFile: false,\n    passPerPreset: false,\n    envName: context.envName,\n    cwd: context.cwd,\n    root: context.root,\n    rootMode: \"root\",\n    filename: typeof context.filename === \"string\" ? context.filename : undefined,\n    plugins: configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor)),\n    presets: configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor))\n  });\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files\n  };\n}\n\nconst loadPartialConfig = _gensync()(function* (opts) {\n  let showIgnoredFiles = false;\n\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    var _opts = opts;\n    ({\n      showIgnoredFiles\n    } = _opts);\n    opts = _objectWithoutPropertiesLoose(_opts, _excluded);\n    _opts;\n  }\n\n  const result = yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config,\n    fileHandling,\n    files\n  } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files);\n});\n\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config, fileHandling, files) {\n    this.options = void 0;\n    this.babelrc = void 0;\n    this.babelignore = void 0;\n    this.config = void 0;\n    this.fileHandling = void 0;\n    this.files = void 0;\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _async = require(\"../gensync-utils/async\");\n\nvar _util = require(\"./util\");\n\nvar context = require(\"../index\");\n\nvar _plugin = require(\"./plugin\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _deepArray = require(\"./helpers/deep-array\");\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"./caching\");\n\nvar _options = require(\"./validation/options\");\n\nvar _plugins = require(\"./validation/plugins\");\n\nvar _configApi = require(\"./helpers/config-api\");\n\nvar _partial = require(\"./partial\");\n\nvar Context = require(\"./cache-contexts\");\n\nvar _default = _gensync()(function* loadFullConfig(inputOpts) {\n  var _opts$assumptions;\n\n  const result = yield* (0, _partial.default)(inputOpts);\n\n  if (!result) {\n    return null;\n  }\n\n  const {\n    options,\n    context,\n    fileHandling\n  } = result;\n\n  if (fileHandling === \"ignored\") {\n    return null;\n  }\n\n  const optionDefaults = {};\n  const {\n    plugins,\n    presets\n  } = options;\n\n  if (!plugins || !presets) {\n    throw new Error(\"Assertion failure - plugins and presets exist\");\n  }\n\n  const presetContext = Object.assign({}, context, {\n    targets: options.targets\n  });\n\n  const toDescriptor = item => {\n    const desc = (0, _item.getItemDescriptor)(item);\n\n    if (!desc) {\n      throw new Error(\"Assertion failure - must be config item\");\n    }\n\n    return desc;\n  };\n\n  const presetsDescriptors = presets.map(toDescriptor);\n  const initialPluginsDescriptors = plugins.map(toDescriptor);\n  const pluginDescriptorsByPass = [[]];\n  const passes = [];\n  const externalDependencies = [];\n  const ignored = yield* enhanceError(context, function* recursePresetDescriptors(rawPresets, pluginDescriptorsPass) {\n    const presets = [];\n\n    for (let i = 0; i < rawPresets.length; i++) {\n      const descriptor = rawPresets[i];\n\n      if (descriptor.options !== false) {\n        try {\n          var preset = yield* loadPresetDescriptor(descriptor, presetContext);\n        } catch (e) {\n          if (e.code === \"BABEL_UNKNOWN_OPTION\") {\n            (0, _options.checkNoUnwrappedItemOptionPairs)(rawPresets, i, \"preset\", e);\n          }\n\n          throw e;\n        }\n\n        externalDependencies.push(preset.externalDependencies);\n\n        if (descriptor.ownPass) {\n          presets.push({\n            preset: preset.chain,\n            pass: []\n          });\n        } else {\n          presets.unshift({\n            preset: preset.chain,\n            pass: pluginDescriptorsPass\n          });\n        }\n      }\n    }\n\n    if (presets.length > 0) {\n      pluginDescriptorsByPass.splice(1, 0, ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass));\n\n      for (const {\n        preset,\n        pass\n      } of presets) {\n        if (!preset) return true;\n        pass.push(...preset.plugins);\n        const ignored = yield* recursePresetDescriptors(preset.presets, pass);\n        if (ignored) return true;\n        preset.options.forEach(opts => {\n          (0, _util.mergeOptions)(optionDefaults, opts);\n        });\n      }\n    }\n  })(presetsDescriptors, pluginDescriptorsByPass[0]);\n  if (ignored) return null;\n  const opts = optionDefaults;\n  (0, _util.mergeOptions)(opts, options);\n  const pluginContext = Object.assign({}, presetContext, {\n    assumptions: (_opts$assumptions = opts.assumptions) != null ? _opts$assumptions : {}\n  });\n  yield* enhanceError(context, function* loadPluginDescriptors() {\n    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);\n\n    for (const descs of pluginDescriptorsByPass) {\n      const pass = [];\n      passes.push(pass);\n\n      for (let i = 0; i < descs.length; i++) {\n        const descriptor = descs[i];\n\n        if (descriptor.options !== false) {\n          try {\n            var plugin = yield* loadPluginDescriptor(descriptor, pluginContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n              (0, _options.checkNoUnwrappedItemOptionPairs)(descs, i, \"plugin\", e);\n            }\n\n            throw e;\n          }\n\n          pass.push(plugin);\n          externalDependencies.push(plugin.externalDependencies);\n        }\n      }\n    }\n  })();\n  opts.plugins = passes[0];\n  opts.presets = passes.slice(1).filter(plugins => plugins.length > 0).map(plugins => ({\n    plugins\n  }));\n  opts.passPerPreset = opts.presets.length > 0;\n  return {\n    options: opts,\n    passes: passes,\n    externalDependencies: (0, _deepArray.finalize)(externalDependencies)\n  };\n});\n\nexports.default = _default;\n\nfunction enhanceError(context, fn) {\n  return function* (arg1, arg2) {\n    try {\n      return yield* fn(arg1, arg2);\n    } catch (e) {\n      if (!/^\\[BABEL\\]/.test(e.message)) {\n        e.message = `[BABEL] ${context.filename || \"unknown\"}: ${e.message}`;\n      }\n\n      throw e;\n    }\n  };\n}\n\nconst makeDescriptorLoader = apiFactory => (0, _caching.makeWeakCache)(function* ({\n  value,\n  options,\n  dirname,\n  alias\n}, cache) {\n  if (options === false) throw new Error(\"Assertion failure\");\n  options = options || {};\n  const externalDependencies = [];\n  let item = value;\n\n  if (typeof value === \"function\") {\n    const factory = (0, _async.maybeAsync)(value, `You appear to be using an async plugin/preset, but Babel has been called synchronously`);\n    const api = Object.assign({}, context, apiFactory(cache, externalDependencies));\n\n    try {\n      item = yield* factory(api, options, dirname);\n    } catch (e) {\n      if (alias) {\n        e.message += ` (While processing: ${JSON.stringify(alias)})`;\n      }\n\n      throw e;\n    }\n  }\n\n  if (!item || typeof item !== \"object\") {\n    throw new Error(\"Plugin/Preset did not return an object.\");\n  }\n\n  if ((0, _async.isThenable)(item)) {\n    yield* [];\n    throw new Error(`You appear to be using a promise as a plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version. ` + `As an alternative, you can prefix the promise with \"await\". ` + `(While processing: ${JSON.stringify(alias)})`);\n  }\n\n  if (externalDependencies.length > 0 && (!cache.configured() || cache.mode() === \"forever\")) {\n    let error = `A plugin/preset has external untracked dependencies ` + `(${externalDependencies[0]}), but the cache `;\n\n    if (!cache.configured()) {\n      error += `has not been configured to be invalidated when the external dependencies change. `;\n    } else {\n      error += ` has been configured to never be invalidated. `;\n    }\n\n    error += `Plugins/presets should configure their cache to be invalidated when the external ` + `dependencies change, for example using \\`api.cache.invalidate(() => ` + `statSync(filepath).mtimeMs)\\` or \\`api.cache.never()\\`\\n` + `(While processing: ${JSON.stringify(alias)})`;\n    throw new Error(error);\n  }\n\n  return {\n    value: item,\n    options,\n    dirname,\n    alias,\n    externalDependencies: (0, _deepArray.finalize)(externalDependencies)\n  };\n});\n\nconst pluginDescriptorLoader = makeDescriptorLoader(_configApi.makePluginAPI);\nconst presetDescriptorLoader = makeDescriptorLoader(_configApi.makePresetAPI);\n\nfunction* loadPluginDescriptor(descriptor, context) {\n  if (descriptor.value instanceof _plugin.default) {\n    if (descriptor.options) {\n      throw new Error(\"Passed options to an existing Plugin instance will not work.\");\n    }\n\n    return descriptor.value;\n  }\n\n  return yield* instantiatePlugin(yield* pluginDescriptorLoader(descriptor, context), context);\n}\n\nconst instantiatePlugin = (0, _caching.makeWeakCache)(function* ({\n  value,\n  options,\n  dirname,\n  alias,\n  externalDependencies\n}, cache) {\n  const pluginObj = (0, _plugins.validatePluginObject)(value);\n  const plugin = Object.assign({}, pluginObj);\n\n  if (plugin.visitor) {\n    plugin.visitor = _traverse().default.explode(Object.assign({}, plugin.visitor));\n  }\n\n  if (plugin.inherits) {\n    const inheritsDescriptor = {\n      name: undefined,\n      alias: `${alias}$inherits`,\n      value: plugin.inherits,\n      options,\n      dirname\n    };\n    const inherits = yield* (0, _async.forwardAsync)(loadPluginDescriptor, run => {\n      return cache.invalidate(data => run(inheritsDescriptor, data));\n    });\n    plugin.pre = chain(inherits.pre, plugin.pre);\n    plugin.post = chain(inherits.post, plugin.post);\n    plugin.manipulateOptions = chain(inherits.manipulateOptions, plugin.manipulateOptions);\n    plugin.visitor = _traverse().default.visitors.merge([inherits.visitor || {}, plugin.visitor || {}]);\n\n    if (inherits.externalDependencies.length > 0) {\n      if (externalDependencies.length === 0) {\n        externalDependencies = inherits.externalDependencies;\n      } else {\n        externalDependencies = (0, _deepArray.finalize)([externalDependencies, inherits.externalDependencies]);\n      }\n    }\n  }\n\n  return new _plugin.default(plugin, options, alias, externalDependencies);\n});\n\nconst validateIfOptionNeedsFilename = (options, descriptor) => {\n  if (options.test || options.include || options.exclude) {\n    const formattedPresetName = descriptor.name ? `\"${descriptor.name}\"` : \"/* your preset */\";\n    throw new Error([`Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`, `\\`\\`\\``, `babel.transformSync(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`, `\\`\\`\\``, `See https://babeljs.io/docs/en/options#filename for more information.`].join(\"\\n\"));\n  }\n};\n\nconst validatePreset = (preset, context, descriptor) => {\n  if (!context.filename) {\n    const {\n      options\n    } = preset;\n    validateIfOptionNeedsFilename(options, descriptor);\n\n    if (options.overrides) {\n      options.overrides.forEach(overrideOptions => validateIfOptionNeedsFilename(overrideOptions, descriptor));\n    }\n  }\n};\n\nfunction* loadPresetDescriptor(descriptor, context) {\n  const preset = instantiatePreset(yield* presetDescriptorLoader(descriptor, context));\n  validatePreset(preset, context, descriptor);\n  return {\n    chain: yield* (0, _configChain.buildPresetChain)(preset, context),\n    externalDependencies: preset.externalDependencies\n  };\n}\n\nconst instantiatePreset = (0, _caching.makeWeakCacheSync)(({\n  value,\n  dirname,\n  alias,\n  externalDependencies\n}) => {\n  return {\n    options: (0, _options.validate)(\"preset\", value),\n    alias,\n    dirname,\n    externalDependencies\n  };\n});\n\nfunction chain(a, b) {\n  const fns = [a, b].filter(Boolean);\n  if (fns.length <= 1) return fns[0];\n  return function (...args) {\n    for (const fn of fns) {\n      fn.apply(this, args);\n    }\n  };\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConfigItem = createConfigItem;\nexports.createConfigItemSync = exports.createConfigItemAsync = void 0;\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _full.default;\n  }\n});\nexports.loadPartialConfigSync = exports.loadPartialConfigAsync = exports.loadPartialConfig = exports.loadOptionsSync = exports.loadOptionsAsync = exports.loadOptions = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _full = require(\"./full\");\n\nvar _partial = require(\"./partial\");\n\nvar _item = require(\"./item\");\n\nconst loadOptionsRunner = _gensync()(function* (opts) {\n  var _config$options;\n\n  const config = yield* (0, _full.default)(opts);\n  return (_config$options = config == null ? void 0 : config.options) != null ? _config$options : null;\n});\n\nconst createConfigItemRunner = _gensync()(_item.createConfigItem);\n\nconst maybeErrback = runner => (argOrCallback, maybeCallback) => {\n  let arg;\n  let callback;\n\n  if (maybeCallback === undefined && typeof argOrCallback === \"function\") {\n    callback = argOrCallback;\n    arg = undefined;\n  } else {\n    callback = maybeCallback;\n    arg = argOrCallback;\n  }\n\n  return callback ? runner.errback(arg, callback) : runner.sync(arg);\n};\n\nconst loadPartialConfig = maybeErrback(_partial.loadPartialConfig);\nexports.loadPartialConfig = loadPartialConfig;\nconst loadPartialConfigSync = _partial.loadPartialConfig.sync;\nexports.loadPartialConfigSync = loadPartialConfigSync;\nconst loadPartialConfigAsync = _partial.loadPartialConfig.async;\nexports.loadPartialConfigAsync = loadPartialConfigAsync;\nconst loadOptions = maybeErrback(loadOptionsRunner);\nexports.loadOptions = loadOptions;\nconst loadOptionsSync = loadOptionsRunner.sync;\nexports.loadOptionsSync = loadOptionsSync;\nconst loadOptionsAsync = loadOptionsRunner.async;\nexports.loadOptionsAsync = loadOptionsAsync;\nconst createConfigItemSync = createConfigItemRunner.sync;\nexports.createConfigItemSync = createConfigItemSync;\nconst createConfigItemAsync = createConfigItemRunner.async;\nexports.createConfigItemAsync = createConfigItemAsync;\n\nfunction createConfigItem(target, options, callback) {\n  if (callback !== undefined) {\n    return createConfigItemRunner.errback(target, options, callback);\n  } else if (typeof options === \"function\") {\n    return createConfigItemRunner.errback(target, undefined, callback);\n  } else {\n    return createConfigItemRunner.sync(target, options);\n  }\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass PluginPass {\n  constructor(file, key, options) {\n    this._map = new Map();\n    this.key = void 0;\n    this.file = void 0;\n    this.opts = void 0;\n    this.cwd = void 0;\n    this.filename = void 0;\n    this.key = key;\n    this.file = file;\n    this.opts = options || {};\n    this.cwd = file.opts.cwd;\n    this.filename = file.opts.filename;\n  }\n\n  set(key, val) {\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  availableHelper(name, versionRange) {\n    return this.file.availableHelper(name, versionRange);\n  }\n\n  addHelper(name) {\n    return this.file.addHelper(name);\n  }\n\n  addImport() {\n    return this.file.addImport();\n  }\n\n  buildCodeFrameError(node, msg, _Error) {\n    return this.file.buildCodeFrameError(node, msg, _Error);\n  }\n\n}\n\nexports.default = PluginPass;\n{\n  PluginPass.prototype.getModuleName = function getModuleName() {\n    return this.file.getModuleName();\n  };\n}\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadBlockHoistPlugin;\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = require(\"../config/plugin\");\n\nlet LOADED_PLUGIN;\n\nfunction loadBlockHoistPlugin() {\n  if (!LOADED_PLUGIN) {\n    LOADED_PLUGIN = new _plugin.default(Object.assign({}, blockHoistPlugin, {\n      visitor: _traverse().default.explode(blockHoistPlugin.visitor)\n    }), {});\n  }\n\n  return LOADED_PLUGIN;\n}\n\nfunction priority(bodyNode) {\n  const priority = bodyNode == null ? void 0 : bodyNode._blockHoist;\n  if (priority == null) return 1;\n  if (priority === true) return 2;\n  return priority;\n}\n\nfunction stableSort(body) {\n  const buckets = Object.create(null);\n\n  for (let i = 0; i < body.length; i++) {\n    const n = body[i];\n    const p = priority(n);\n    const bucket = buckets[p] || (buckets[p] = []);\n    bucket.push(n);\n  }\n\n  const keys = Object.keys(buckets).map(k => +k).sort((a, b) => b - a);\n  let index = 0;\n\n  for (const key of keys) {\n    const bucket = buckets[key];\n\n    for (const n of bucket) {\n      body[index++] = n;\n    }\n  }\n\n  return body;\n}\n\nconst blockHoistPlugin = {\n  name: \"internal.blockHoist\",\n  visitor: {\n    Block: {\n      exit({\n        node\n      }) {\n        const {\n          body\n        } = node;\n        let max = Math.pow(2, 30) - 1;\n        let hasChange = false;\n\n        for (let i = 0; i < body.length; i++) {\n          const n = body[i];\n          const p = priority(n);\n\n          if (p > max) {\n            hasChange = true;\n            break;\n          }\n\n          max = p;\n        }\n\n        if (!hasChange) return;\n        node.body = stableSort(body.slice());\n      }\n\n    }\n  }\n};\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeOptions;\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction normalizeOptions(config) {\n  const {\n    filename,\n    cwd,\n    filenameRelative = typeof filename === \"string\" ? _path().relative(cwd, filename) : \"unknown\",\n    sourceType = \"module\",\n    inputSourceMap,\n    sourceMaps = !!inputSourceMap,\n    sourceRoot = config.options.moduleRoot,\n    sourceFileName = _path().basename(filenameRelative),\n    comments = true,\n    compact = \"auto\"\n  } = config.options;\n  const opts = config.options;\n  const options = Object.assign({}, opts, {\n    parserOpts: Object.assign({\n      sourceType: _path().extname(filenameRelative) === \".mjs\" ? \"module\" : sourceType,\n      sourceFileName: filename,\n      plugins: []\n    }, opts.parserOpts),\n    generatorOpts: Object.assign({\n      filename,\n      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n      retainLines: opts.retainLines,\n      comments,\n      shouldPrintComment: opts.shouldPrintComment,\n      compact,\n      minified: opts.minified,\n      sourceMaps,\n      sourceRoot,\n      sourceFileName\n    }, opts.generatorOpts)\n  });\n\n  for (const plugins of config.passes) {\n    for (const plugin of plugins) {\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(options, options.parserOpts);\n      }\n    }\n  }\n\n  return options;\n}\n\n0 && 0;", "/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict';\nvar fs = require('fs');\nvar path = require('path');\nvar SafeBuffer = require('safe-buffer');\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\n\nfunction decodeBase64(base64) {\n  return (SafeBuffer.Buffer.from(base64, 'base64') || \"\").toString();\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nConverter.prototype.toBase64 = function () {\n  var json = this.toJSON();\n  return (SafeBuffer.Buffer.from(json, 'utf8') || \"\").toString('base64');\n};\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateMissingPluginMessage;\nconst pluginNameMap = {\n  asyncDoExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-async-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-do-expressions\"\n    }\n  },\n  classProperties: {\n    syntax: {\n      name: \"@babel/plugin-syntax-class-properties\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-class-properties\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-class-properties\"\n    }\n  },\n  classPrivateProperties: {\n    syntax: {\n      name: \"@babel/plugin-syntax-class-properties\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-class-properties\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-class-properties\"\n    }\n  },\n  classPrivateMethods: {\n    syntax: {\n      name: \"@babel/plugin-syntax-class-properties\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-private-methods\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-private-methods\"\n    }\n  },\n  classStaticBlock: {\n    syntax: {\n      name: \"@babel/plugin-syntax-class-static-block\",\n      url: \"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-syntax-class-static-block\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-class-static-block\",\n      url: \"https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-proposal-class-static-block\"\n    }\n  },\n  decimal: {\n    syntax: {\n      name: \"@babel/plugin-syntax-decimal\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decimal\"\n    }\n  },\n  decorators: {\n    syntax: {\n      name: \"@babel/plugin-syntax-decorators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decorators\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-decorators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-decorators\"\n    }\n  },\n  doExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-do-expressions\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-do-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-do-expressions\"\n    }\n  },\n  dynamicImport: {\n    syntax: {\n      name: \"@babel/plugin-syntax-dynamic-import\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-dynamic-import\"\n    }\n  },\n  exportDefaultFrom: {\n    syntax: {\n      name: \"@babel/plugin-syntax-export-default-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-default-from\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-export-default-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-export-default-from\"\n    }\n  },\n  exportNamespaceFrom: {\n    syntax: {\n      name: \"@babel/plugin-syntax-export-namespace-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-namespace-from\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-export-namespace-from\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-export-namespace-from\"\n    }\n  },\n  flow: {\n    syntax: {\n      name: \"@babel/plugin-syntax-flow\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-flow\"\n    },\n    transform: {\n      name: \"@babel/preset-flow\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-flow\"\n    }\n  },\n  functionBind: {\n    syntax: {\n      name: \"@babel/plugin-syntax-function-bind\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-bind\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-function-bind\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-bind\"\n    }\n  },\n  functionSent: {\n    syntax: {\n      name: \"@babel/plugin-syntax-function-sent\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-sent\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-function-sent\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-sent\"\n    }\n  },\n  importMeta: {\n    syntax: {\n      name: \"@babel/plugin-syntax-import-meta\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-meta\"\n    }\n  },\n  jsx: {\n    syntax: {\n      name: \"@babel/plugin-syntax-jsx\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx\"\n    },\n    transform: {\n      name: \"@babel/preset-react\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-react\"\n    }\n  },\n  importAssertions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-import-assertions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-assertions\"\n    }\n  },\n  moduleStringNames: {\n    syntax: {\n      name: \"@babel/plugin-syntax-module-string-names\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-module-string-names\"\n    }\n  },\n  numericSeparator: {\n    syntax: {\n      name: \"@babel/plugin-syntax-numeric-separator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-numeric-separator\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-numeric-separator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-numeric-separator\"\n    }\n  },\n  optionalChaining: {\n    syntax: {\n      name: \"@babel/plugin-syntax-optional-chaining\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-chaining\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-optional-chaining\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-optional-chaining\"\n    }\n  },\n  pipelineOperator: {\n    syntax: {\n      name: \"@babel/plugin-syntax-pipeline-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-pipeline-operator\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-pipeline-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-pipeline-operator\"\n    }\n  },\n  privateIn: {\n    syntax: {\n      name: \"@babel/plugin-syntax-private-property-in-object\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-private-property-in-object\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-private-property-in-object\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-private-property-in-object\"\n    }\n  },\n  recordAndTuple: {\n    syntax: {\n      name: \"@babel/plugin-syntax-record-and-tuple\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-record-and-tuple\"\n    }\n  },\n  regexpUnicodeSets: {\n    syntax: {\n      name: \"@babel/plugin-syntax-unicode-sets-regex\",\n      url: \"https://github.com/babel/babel/blob/main/packages/babel-plugin-syntax-unicode-sets-regex/README.md\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-unicode-sets-regex\",\n      url: \"https://github.com/babel/babel/blob/main/packages/babel-plugin-proposalunicode-sets-regex/README.md\"\n    }\n  },\n  throwExpressions: {\n    syntax: {\n      name: \"@babel/plugin-syntax-throw-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-throw-expressions\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-throw-expressions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-throw-expressions\"\n    }\n  },\n  typescript: {\n    syntax: {\n      name: \"@babel/plugin-syntax-typescript\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-typescript\"\n    },\n    transform: {\n      name: \"@babel/preset-typescript\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-preset-typescript\"\n    }\n  },\n  asyncGenerators: {\n    syntax: {\n      name: \"@babel/plugin-syntax-async-generators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-generators\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-async-generator-functions\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-async-generator-functions\"\n    }\n  },\n  logicalAssignment: {\n    syntax: {\n      name: \"@babel/plugin-syntax-logical-assignment-operators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-logical-assignment-operators\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-logical-assignment-operators\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-logical-assignment-operators\"\n    }\n  },\n  nullishCoalescingOperator: {\n    syntax: {\n      name: \"@babel/plugin-syntax-nullish-coalescing-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-nullish-coalescing-operator\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-nullish-coalescing-operator\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-nullish-coalescing-opearator\"\n    }\n  },\n  objectRestSpread: {\n    syntax: {\n      name: \"@babel/plugin-syntax-object-rest-spread\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-object-rest-spread\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-object-rest-spread\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-object-rest-spread\"\n    }\n  },\n  optionalCatchBinding: {\n    syntax: {\n      name: \"@babel/plugin-syntax-optional-catch-binding\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-catch-binding\"\n    },\n    transform: {\n      name: \"@babel/plugin-proposal-optional-catch-binding\",\n      url: \"https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-optional-catch-binding\"\n    }\n  }\n};\npluginNameMap.privateIn.syntax = pluginNameMap.privateIn.transform;\n\nconst getNameURLCombination = ({\n  name,\n  url\n}) => `${name} (${url})`;\n\nfunction generateMissingPluginMessage(missingPluginName, loc, codeFrame) {\n  let helpMessage = `Support for the experimental syntax '${missingPluginName}' isn't currently enabled ` + `(${loc.line}:${loc.column + 1}):\\n\\n` + codeFrame;\n  const pluginInfo = pluginNameMap[missingPluginName];\n\n  if (pluginInfo) {\n    const {\n      syntax: syntaxPlugin,\n      transform: transformPlugin\n    } = pluginInfo;\n\n    if (syntaxPlugin) {\n      const syntaxPluginInfo = getNameURLCombination(syntaxPlugin);\n\n      if (transformPlugin) {\n        const transformPluginInfo = getNameURLCombination(transformPlugin);\n        const sectionType = transformPlugin.name.startsWith(\"@babel/plugin\") ? \"plugins\" : \"presets\";\n        helpMessage += `\\n\\nAdd ${transformPluginInfo} to the '${sectionType}' section of your Babel config to enable transformation.\nIf you want to leave it as-is, add ${syntaxPluginInfo} to the 'plugins' section to enable parsing.`;\n      } else {\n        helpMessage += `\\n\\nAdd ${syntaxPluginInfo} to the 'plugins' section of your Babel config ` + `to enable parsing.`;\n      }\n    }\n  }\n\n  return helpMessage;\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _missingPluginHelper = require(\"./util/missing-plugin-helper\");\n\nfunction* parser(pluginPasses, {\n  parserOpts,\n  highlightCode = true,\n  filename = \"unknown\"\n}, code) {\n  try {\n    const results = [];\n\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      yield* [];\n\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n\n      return results[0];\n    }\n\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n\n    const {\n      loc,\n      missingPlugin\n    } = err;\n\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction deepClone(value, cache) {\n  if (value !== null) {\n    if (cache.has(value)) return cache.get(value);\n    let cloned;\n\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] = typeof value[i] !== \"object\" ? value[i] : deepClone(value[i], cache);\n      }\n    } else {\n      cloned = {};\n      const keys = Object.keys(value);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] = typeof value[key] !== \"object\" ? value[key] : deepClone(value[key], cache);\n      }\n    }\n\n    cache.set(value, cloned);\n    return cloned;\n  }\n\n  return value;\n}\n\nfunction _default(value) {\n  if (typeof value !== \"object\") return value;\n  return deepClone(value, new Map());\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeFile;\n\nfunction _fs() {\n  const data = require(\"fs\");\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = require(\"debug\");\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _convertSourceMap() {\n  const data = require(\"convert-source-map\");\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = require(\"./file/file\");\n\nvar _parser = require(\"../parser\");\n\nvar _cloneDeep = require(\"./util/clone-deep\");\n\nconst {\n  file,\n  traverseFast\n} = _t();\n\nconst debug = _debug()(\"babel:transform:file\");\n\nconst LARGE_INPUT_SOURCEMAP_THRESHOLD = 3000000;\n\nfunction* normalizeFile(pluginPasses, options, code, ast) {\n  code = `${code || \"\"}`;\n\n  if (ast) {\n    if (ast.type === \"Program\") {\n      ast = file(ast, [], []);\n    } else if (ast.type !== \"File\") {\n      throw new Error(\"AST root must be a Program or File node\");\n    }\n\n    if (options.cloneInputAst) {\n      ast = (0, _cloneDeep.default)(ast);\n    }\n  } else {\n    ast = yield* (0, _parser.default)(pluginPasses, options, code);\n  }\n\n  let inputMap = null;\n\n  if (options.inputSourceMap !== false) {\n    if (typeof options.inputSourceMap === \"object\") {\n      inputMap = _convertSourceMap().fromObject(options.inputSourceMap);\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);\n\n      if (lastComment) {\n        try {\n          inputMap = _convertSourceMap().fromComment(lastComment);\n        } catch (err) {\n          debug(\"discarding unknown inline input sourcemap\", err);\n        }\n      }\n    }\n\n    if (!inputMap) {\n      const lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);\n\n      if (typeof options.filename === \"string\" && lastComment) {\n        try {\n          const match = EXTERNAL_SOURCEMAP_REGEX.exec(lastComment);\n\n          const inputMapContent = _fs().readFileSync(_path().resolve(_path().dirname(options.filename), match[1]));\n\n          if (inputMapContent.length > LARGE_INPUT_SOURCEMAP_THRESHOLD) {\n            debug(\"skip merging input map > 1 MB\");\n          } else {\n            inputMap = _convertSourceMap().fromJSON(inputMapContent);\n          }\n        } catch (err) {\n          debug(\"discarding unknown file input sourcemap\", err);\n        }\n      } else if (lastComment) {\n        debug(\"discarding un-loadable file input sourcemap\");\n      }\n    }\n  }\n\n  return new _file.default(options, {\n    code,\n    ast: ast,\n    inputMap\n  });\n}\n\nconst INLINE_SOURCEMAP_REGEX = /^[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/;\nconst EXTERNAL_SOURCEMAP_REGEX = /^[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+)[ \\t]*$/;\n\nfunction extractCommentsFromList(regex, comments, lastComment) {\n  if (comments) {\n    comments = comments.filter(({\n      value\n    }) => {\n      if (regex.test(value)) {\n        lastComment = value;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return [comments, lastComment];\n}\n\nfunction extractComments(regex, ast) {\n  let lastComment = null;\n  traverseFast(ast, node => {\n    [node.leadingComments, lastComment] = extractCommentsFromList(regex, node.leadingComments, lastComment);\n    [node.innerComments, lastComment] = extractCommentsFromList(regex, node.innerComments, lastComment);\n    [node.trailingComments, lastComment] = extractCommentsFromList(regex, node.trailingComments, lastComment);\n  });\n  return lastComment;\n}\n\n0 && 0;", "import { SetArray, put } from '@jridgewell/set-array';\nimport { encode } from '@jridgewell/sourcemap-codec';\n\nimport type { SourceMapSegment } from './sourcemap-segment';\nimport type { DecodedSourceMap, EncodedSourceMap, Pos, Mapping } from './types';\n\nexport type { DecodedSourceMap, EncodedSourceMap, Mapping };\n\nexport type Options = {\n  file?: string | null;\n  sourceRoot?: string | null;\n};\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nexport let addSegment: {\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source?: null,\n    sourceLine?: null,\n    sourceColumn?: null,\n    name?: null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name?: null,\n  ): void;\n  (\n    map: GenMapping,\n    genLine: number,\n    genColumn: number,\n    source: string,\n    sourceLine: number,\n    sourceColumn: number,\n    name: string,\n  ): void;\n};\n\n/**\n * A high-level API to associate a generated position with an original source position. Line is\n * 1-based, but column is 0-based, due to legacy behavior in `source-map` library.\n */\nexport let addMapping: {\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source?: null;\n      original?: null;\n      name?: null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name?: null;\n    },\n  ): void;\n  (\n    map: GenMapping,\n    mapping: {\n      generated: Pos;\n      source: string;\n      original: Pos;\n      name: string;\n    },\n  ): void;\n};\n\n/**\n * Adds/removes the content of the source file to the source map.\n */\nexport let setSourceContent: (map: GenMapping, source: string, content: string | null) => void;\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let decodedMap: (map: GenMapping) => DecodedSourceMap;\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let encodedMap: (map: GenMapping) => EncodedSourceMap;\n\n/**\n * Returns an array of high-level mapping objects for every recorded segment, which could then be\n * passed to the `source-map` library.\n */\nexport let allMappings: (map: GenMapping) => Mapping[];\n\n/**\n * Provides the state to generate a sourcemap.\n */\nexport class GenMapping {\n  private _names = new SetArray();\n  private _sources = new SetArray();\n  private _sourcesContent: (string | null)[] = [];\n  private _mappings: SourceMapSegment[][] = [];\n  declare file: string | null | undefined;\n  declare sourceRoot: string | null | undefined;\n\n  constructor({ file, sourceRoot }: Options = {}) {\n    this.file = file;\n    this.sourceRoot = sourceRoot;\n  }\n\n  static {\n    addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name) => {\n      const {\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n\n      const line = getLine(mappings, genLine);\n      if (source == null) {\n        const seg: SourceMapSegment = [genColumn];\n        const index = getColumnIndex(line, genColumn, seg);\n        return insert(line, index, seg);\n      }\n\n      // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source\n      // isn't nullish.\n      assert<number>(sourceLine);\n      assert<number>(sourceColumn);\n      const sourcesIndex = put(sources, source);\n      const seg: SourceMapSegment = name\n        ? [genColumn, sourcesIndex, sourceLine, sourceColumn, put(names, name)]\n        : [genColumn, sourcesIndex, sourceLine, sourceColumn];\n\n      const index = getColumnIndex(line, genColumn, seg);\n      if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = null;\n      insert(line, index, seg);\n    };\n\n    addMapping = (map, mapping) => {\n      const { generated, source, original, name } = mapping;\n      return (addSegment as any)(\n        map,\n        generated.line - 1,\n        generated.column,\n        source,\n        original == null ? undefined : original.line - 1,\n        original?.column,\n        name,\n      );\n    };\n\n    setSourceContent = (map, source, content) => {\n      const { _sources: sources, _sourcesContent: sourcesContent } = map;\n      sourcesContent[put(sources, source)] = content;\n    };\n\n    decodedMap = (map) => {\n      const {\n        file,\n        sourceRoot,\n        _mappings: mappings,\n        _sources: sources,\n        _sourcesContent: sourcesContent,\n        _names: names,\n      } = map;\n\n      return {\n        version: 3,\n        file,\n        names: names.array,\n        sourceRoot: sourceRoot || undefined,\n        sources: sources.array,\n        sourcesContent,\n        mappings,\n      };\n    };\n\n    encodedMap = (map) => {\n      const decoded = decodedMap(map);\n      return {\n        ...decoded,\n        mappings: encode(decoded.mappings as SourceMapSegment[][]),\n      };\n    };\n\n    allMappings = (map) => {\n      const out: Mapping[] = [];\n      const { _mappings: mappings, _sources: sources, _names: names } = map;\n\n      for (let i = 0; i < mappings.length; i++) {\n        const line = mappings[i];\n        for (let j = 0; j < line.length; j++) {\n          const seg = line[j];\n\n          const generated = { line: i + 1, column: seg[0] };\n          let source: string | undefined = undefined;\n          let original: Pos | undefined = undefined;\n          let name: string | undefined = undefined;\n\n          if (seg.length !== 1) {\n            source = sources.array[seg[1]];\n            original = { line: seg[2] + 1, column: seg[3] };\n\n            if (seg.length === 5) name = names.array[seg[4]];\n          }\n\n          out.push({ generated, source, original, name } as Mapping);\n        }\n      }\n\n      return out;\n    };\n  }\n}\n\nfunction assert<T>(_val: unknown): asserts _val is T {\n  // noop.\n}\n\nfunction getLine(mappings: SourceMapSegment[][], index: number): SourceMapSegment[] {\n  for (let i = mappings.length; i <= index; i++) {\n    mappings[i] = [];\n  }\n  return mappings[index];\n}\n\nfunction getColumnIndex(line: SourceMapSegment[], column: number, seg: SourceMapSegment): number {\n  let index = line.length;\n  for (let i = index - 1; i >= 0; i--, index--) {\n    const current = line[i];\n    const col = current[0];\n    if (col > column) continue;\n    if (col < column) break;\n\n    const cmp = compare(current, seg);\n    if (cmp === 0) return index;\n    if (cmp < 0) break;\n  }\n  return index;\n}\n\nfunction compare(a: SourceMapSegment, b: SourceMapSegment): number {\n  let cmp = compareNum(a.length, b.length);\n  if (cmp !== 0) return cmp;\n\n  // We've already checked genColumn\n  if (a.length === 1) return 0;\n\n  cmp = compareNum(a[1], b[1]!);\n  if (cmp !== 0) return cmp;\n  cmp = compareNum(a[2], b[2]!);\n  if (cmp !== 0) return cmp;\n  cmp = compareNum(a[3], b[3]!);\n  if (cmp !== 0) return cmp;\n\n  if (a.length === 4) return 0;\n  return compareNum(a[4], b[4]!);\n}\n\nfunction compareNum(a: number, b: number): number {\n  return a - b;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  if (index === -1) return;\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n", null, null, null, null, "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSourceMap;\n\nfunction _remapping() {\n  const data = require(\"@ampproject/remapping\");\n\n  _remapping = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction mergeSourceMap(inputMap, map, sourceFileName) {\n  const source = sourceFileName.replace(/\\\\/g, \"/\");\n  let found = false;\n\n  const result = _remapping()(rootless(map), (s, ctx) => {\n    if (s === source && !found) {\n      found = true;\n      ctx.source = \"\";\n      return rootless(inputMap);\n    }\n\n    return null;\n  });\n\n  if (typeof inputMap.sourceRoot === \"string\") {\n    result.sourceRoot = inputMap.sourceRoot;\n  }\n\n  return Object.assign({}, result);\n}\n\nfunction rootless(map) {\n  return Object.assign({}, map, {\n    sourceRoot: null\n  });\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateCode;\n\nfunction _convertSourceMap() {\n  const data = require(\"convert-source-map\");\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = require(\"@babel/generator\");\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _mergeMap = require(\"./merge-map\");\n\nfunction generateCode(pluginPasses, file) {\n  const {\n    opts,\n    ast,\n    code,\n    inputMap\n  } = file;\n  const {\n    generatorOpts\n  } = opts;\n  const results = [];\n\n  for (const plugins of pluginPasses) {\n    for (const plugin of plugins) {\n      const {\n        generatorOverride\n      } = plugin;\n\n      if (generatorOverride) {\n        const result = generatorOverride(ast, generatorOpts, code, _generator().default);\n        if (result !== undefined) results.push(result);\n      }\n    }\n  }\n\n  let result;\n\n  if (results.length === 0) {\n    result = (0, _generator().default)(ast, generatorOpts, code);\n  } else if (results.length === 1) {\n    result = results[0];\n\n    if (typeof result.then === \"function\") {\n      throw new Error(`You appear to be using an async codegen plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version.`);\n    }\n  } else {\n    throw new Error(\"More than one plugin attempted to override codegen.\");\n  }\n\n  let {\n    code: outputCode,\n    decodedMap: outputMap = result.map\n  } = result;\n\n  if (outputMap) {\n    if (inputMap) {\n      outputMap = (0, _mergeMap.default)(inputMap.toObject(), outputMap, generatorOpts.sourceFileName);\n    } else {\n      outputMap = result.map;\n    }\n  }\n\n  if (opts.sourceMaps === \"inline\" || opts.sourceMaps === \"both\") {\n    outputCode += \"\\n\" + _convertSourceMap().fromObject(outputMap).toComment();\n  }\n\n  if (opts.sourceMaps === \"inline\") {\n    outputMap = null;\n  }\n\n  return {\n    outputCode,\n    outputMap\n  };\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluginPass = require(\"./plugin-pass\");\n\nvar _blockHoistPlugin = require(\"./block-hoist-plugin\");\n\nvar _normalizeOpts = require(\"./normalize-opts\");\n\nvar _normalizeFile = require(\"./normalize-file\");\n\nvar _generate = require(\"./file/generate\");\n\nvar _deepArray = require(\"../config/helpers/deep-array\");\n\nfunction* run(config, code, ast) {\n  const file = yield* (0, _normalizeFile.default)(config.passes, (0, _normalizeOpts.default)(config), code, ast);\n  const opts = file.opts;\n\n  try {\n    yield* transformFile(file, config.passes);\n  } catch (e) {\n    var _opts$filename;\n\n    e.message = `${(_opts$filename = opts.filename) != null ? _opts$filename : \"unknown\"}: ${e.message}`;\n\n    if (!e.code) {\n      e.code = \"BABEL_TRANSFORM_ERROR\";\n    }\n\n    throw e;\n  }\n\n  let outputCode, outputMap;\n\n  try {\n    if (opts.code !== false) {\n      ({\n        outputCode,\n        outputMap\n      } = (0, _generate.default)(config.passes, file));\n    }\n  } catch (e) {\n    var _opts$filename2;\n\n    e.message = `${(_opts$filename2 = opts.filename) != null ? _opts$filename2 : \"unknown\"}: ${e.message}`;\n\n    if (!e.code) {\n      e.code = \"BABEL_GENERATE_ERROR\";\n    }\n\n    throw e;\n  }\n\n  return {\n    metadata: file.metadata,\n    options: opts,\n    ast: opts.ast === true ? file.ast : null,\n    code: outputCode === undefined ? null : outputCode,\n    map: outputMap === undefined ? null : outputMap,\n    sourceType: file.ast.program.sourceType,\n    externalDependencies: (0, _deepArray.flattenToSet)(config.externalDependencies)\n  };\n}\n\nfunction* transformFile(file, pluginPasses) {\n  for (const pluginPairs of pluginPasses) {\n    const passPairs = [];\n    const passes = [];\n    const visitors = [];\n\n    for (const plugin of pluginPairs.concat([(0, _blockHoistPlugin.default)()])) {\n      const pass = new _pluginPass.default(file, plugin.key, plugin.options);\n      passPairs.push([plugin, pass]);\n      passes.push(pass);\n      visitors.push(plugin.visitor);\n    }\n\n    for (const [plugin, pass] of passPairs) {\n      const fn = plugin.pre;\n\n      if (fn) {\n        const result = fn.call(pass, file);\n        yield* [];\n\n        if (isThenable(result)) {\n          throw new Error(`You appear to be using an plugin with an async .pre, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n        }\n      }\n    }\n\n    const visitor = _traverse().default.visitors.merge(visitors, passes, file.opts.wrapPluginVisitorMethod);\n\n    (0, _traverse().default)(file.ast, visitor, file.scope);\n\n    for (const [plugin, pass] of passPairs) {\n      const fn = plugin.post;\n\n      if (fn) {\n        const result = fn.call(pass, file);\n        yield* [];\n\n        if (isThenable(result)) {\n          throw new Error(`You appear to be using an plugin with an async .post, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n        }\n      }\n    }\n  }\n}\n\nfunction isThenable(val) {\n  return !!val && (typeof val === \"object\" || typeof val === \"function\") && !!val.then && typeof val.then === \"function\";\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformSync = exports.transformAsync = exports.transform = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nconst transformRunner = _gensync()(function* transform(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  return yield* (0, _transformation.run)(config, code);\n});\n\nconst transform = function transform(code, optsOrCallback, maybeCallback) {\n  let opts;\n  let callback;\n\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n\n  if (callback === undefined) {\n    {\n      return transformRunner.sync(code, opts);\n    }\n  }\n\n  transformRunner.errback(code, opts, callback);\n};\n\nexports.transform = transform;\nconst transformSync = transformRunner.sync;\nexports.transformSync = transformSync;\nconst transformAsync = transformRunner.async;\nexports.transformAsync = transformAsync;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFile = void 0;\nexports.transformFileAsync = transformFileAsync;\nexports.transformFileSync = transformFileSync;\n\nconst transformFile = function transformFile(filename, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n  }\n\n  callback(new Error(\"Transforming files is not supported in browsers\"), null);\n};\n\nexports.transformFile = transformFile;\n\nfunction transformFileSync() {\n  throw new Error(\"Transforming files is not supported in browsers\");\n}\n\nfunction transformFileAsync() {\n  return Promise.reject(new Error(\"Transforming files is not supported in browsers\"));\n}\n\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFromAstSync = exports.transformFromAstAsync = exports.transformFromAst = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nconst transformFromAstRunner = _gensync()(function* (ast, code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  if (!ast) throw new Error(\"No AST given\");\n  return yield* (0, _transformation.run)(config, code, ast);\n});\n\nconst transformFromAst = function transformFromAst(ast, code, optsOrCallback, maybeCallback) {\n  let opts;\n  let callback;\n\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n\n  if (callback === undefined) {\n    {\n      return transformFromAstRunner.sync(ast, code, opts);\n    }\n  }\n\n  transformFromAstRunner.errback(ast, code, opts, callback);\n};\n\nexports.transformFromAst = transformFromAst;\nconst transformFromAstSync = transformFromAstRunner.sync;\nexports.transformFromAstSync = transformFromAstSync;\nconst transformFromAstAsync = transformFromAstRunner.async;\nexports.transformFromAstAsync = transformFromAstAsync;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseSync = exports.parseAsync = exports.parse = void 0;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _parser = require(\"./parser\");\n\nvar _normalizeOpts = require(\"./transformation/normalize-opts\");\n\nconst parseRunner = _gensync()(function* parse(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* (0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code);\n});\n\nconst parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    {\n      return parseRunner.sync(code, opts);\n    }\n  }\n\n  parseRunner.errback(code, opts, callback);\n};\n\nexports.parse = parse;\nconst parseSync = parseRunner.sync;\nexports.parseSync = parseSync;\nconst parseAsync = parseRunner.async;\nexports.parseAsync = parseAsync;\n0 && 0;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_EXTENSIONS = void 0;\nObject.defineProperty(exports, \"File\", {\n  enumerable: true,\n  get: function () {\n    return _file.default;\n  }\n});\nexports.OptionManager = void 0;\nexports.Plugin = Plugin;\nObject.defineProperty(exports, \"buildExternalHelpers\", {\n  enumerable: true,\n  get: function () {\n    return _buildExternalHelpers.default;\n  }\n});\nObject.defineProperty(exports, \"createConfigItem\", {\n  enumerable: true,\n  get: function () {\n    return _config.createConfigItem;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemAsync\", {\n  enumerable: true,\n  get: function () {\n    return _config.createConfigItemAsync;\n  }\n});\nObject.defineProperty(exports, \"createConfigItemSync\", {\n  enumerable: true,\n  get: function () {\n    return _config.createConfigItemSync;\n  }\n});\nObject.defineProperty(exports, \"getEnv\", {\n  enumerable: true,\n  get: function () {\n    return _environment.getEnv;\n  }\n});\nObject.defineProperty(exports, \"loadOptions\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadOptions;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsAsync\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadOptionsAsync;\n  }\n});\nObject.defineProperty(exports, \"loadOptionsSync\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadOptionsSync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfig\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadPartialConfig;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigAsync\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadPartialConfigAsync;\n  }\n});\nObject.defineProperty(exports, \"loadPartialConfigSync\", {\n  enumerable: true,\n  get: function () {\n    return _config.loadPartialConfigSync;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parse;\n  }\n});\nObject.defineProperty(exports, \"parseAsync\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parseAsync;\n  }\n});\nObject.defineProperty(exports, \"parseSync\", {\n  enumerable: true,\n  get: function () {\n    return _parse.parseSync;\n  }\n});\nObject.defineProperty(exports, \"resolvePlugin\", {\n  enumerable: true,\n  get: function () {\n    return _files.resolvePlugin;\n  }\n});\nObject.defineProperty(exports, \"resolvePreset\", {\n  enumerable: true,\n  get: function () {\n    return _files.resolvePreset;\n  }\n});\nObject.defineProperty((0, exports), \"template\", {\n  enumerable: true,\n  get: function () {\n    return _template().default;\n  }\n});\nObject.defineProperty((0, exports), \"tokTypes\", {\n  enumerable: true,\n  get: function () {\n    return _parser().tokTypes;\n  }\n});\nObject.defineProperty(exports, \"transform\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transform;\n  }\n});\nObject.defineProperty(exports, \"transformAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transformAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFile\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFile;\n  }\n});\nObject.defineProperty(exports, \"transformFileAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFileAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFileSync\", {\n  enumerable: true,\n  get: function () {\n    return _transformFile.transformFileSync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAst\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAst;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstAsync\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAstAsync;\n  }\n});\nObject.defineProperty(exports, \"transformFromAstSync\", {\n  enumerable: true,\n  get: function () {\n    return _transformAst.transformFromAstSync;\n  }\n});\nObject.defineProperty(exports, \"transformSync\", {\n  enumerable: true,\n  get: function () {\n    return _transform.transformSync;\n  }\n});\nObject.defineProperty((0, exports), \"traverse\", {\n  enumerable: true,\n  get: function () {\n    return _traverse().default;\n  }\n});\nexports.version = exports.types = void 0;\n\nvar _file = require(\"./transformation/file/file\");\n\nvar _buildExternalHelpers = require(\"./tools/build-external-helpers\");\n\nvar _files = require(\"./config/files\");\n\nvar _environment = require(\"./config/helpers/environment\");\n\nfunction _types() {\n  const data = require(\"@babel/types\");\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n\nObject.defineProperty((0, exports), \"types\", {\n  enumerable: true,\n  get: function () {\n    return _types();\n  }\n});\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = require(\"@babel/template\");\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transform = require(\"./transform\");\n\nvar _transformFile = require(\"./transform-file\");\n\nvar _transformAst = require(\"./transform-ast\");\n\nvar _parse = require(\"./parse\");\n\nconst version = \"7.18.10\";\nexports.version = version;\nconst DEFAULT_EXTENSIONS = Object.freeze([\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".cjs\"]);\nexports.DEFAULT_EXTENSIONS = DEFAULT_EXTENSIONS;\n\nclass OptionManager {\n  init(opts) {\n    return (0, _config.loadOptionsSync)(opts);\n  }\n\n}\n\nexports.OptionManager = OptionManager;\n\nfunction Plugin(alias) {\n  throw new Error(`The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`);\n}\n\n0 && (exports.types = exports.traverse = exports.tokTypes = exports.template = 0);", "import path from 'node:path';\nimport * as babel from '@babel/core';\nimport { createFilter, normalizePath } from 'vite';\nimport MagicString from 'magic-string';\nimport fs from 'node:fs';\nimport { createRequire } from 'node:module';\n\nconst runtimePublicPath = \"/@react-refresh\";\nconst _require = createRequire(import.meta.url);\nconst reactRefreshDir = path.dirname(_require.resolve(\"react-refresh/package.json\"));\nconst runtimeFilePath = path.join(reactRefreshDir, \"cjs/react-refresh-runtime.development.js\");\nconst runtimeCode = `\nconst exports = {}\n${fs.readFileSync(runtimeFilePath, \"utf-8\")}\nfunction debounce(fn, delay) {\n  let handle\n  return () => {\n    clearTimeout(handle)\n    handle = setTimeout(fn, delay)\n  }\n}\nexports.performReactRefresh = debounce(exports.performReactRefresh, 16)\nexport default exports\n`;\nconst preambleCode = `\nimport RefreshRuntime from \"__BASE__${runtimePublicPath.slice(1)}\"\nRefreshRuntime.injectIntoGlobalHook(window)\nwindow.$RefreshReg$ = () => {}\nwindow.$RefreshSig$ = () => (type) => type\nwindow.__vite_plugin_react_preamble_installed__ = true\n`;\nconst header = `\nimport RefreshRuntime from \"${runtimePublicPath}\";\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot) {\n  if (!window.__vite_plugin_react_preamble_installed__) {\n    throw new Error(\n      \"@vitejs/plugin-react can't detect preamble. Something is wrong. \" +\n      \"See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\"\n    );\n  }\n\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    RefreshRuntime.register(type, __SOURCE__ + \" \" + id)\n  };\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}`.replace(/[\\n]+/gm, \"\");\nconst footer = `\nif (import.meta.hot) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n\n  __ACCEPT__\n  if (!window.__vite_plugin_react_timeout) {\n    window.__vite_plugin_react_timeout = setTimeout(() => {\n      window.__vite_plugin_react_timeout = 0;\n      RefreshRuntime.performReactRefresh();\n    }, 30);\n  }\n}`;\nfunction addRefreshWrapper(code, id, accept) {\n  return header.replace(\"__SOURCE__\", JSON.stringify(id)) + code + footer.replace(\"__ACCEPT__\", accept ? \"import.meta.hot.accept();\" : \"\");\n}\nfunction isRefreshBoundary(ast) {\n  return ast.program.body.every((node) => {\n    if (node.type !== \"ExportNamedDeclaration\") {\n      return true;\n    }\n    const { declaration, specifiers } = node;\n    if (declaration) {\n      if (declaration.type === \"VariableDeclaration\") {\n        return declaration.declarations.every((variable) => isComponentLikeIdentifier(variable.id));\n      }\n      if (declaration.type === \"FunctionDeclaration\") {\n        return !!declaration.id && isComponentLikeIdentifier(declaration.id);\n      }\n    }\n    return specifiers.every((spec) => {\n      return isComponentLikeIdentifier(spec.exported);\n    });\n  });\n}\nfunction isComponentLikeIdentifier(node) {\n  return node.type === \"Identifier\" && isComponentLikeName(node.name);\n}\nfunction isComponentLikeName(name) {\n  return typeof name === \"string\" && name[0] >= \"A\" && name[0] <= \"Z\";\n}\n\nfunction babelImportToRequire({ types: t }) {\n  return {\n    visitor: {\n      ImportDeclaration(path) {\n        const decl = path.node;\n        const spec = decl.specifiers[0];\n        path.replaceWith(t.variableDeclaration(\"var\", [\n          t.variableDeclarator(spec.local, t.memberExpression(t.callExpression(t.identifier(\"require\"), [decl.source]), spec.imported))\n        ]));\n      }\n    }\n  };\n}\n\nlet babelRestoreJSX;\nconst jsxNotFound = [null, false];\nasync function getBabelRestoreJSX() {\n  if (!babelRestoreJSX)\n    babelRestoreJSX = import('./chunks/babel-restore-jsx.mjs').then((r) => {\n      const fn = r.default;\n      if (\"default\" in fn)\n        return fn.default;\n      return fn;\n    });\n  return babelRestoreJSX;\n}\nasync function restoreJSX(babel, code, filename) {\n  const [reactAlias, isCommonJS] = parseReactAlias(code);\n  if (!reactAlias) {\n    return jsxNotFound;\n  }\n  let hasCompiledJsx = false;\n  const fragmentPattern = `\\\\b${reactAlias}\\\\.Fragment\\\\b`;\n  const createElementPattern = `\\\\b${reactAlias}\\\\.createElement\\\\(\\\\s*([A-Z\"'][\\\\w$.]*[\"']?)`;\n  code = code.replace(new RegExp(fragmentPattern, \"g\"), () => {\n    hasCompiledJsx = true;\n    return \"React.Fragment\";\n  }).replace(new RegExp(createElementPattern, \"g\"), (original, component) => {\n    if (/^[a-z][\\w$]*$/.test(component)) {\n      return original;\n    }\n    hasCompiledJsx = true;\n    return \"React.createElement(\" + (component === \"Fragment\" ? \"React.Fragment\" : component);\n  });\n  if (!hasCompiledJsx) {\n    return jsxNotFound;\n  }\n  const result = await babel.transformAsync(code, {\n    babelrc: false,\n    configFile: false,\n    ast: true,\n    code: false,\n    filename,\n    parserOpts: {\n      plugins: [\"jsx\"]\n    },\n    plugins: [await getBabelRestoreJSX()]\n  });\n  return [result?.ast, isCommonJS];\n}\nfunction parseReactAlias(code) {\n  let match = code.match(/\\b(var|let|const)\\s+([^=\\{\\s]+)\\s*=\\s*require\\([\"']react[\"']\\)/);\n  if (match) {\n    return [match[2], true];\n  }\n  match = code.match(/^import\\s+(?:\\*\\s+as\\s+)?(\\w+).+?\\bfrom\\s*[\"']react[\"']/m);\n  if (match) {\n    return [match[1], false];\n  }\n  return [void 0, false];\n}\n\nconst prependReactImportCode = \"import React from 'react'; \";\nfunction viteReact(opts = {}) {\n  let devBase = \"/\";\n  let resolvedCacheDir;\n  let filter = createFilter(opts.include, opts.exclude);\n  let needHiresSourcemap = false;\n  let isProduction = true;\n  let projectRoot = process.cwd();\n  let skipFastRefresh = opts.fastRefresh === false;\n  let skipReactImport = false;\n  let runPluginOverrides = (options, context) => false;\n  let staticBabelOptions;\n  const useAutomaticRuntime = opts.jsxRuntime !== \"classic\";\n  const importReactRE = /(^|\\n)import\\s+(\\*\\s+as\\s+)?React(,|\\s+)/;\n  const fileExtensionRE = /\\.[^\\/\\s\\?]+$/;\n  const viteBabel = {\n    name: \"vite:react-babel\",\n    enforce: \"pre\",\n    config() {\n      if (opts.jsxRuntime === \"classic\") {\n        return {\n          esbuild: {\n            logOverride: {\n              \"this-is-undefined-in-esm\": \"silent\"\n            }\n          }\n        };\n      }\n    },\n    configResolved(config) {\n      devBase = config.base;\n      projectRoot = config.root;\n      resolvedCacheDir = normalizePath(path.resolve(config.cacheDir));\n      filter = createFilter(opts.include, opts.exclude, {\n        resolve: projectRoot\n      });\n      needHiresSourcemap = config.command === \"build\" && !!config.build.sourcemap;\n      isProduction = config.isProduction;\n      skipFastRefresh || (skipFastRefresh = isProduction || config.command === \"build\");\n      const jsxInject = config.esbuild && config.esbuild.jsxInject;\n      if (jsxInject && importReactRE.test(jsxInject)) {\n        skipReactImport = true;\n        config.logger.warn(\"[@vitejs/plugin-react] This plugin imports React for you automatically, so you can stop using `esbuild.jsxInject` for that purpose.\");\n      }\n      config.plugins.forEach((plugin) => {\n        const hasConflict = plugin.name === \"react-refresh\" || plugin !== viteReactJsx && plugin.name === \"vite:react-jsx\";\n        if (hasConflict)\n          return config.logger.warn(`[@vitejs/plugin-react] You should stop using \"${plugin.name}\" since this plugin conflicts with it.`);\n      });\n      runPluginOverrides = (babelOptions, context) => {\n        const hooks = config.plugins.map((plugin) => plugin.api?.reactBabel).filter(Boolean);\n        if (hooks.length > 0) {\n          return (runPluginOverrides = (babelOptions2, context2) => {\n            hooks.forEach((hook) => hook(babelOptions2, context2, config));\n            return true;\n          })(babelOptions, context);\n        }\n        runPluginOverrides = () => false;\n        return false;\n      };\n    },\n    async transform(code, id, options) {\n      const ssr = options?.ssr === true;\n      const [filepath, querystring = \"\"] = id.split(\"?\");\n      const [extension = \"\"] = querystring.match(fileExtensionRE) || filepath.match(fileExtensionRE) || [];\n      if (/\\.(mjs|[tj]sx?)$/.test(extension)) {\n        const isJSX = extension.endsWith(\"x\");\n        const isNodeModules = id.includes(\"/node_modules/\");\n        const isProjectFile = !isNodeModules && (id[0] === \"\\0\" || id.startsWith(projectRoot + \"/\"));\n        let babelOptions = staticBabelOptions;\n        if (typeof opts.babel === \"function\") {\n          const rawOptions = opts.babel(id, { ssr });\n          babelOptions = createBabelOptions(rawOptions);\n          runPluginOverrides(babelOptions, { ssr, id });\n        } else if (!babelOptions) {\n          babelOptions = createBabelOptions(opts.babel);\n          if (!runPluginOverrides(babelOptions, { ssr, id })) {\n            staticBabelOptions = babelOptions;\n          }\n        }\n        const plugins = isProjectFile ? [...babelOptions.plugins] : [];\n        let useFastRefresh = false;\n        if (!skipFastRefresh && !ssr && !isNodeModules) {\n          const isReactModule = isJSX || importReactRE.test(code);\n          if (isReactModule && filter(id)) {\n            useFastRefresh = true;\n            plugins.push([\n              await loadPlugin(\"react-refresh/babel\"),\n              { skipEnvCheck: true }\n            ]);\n          }\n        }\n        let ast;\n        let prependReactImport = false;\n        if (!isProjectFile || isJSX) {\n          if (useAutomaticRuntime) {\n            const isOptimizedReactDom = id.startsWith(resolvedCacheDir) && id.includes(\"/react-dom.js\");\n            const [restoredAst, isCommonJS] = !isProjectFile && !isJSX && !isOptimizedReactDom ? await restoreJSX(babel, code, id) : [null, false];\n            if (isJSX || (ast = restoredAst)) {\n              plugins.push([\n                await loadPlugin(\"@babel/plugin-transform-react-jsx\" + (isProduction ? \"\" : \"-development\")),\n                {\n                  runtime: \"automatic\",\n                  importSource: opts.jsxImportSource,\n                  pure: opts.jsxPure !== false\n                }\n              ]);\n              if (isCommonJS) {\n                plugins.push(babelImportToRequire);\n              }\n            }\n          } else if (isProjectFile) {\n            if (!isProduction) {\n              plugins.push(await loadPlugin(\"@babel/plugin-transform-react-jsx-self\"), await loadPlugin(\"@babel/plugin-transform-react-jsx-source\"));\n            }\n            if (!skipReactImport && !importReactRE.test(code)) {\n              prependReactImport = true;\n            }\n          }\n        }\n        let inputMap;\n        if (prependReactImport) {\n          if (needHiresSourcemap) {\n            const s = new MagicString(code);\n            s.prepend(prependReactImportCode);\n            code = s.toString();\n            inputMap = s.generateMap({ hires: true, source: id });\n          } else {\n            code = prependReactImportCode + code;\n          }\n        }\n        const shouldSkip = !plugins.length && !babelOptions.configFile && !(isProjectFile && babelOptions.babelrc);\n        if (shouldSkip) {\n          return {\n            code,\n            map: inputMap ?? null\n          };\n        }\n        const parserPlugins = [\n          ...babelOptions.parserOpts.plugins,\n          \"importMeta\",\n          \"topLevelAwait\",\n          \"classProperties\",\n          \"classPrivateProperties\",\n          \"classPrivateMethods\"\n        ];\n        if (!extension.endsWith(\".ts\")) {\n          parserPlugins.push(\"jsx\");\n        }\n        if (/\\.tsx?$/.test(extension)) {\n          parserPlugins.push(\"typescript\");\n        }\n        const transformAsync = ast ? babel.transformFromAstAsync.bind(babel, ast, code) : babel.transformAsync.bind(babel, code);\n        const isReasonReact = extension.endsWith(\".bs.js\");\n        const result = await transformAsync({\n          ...babelOptions,\n          ast: !isReasonReact,\n          root: projectRoot,\n          filename: id,\n          sourceFileName: filepath,\n          parserOpts: {\n            ...babelOptions.parserOpts,\n            sourceType: \"module\",\n            allowAwaitOutsideFunction: true,\n            plugins: parserPlugins\n          },\n          generatorOpts: {\n            ...babelOptions.generatorOpts,\n            decoratorsBeforeExport: true\n          },\n          plugins,\n          sourceMaps: true,\n          inputSourceMap: inputMap ?? false\n        });\n        if (result) {\n          let code2 = result.code;\n          if (useFastRefresh && /\\$RefreshReg\\$\\(/.test(code2)) {\n            const accept = isReasonReact || isRefreshBoundary(result.ast);\n            code2 = addRefreshWrapper(code2, id, accept);\n          }\n          return {\n            code: code2,\n            map: result.map\n          };\n        }\n      }\n    }\n  };\n  const viteReactRefresh = {\n    name: \"vite:react-refresh\",\n    enforce: \"pre\",\n    config: () => ({\n      resolve: {\n        dedupe: [\"react\", \"react-dom\"]\n      }\n    }),\n    resolveId(id) {\n      if (id === runtimePublicPath) {\n        return id;\n      }\n    },\n    load(id) {\n      if (id === runtimePublicPath) {\n        return runtimeCode;\n      }\n    },\n    transformIndexHtml() {\n      if (!skipFastRefresh)\n        return [\n          {\n            tag: \"script\",\n            attrs: { type: \"module\" },\n            children: preambleCode.replace(`__BASE__`, devBase)\n          }\n        ];\n    }\n  };\n  const reactJsxRuntimeId = \"react/jsx-runtime\";\n  const reactJsxDevRuntimeId = \"react/jsx-dev-runtime\";\n  const virtualReactJsxRuntimeId = \"\\0\" + reactJsxRuntimeId;\n  const virtualReactJsxDevRuntimeId = \"\\0\" + reactJsxDevRuntimeId;\n  const viteReactJsx = {\n    name: \"vite:react-jsx\",\n    enforce: \"pre\",\n    config() {\n      return {\n        optimizeDeps: {\n          include: [reactJsxRuntimeId, reactJsxDevRuntimeId]\n        }\n      };\n    },\n    resolveId(id, importer) {\n      if (id === reactJsxRuntimeId && importer !== virtualReactJsxRuntimeId) {\n        return virtualReactJsxRuntimeId;\n      }\n      if (id === reactJsxDevRuntimeId && importer !== virtualReactJsxDevRuntimeId) {\n        return virtualReactJsxDevRuntimeId;\n      }\n    },\n    load(id) {\n      if (id === virtualReactJsxRuntimeId) {\n        return [\n          `import * as jsxRuntime from ${JSON.stringify(reactJsxRuntimeId)}`,\n          `export const Fragment = jsxRuntime.Fragment`,\n          `export const jsx = jsxRuntime.jsx`,\n          `export const jsxs = jsxRuntime.jsxs`\n        ].join(\"\\n\");\n      }\n      if (id === virtualReactJsxDevRuntimeId) {\n        return [\n          `import * as jsxRuntime from ${JSON.stringify(reactJsxDevRuntimeId)}`,\n          `export const Fragment = jsxRuntime.Fragment`,\n          `export const jsxDEV = jsxRuntime.jsxDEV`\n        ].join(\"\\n\");\n      }\n    }\n  };\n  return [viteBabel, viteReactRefresh, useAutomaticRuntime && viteReactJsx];\n}\nviteReact.preambleCode = preambleCode;\nfunction loadPlugin(path2) {\n  return import(path2).then((module) => module.default || module);\n}\nfunction createBabelOptions(rawOptions) {\n  var _a;\n  const babelOptions = {\n    babelrc: false,\n    configFile: false,\n    ...rawOptions\n  };\n  babelOptions.plugins || (babelOptions.plugins = []);\n  babelOptions.presets || (babelOptions.presets = []);\n  babelOptions.overrides || (babelOptions.overrides = []);\n  babelOptions.parserOpts || (babelOptions.parserOpts = {});\n  (_a = babelOptions.parserOpts).plugins || (_a.plugins = []);\n  return babelOptions;\n}\n\nexport { viteReact as default };\n", "export type SourceMapSegment =\n\t| [number]\n\t| [number, number, number, number]\n\t| [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst charToInteger: { [charCode: number]: number } = {};\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfor (let i = 0; i < chars.length; i++) {\n\tcharToInteger[chars.charCodeAt(i)] = i;\n}\n\nexport function decode(mappings: string): SourceMapMappings {\n\tconst decoded: SourceMapMappings = [];\n\tlet line: SourceMapLine = [];\n\tconst segment: SourceMapSegment = [\n\t\t0, // generated code column\n\t\t0, // source file index\n\t\t0, // source code line\n\t\t0, // source code column\n\t\t0, // name index\n\t];\n\n\tlet j = 0;\n\tfor (let i = 0, shift = 0, value = 0; i < mappings.length; i++) {\n\t\tconst c = mappings.charCodeAt(i);\n\n\t\tif (c === 44) { // \",\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\n\t\t} else if (c === 59) { // \";\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\t\t\tdecoded.push(line);\n\t\t\tline = [];\n\t\t\tsegment[0] = 0;\n\n\t\t} else {\n\t\t\tlet integer = charToInteger[c];\n\t\t\tif (integer === undefined) {\n\t\t\t\tthrow new Error('Invalid character (' + String.fromCharCode(c) + ')');\n\t\t\t}\n\n\t\t\tconst hasContinuationBit = integer & 32;\n\n\t\t\tinteger &= 31;\n\t\t\tvalue += integer << shift;\n\n\t\t\tif (hasContinuationBit) {\n\t\t\t\tshift += 5;\n\t\t\t} else {\n\t\t\t\tconst shouldNegate = value & 1;\n\t\t\t\tvalue >>>= 1;\n\n\t\t\t\tif (shouldNegate) {\n\t\t\t\t\tvalue = value === 0 ? -0x80000000 : -value;\n\t\t\t\t}\n\n\t\t\t\tsegment[j] += value;\n\t\t\t\tj++;\n\t\t\t\tvalue = shift = 0; // reset\n\t\t\t}\n\t\t}\n\t}\n\n\tsegmentify(line, segment, j);\n\tdecoded.push(line);\n\n\treturn decoded;\n}\n\nfunction segmentify(line: SourceMapSegment[], segment: SourceMapSegment, j: number) {\n\t// This looks ugly, but we're creating specialized arrays with a specific\n\t// length. This is much faster than creating a new array (which v8 expands to\n\t// a capacity of 17 after pushing the first item), or slicing out a subarray\n\t// (which is slow). Length 4 is assumed to be the most frequent, followed by\n\t// length 5 (since not everything will have an associated name), followed by\n\t// length 1 (it's probably rare for a source substring to not have an\n\t// associated segment data).\n\tif (j === 4) line.push([segment[0], segment[1], segment[2], segment[3]]);\n\telse if (j === 5) line.push([segment[0], segment[1], segment[2], segment[3], segment[4]]);\n\telse if (j === 1) line.push([segment[0]]);\n}\n\nexport function encode(decoded: SourceMapMappings): string {\n\tlet sourceFileIndex = 0;  // second field\n\tlet sourceCodeLine = 0;   // third field\n\tlet sourceCodeColumn = 0; // fourth field\n\tlet nameIndex = 0;        // fifth field\n\tlet mappings = '';\n\n\tfor (let i = 0; i < decoded.length; i++) {\n\t\tconst line = decoded[i];\n\t\tif (i > 0) mappings += ';';\n\t\tif (line.length === 0) continue;\n\n\t\tlet generatedCodeColumn = 0; // first field\n\n\t\tconst lineMappings: string[] = [];\n\n\t\tfor (const segment of line) {\n\t\t\tlet segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n\t\t\tgeneratedCodeColumn = segment[0];\n\n\t\t\tif (segment.length > 1) {\n\t\t\t\tsegmentMappings +=\n\t\t\t\t\tencodeInteger(segment[1] - sourceFileIndex) +\n\t\t\t\t\tencodeInteger(segment[2] - sourceCodeLine) +\n\t\t\t\t\tencodeInteger(segment[3] - sourceCodeColumn);\n\n\t\t\t\tsourceFileIndex = segment[1];\n\t\t\t\tsourceCodeLine = segment[2];\n\t\t\t\tsourceCodeColumn = segment[3];\n\t\t\t}\n\n\t\t\tif (segment.length === 5) {\n\t\t\t\tsegmentMappings += encodeInteger(segment[4] - nameIndex);\n\t\t\t\tnameIndex = segment[4];\n\t\t\t}\n\n\t\t\tlineMappings.push(segmentMappings);\n\t\t}\n\n\t\tmappings += lineMappings.join(',');\n\t}\n\n\treturn mappings;\n}\n\nfunction encodeInteger(num: number): string {\n\tvar result = '';\n\tnum = num < 0 ? (-num << 1) | 1 : num << 1;\n\tdo {\n\t\tvar clamped = num & 31;\n\t\tnum >>>= 5;\n\t\tif (num > 0) {\n\t\t\tclamped |= 32;\n\t\t}\n\t\tresult += chars[clamped];\n\t} while (num > 0);\n\n\treturn result;\n}\n", "export default class BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n", "export default class Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t// we make these non-enumerable, for sanity while debugging\n\t\tObject.defineProperties(this, {\n\t\t\tprevious: { writable: true, value: null },\n\t\t\tnext: { writable: true, value: null },\n\t\t});\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n", "import { encode } from 'sourcemap-codec';\n\nlet btoa = () => {\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n};\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\tbtoa = (str) => window.btoa(unescape(encodeURIComponent(str)));\n} else if (typeof Buffer === 'function') {\n\tbtoa = (str) => Buffer.from(str, 'utf-8').toString('base64');\n}\n\nexport default class SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n", "export default function guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n", "export default function getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n", "const toString = Object.prototype.toString;\n\nexport default function isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n", "export default function getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n", "export default class Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n", "import BitSet from './BitSet.js';\nimport Chunk from './Chunk.js';\nimport SourceMap from './SourceMap.js';\nimport guessIndent from './utils/guessIndent.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\nimport Stats from './utils/Stats.js';\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nexport default class MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: guessIndent(string) },\n\t\t});\n\n\t\tif (DEBUG) {\n\t\t\tObject.defineProperty(this, 'stats', { value: new Stats() });\n\t\t}\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendLeft');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendLeft');\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('appendRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('appendRight');\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tif (DEBUG) this.stats.time('move');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\n\t\tif (DEBUG) this.stats.timeEnd('move');\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tif (DEBUG) this.stats.time('overwrite');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst contentOnly = options !== undefined ? options.contentOnly : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, contentOnly);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('overwrite');\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tif (DEBUG) this.stats.time('insertRight');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('insertRight');\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tif (DEBUG) this.stats.time('remove');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\n\t\tif (DEBUG) this.stats.timeEnd('remove');\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tif (DEBUG) this.stats.time('_split');\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} \u2013 \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif (DEBUG) this.stats.timeEnd('_split');\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (typeof searchValue !== 'string' && searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n}\n", "import MagicString from './MagicString.js';\nimport SourceMap from './SourceMap.js';\nimport getRelativePath from './utils/getRelativePath.js';\nimport isObject from './utils/isObject.js';\nimport getLocator from './utils/getLocator.js';\nimport Mappings from './utils/Mappings.js';\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nexport default class Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n", "import d from \"./node_modules/@vitejs/plugin-react/dist/index.mjs\";export default d;"],
  "mappings": "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AG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI;AACj8D,QAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAEh9B,aAAS,c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AE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,IAAG,IAAG,MAAK,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,IAAG,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GA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",
  "names": ["node", "require_lib", "ch", "n", "validate", "validator", "validate", "require_generated", "program", "typeAnnotation", "variance", "typeParameter", "require_generated", "require_removeTypeDuplicates", "require_generated", "node", "require_generated", "require_lib", "path", "path", "n", "self", "warned", "path", "require_lib", "declaration", "require_lib", "path", "path", "require_globals", "path", "uid", "get", "put", "pop", "chars", "charToInteger", "encode", "encodeInteger", "path", "url", "resolveUri", "path", "TraceMap", "presortedDecodedMap", "decodedMappings", "encodedMappings", "traceSegment", "originalPositionFor", "generatedPositionFor", "eachMapping", "decodedMap", "encodedMap", "encode", "decode", "bsFound", "addSegment", "addMapping", "maybeAddSegment", "maybeAddMapping", "setSourceContent", "toDecodedMap", "toEncodedMap", "fromMap", "allMappings", "GenMapping", "SetArray", "put", "encode", "TraceMap", "decodedMappings", "SourceMap", "require_buffer", "Buffer", "char", "type", "n", "object", "toString", "isObject", "hexadecimal", "require_flow", "require_jsx", "require_typescript", "self", "n", "require_lib", "path", "path", "n", "path", "n", "require_browser", "unescape", "build", "self", "require_lib", "require_lib", "Position", "constructor", "line", "col", "index", "column", "SourceLocation", "start", "end", "filename", "identifierName", "createPositionWithColumnOffset", "position", "columnOffset", "ParseErrorCode", "reflect", "keys", "last", "length", "get", "reduce", "object", "key", "set", "value", "item", "i", "instantiate", "properties", "descriptors", "Object", "map", "filter", "descriptor", "enumerable", "split", "instance", "defineProperty", "configurable", "assign", "ImportMetaOutsideModule", "message", "code", "SourceTypeModuleError", "ImportOutsideModule", "NodeDescriptions", "ArrayPattern", "AssignmentExpression", "AssignmentPattern", "ArrowFunctionExpression", "ConditionalExpression", "CatchClause", "ForOfStatement", "ForInStatement", "ForStatement", "FormalParameters", "Identifier", "ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier", "ObjectPattern", "ParenthesizedExpression", "RestElement", "UpdateExpression", "true", "false", "VariableDeclarator", "YieldExpression", "toNodeDescription", "type", "prefix", "String", "AccessorIsGenerator", "kind", "ArgumentsInClass", "AsyncFunctionInSingleStatementContext", "AwaitBindingIdentifier", "AwaitBindingIdentifierInStaticBlock", "AwaitExpressionFormalParameter", "AwaitNotInAsyncContext", "AwaitNotInAsyncFunction", "BadGetterArity", "BadSetterArity", "BadSetterRestParameter", "ConstructorClassField", "ConstructorClassPrivateField", "ConstructorIsAccessor", "ConstructorIsAsync", "ConstructorIsGenerator", "DeclarationMissingInitializer", "DecoratorBeforeExport", "DecoratorConstructor", "DecoratorExportClass", "DecoratorSemicolon", "DecoratorStaticBlock", "DeletePrivateField", "DestructureNamedImport", "DuplicateConstructor", "DuplicateDefaultExport", "DuplicateExport", "exportName", "DuplicateProto", "DuplicateRegExpFlags", "ElementAfterRest", "EscapedCharNotAnIdentifier", "ExportBindingIsString", "localName", "ExportDefaultFromAsIdentifier", "ForInOfLoopInitializer", "ForOfAsync", "ForOfLet", "GeneratorInSingleStatementContext", "IllegalBreakContinue", "IllegalLanguageModeDirective", "IllegalReturn", "ImportBindingIsString", "importName", "ImportCallArgumentTrailingComma", "ImportCallArity", "maxArgumentCount", "ImportCallNotNewExpression", "ImportCallSpreadArgument", "ImportJSONBindingNotDefault", "IncompatibleRegExpUVFlags", "InvalidBigIntLiteral", "InvalidCodePoint", "InvalidCoverInitializedName", "InvalidDecimal", "InvalidDigit", "radix", "InvalidEscapeSequence", "InvalidEscapeSequenceTemplate", "InvalidEscapedReservedWord", "reservedWord", "InvalidIdentifier", "InvalidLhs", "ancestor", "InvalidLhsBinding", "InvalidNumber", "InvalidOrMissingExponent", "InvalidOrUnexpectedToken", "unexpected", "InvalidParenthesizedAssignment", "InvalidPrivateFieldResolution", "InvalidPropertyBindingPattern", "InvalidRecordProperty", "InvalidRestAssignmentPattern", "LabelRedeclaration", "labelName", "LetInLexicalBinding", "LineTerminatorBeforeArrow", "MalformedRegExpFlags", "MissingClassName", "MissingEqInAssignment", "MissingSemicolon", "MissingPlugin", "missingPlugin", "name", "JSON", "stringify", "join", "MissingOneOfPlugins", "MissingUnicodeEscape", "MixingCoalesceWithLogical", "ModuleAttributeDifferentFromType", "ModuleAttributeInvalidValue", "ModuleAttributesWithDuplicateKeys", "ModuleExportNameHasLoneSurrogate", "surrogateCharCode", "toString", "ModuleExportUndefined", "MultipleDefaultsInSwitch", "NewlineAfterThrow", "NoCatchOrFinally", "NumberIdentifier", "NumericSeparatorInEscapeSequence", "ObsoleteAwaitStar", "OptionalChainingNoNew", "OptionalChainingNoTemplate", "OverrideOnConstructor", "ParamDupe", "PatternHasAccessor", "PatternHasMethod", "PrivateInExpectedIn", "PrivateNameRedeclaration", "RecordExpressionBarIncorrectEndSyntaxType", "RecordExpressionBarIncorrectStartSyntaxType", "RecordExpressionHashIncorrectStartSyntaxType", "RecordNoProto", "RestTrailingComma", "SloppyFunction", "StaticPrototype", "SuperNotAllowed", "SuperPrivateField", "TrailingDecorator", "TupleExpressionBarIncorrectEndSyntaxType", "TupleExpressionBarIncorrectStartSyntaxType", "TupleExpressionHashIncorrectStartSyntaxType", "UnexpectedArgumentPlaceholder", "UnexpectedAwaitAfterPipelineBody", "UnexpectedDigitAfterHash", "UnexpectedImportExport", "UnexpectedKeyword", "keyword", "UnexpectedLeadingDecorator", "UnexpectedLexicalDeclaration", "UnexpectedNewTarget", "UnexpectedNumericSeparator", "UnexpectedPrivateField", "UnexpectedReservedWord", "UnexpectedSuper", "UnexpectedToken", "expected", "UnexpectedTokenUnaryExponentiation", "UnsupportedBind", "UnsupportedDecoratorExport", "UnsupportedDefaultExport", "UnsupportedImport", "UnsupportedMetaProperty", "target", "onlyValidPropertyName", "UnsupportedParameterDecorator", "UnsupportedPropertyDecorator", "UnsupportedSuper", "UnterminatedComment", "UnterminatedRegExp", "UnterminatedString", "UnterminatedTemplate", "VarRedeclaration", "YieldBindingIdentifier", "YieldInParameter", "ZeroDigitNumericSeparator", "StrictDelete", "StrictEvalArguments", "referenceName", "StrictEvalArgumentsBinding", "bindingName", "StrictFunction", "StrictNumericEscape", "StrictOctalLiteral", "StrictWith", "UnparenthesizedPipeBodyDescriptions", "Set", "PipeBodyIsTighter", "PipeTopicRequiresHackPipes", "PipeTopicUnbound", "PipeTopicUnconfiguredToken", "token", "PipeTopicUnused", "PipeUnparenthesizedBody", "PipelineBodyNoArrow", "PipelineBodySequenceExpression", "PipelineHeadSequenceExpression", "PipelineTopicUnused", "PrimaryTopicNotAllowed", "PrimaryTopicRequiresSmartPipeline", "toParseErrorConstructor", "toMessage", "_excluded", "loc", "details", "SyntaxError", "clone", "overrides", "pos", "ParseErrorEnum", "argument", "syntaxPlugin", "Array", "isArray", "parseErrorTemplates", "ParseErrorConstructors", "reasonCode", "template", "rest", "_excluded2", "Errors", "ModuleErrors", "StandardErrors", "StrictModeErrors", "PipelineOperatorErrors", "toUnenumerable", "toESTreeLocation", "node", "superClass", "parse", "file", "options", "tokens", "parseRegExpLiteral", "pattern", "flags", "regex", "RegExp", "e", "estreeParseLiteral", "parseBigIntLiteral", "bigInt", "BigInt", "bigint", "parseDecimalLiteral", "decimal", "parseLiteral", "parseStringLiteral", "parseNumericLiteral", "parseNullLiteral", "parseBooleanLiteral", "directiveToStmt", "directive", "directiveLiteral", "stmt", "startNodeAt", "expression", "extra", "expressionValue", "raw", "finishNodeAt", "slice", "initFunction", "isAsync", "checkDeclaration", "isObjectProperty", "getObjectOrClassMethodParams", "method", "params", "isValidDirective", "parenthesized", "parseBlockBody", "args", "directiveStatements", "directives", "d", "body", "concat", "pushClassMethod", "classBody", "isGenerator", "isConstructor", "allowsDirectSuper", "parseMethod", "typeParameters", "push", "parsePrivateName", "getPluginOption", "convertPrivateNameToPrivateIdentifier", "getPrivateNameSV", "id", "isPrivateName", "parseFunctionBody", "allowExpression", "isMethod", "allowDirectSuper", "inClassScope", "funcNode", "startNode", "computed", "finishNode", "parseClassProperty", "propertyNode", "parseClassPrivateProperty", "parseObjectMethod", "prop", "isPattern", "isAccessor", "shorthand", "parseObjectProperty", "startPos", "startLoc", "refExpressionErrors", "isValidLVal", "isUnparenthesizedInAssign", "binding", "isAssignable", "isBinding", "toAssignable", "isLHS", "classScope", "usePrivateName", "toAssignableObjectExpressionProp", "isLast", "raise", "at", "finishCallExpression", "unfinished", "optional", "callee", "source", "arguments", "hasPlugin", "attributes", "toReferencedArguments", "parseExport", "exported", "specifiers", "parseSubscript", "base", "noCalls", "state", "optionalChainMember", "substring", "stop", "chain", "startNodeAtNode", "hasPropertyAsPrivateName", "isOptionalChain", "isObjectMethod", "endLoc", "resetStartLocation", "resetEndLocation", "lastTokEndLoc", "TokContext", "preserveSpace", "types", "brace", "j_oTag", "j_cTag", "j_expr", "beforeExpr", "startsExpr", "isLoop", "isAssign", "postfix", "ExportedTokenType", "label", "conf", "rightAssociative", "binop", "updateContext", "keywords", "Map", "createKeyword", "createToken", "createBinop", "tokenTypeCounter", "tokenTypes", "tokenLabels", "tokenBinops", "tokenBeforeExprs", "tokenStartsExprs", "tokenPrefixes", "createKeywordLike", "tt", "bracketL", "bracketHashL", "bracketBarL", "bracketR", "bracketBarR", "braceL", "braceBarL", "braceHashL", "braceR", "braceBarR", "parenL", "parenR", "comma", "semi", "colon", "doubleColon", "dot", "question", "questionDot", "arrow", "ellipsis", "backQuote", "dollarBraceL", "templateTail", "templateNonTail", "hash", "interpreterDirective", "eq", "slashAssign", "xorAssign", "moduloAssign", "incDec", "bang", "tilde", "doubleCaret", "doubleAt", "pipeline", "nullishCoalescing", "logicalOR", "logicalAND", "bitwiseOR", "bitwiseXOR", "bitwiseAND", "equality", "lt", "gt", "relational", "bitShift", "bitShiftL", "bitShiftR", "plusMin", "modulo", "star", "slash", "exponent", "_in", "_instanceof", "_break", "_case", "_catch", "_continue", "_debugger", "_default", "_else", "_finally", "_function", "_if", "_return", "_switch", "_throw", "_try", "_var", "_const", "_with", "_new", "_this", "_super", "_class", "_extends", "_export", "_import", "_null", "_true", "_false", "_typeof", "_void", "_delete", "_do", "_for", "_while", "_as", "_assert", "_async", "_await", "_from", "_get", "_let", "_meta", "_of", "_sent", "_set", "_static", "_yield", "_asserts", "_checks", "_exports", "_global", "_implements", "_intrinsic", "_infer", "_is", "_mixins", "_proto", "_require", "_keyof", "_readonly", "_unique", "_abstract", "_declare", "_enum", "_module", "_namespace", "_interface", "_type", "_opaque", "string", "num", "regexp", "privateName", "eof", "jsxName", "jsxText", "jsxTagStart", "jsxTagEnd", "placeholder", "tokenIsIdentifier", "tokenKeywordOrIdentifierIsKeyword", "tokenIsKeywordOrIdentifier", "tokenIsLiteralPropertyName", "tokenComesBeforeExpression", "tokenCanStartExpression", "tokenIsAssignment", "tokenIsFlowInterfaceOrTypeOrOpaque", "tokenIsLoop", "tokenIsKeyword", "tokenIsOperator", "tokenIsPostfix", "tokenIsPrefix", "tokenIsTSTypeOperator", "tokenIsTSDeclarationStart", "tokenLabelName", "tokenOperatorPrecedence", "tokenIsRightAssociative", "tokenIsTemplate", "getExportedToken", "context", "pop", "tc", "nonASCIIidentifierStartChars", "nonASCIIidentifierChars", "nonASCIIidentifierStart", "nonASCIIidentifier", "astralIdentifierStartCodes", "astralIdentifierCodes", "isInAstralSet", "isIdentifierStart", "test", "fromCharCode", "isIdentifierChar", "reservedWords", "strict", "strictBind", "reservedWordsStrictSet", "reservedWordsStrictBindSet", "isReservedWord", "word", "inModule", "isStrictReservedWord", "has", "isStrictBindOnlyReservedWord", "isStrictBindReservedWord", "isKeyword", "isIteratorStart", "current", "next", "next2", "reservedWordLikeSet", "canBeReservedWord", "SCOPE_OTHER", "SCOPE_PROGRAM", "SCOPE_FUNCTION", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "SCOPE_CLASS", "SCOPE_STATIC_BLOCK", "SCOPE_TS_MODULE", "SCOPE_VAR", "BIND_KIND_VALUE", "BIND_KIND_TYPE", "BIND_SCOPE_VAR", "BIND_SCOPE_LEXICAL", "BIND_SCOPE_FUNCTION", "BIND_FLAGS_NONE", "BIND_FLAGS_CLASS", "BIND_FLAGS_TS_ENUM", "BIND_FLAGS_TS_CONST_ENUM", "BIND_FLAGS_TS_EXPORT_ONLY", "BIND_FLAGS_FLOW_DECLARE_FN", "BIND_CLASS", "BIND_LEXICAL", "BIND_VAR", "BIND_FUNCTION", "BIND_TS_INTERFACE", "BIND_TS_TYPE", "BIND_TS_ENUM", "BIND_TS_AMBIENT", "BIND_NONE", "BIND_OUTSIDE", "BIND_TS_CONST_ENUM", "BIND_TS_NAMESPACE", "BIND_FLOW_DECLARE_FN", "CLASS_ELEMENT_FLAG_STATIC", "CLASS_ELEMENT_KIND_GETTER", "CLASS_ELEMENT_KIND_SETTER", "CLASS_ELEMENT_KIND_ACCESSOR", "CLASS_ELEMENT_STATIC_GETTER", "CLASS_ELEMENT_STATIC_SETTER", "CLASS_ELEMENT_INSTANCE_GETTER", "CLASS_ELEMENT_INSTANCE_SETTER", "CLASS_ELEMENT_OTHER", "BaseParser", "sawUnambiguousESM", "ambiguousScriptDifferentAst", "pluginConfig", "plugins", "pluginName", "pluginOptions", "actualOptions", "plugin", "setTrailingComments", "comments", "trailingComments", "undefined", "unshift", "setLeadingComments", "leadingComments", "setInnerComments", "innerComments", "adjustInnerComments", "elements", "commentWS", "lastElement", "CommentsParser", "addComment", "comment", "processComment", "commentStack", "commentStackLength", "lastCommentWS", "leadingNode", "nodeStart", "commentEnd", "containingNode", "finalizeComment", "splice", "trailingNode", "commentStart", "input", "charCodeAt", "finalizeRemainingComments", "resetPreviousNodeTrailingComments", "takeSurroundingComments", "lineBreak", "lineBreakG", "isNewLine", "skipWhiteSpace", "skipWhiteSpaceInLine", "skipWhiteSpaceToLineBreak", "isWhitespace", "State", "curLine", "lineStart", "errors", "potentialArrowAt", "noArrowAt", "noArrowParamsConversionAt", "maybeInArrowParameters", "inType", "noAnonFunctionType", "hasFlowComment", "isAmbientContext", "inAbstractClass", "inDisallowConditionalTypesContext", "topicContext", "maxNumOfResolvableTopics", "maxTopicIndex", "soloAwait", "inFSharpPipelineDirectBody", "labels", "decoratorStack", "lastTokStartLoc", "lastTokStart", "ct", "canStartJSXElement", "containsEsc", "strictErrors", "tokensLength", "init", "strictMode", "sourceType", "startLine", "startColumn", "curPosition", "skipArrays", "val", "isDigit", "forbiddenNumericSeparatorSiblings", "decBinOct", "hex", "isAllowedNumericSeparatorSibling", "bin", "ch", "oct", "dec", "readStringContents", "initialPos", "initialLineStart", "initialCurLine", "out", "containsInvalid", "chunkStart", "unterminated", "isStringEnd", "escaped", "readEscapedChar", "str", "inTemplate", "throwOnInvalid", "res", "readHexChar", "readCodePoint", "fromCodePoint", "strictNumericEscape", "match", "octalStr", "octal", "parseInt", "len", "forceLen", "n", "readInt", "invalidEscapeSequence", "allowNumSeparator", "forbiddenSiblings", "isAllowedSibling", "invalid", "total", "Infinity", "prev", "numericSeparatorInEscapeSequence", "Number", "isNaN", "unexpectedNumericSeparator", "invalidDigit", "indexOf", "invalidCodePoint", "buildPosition", "VALID_REGEX_FLAGS", "Token", "Tokenizer", "isLookahead", "errorHandlers_readInt", "errorRecovery", "errorBuilder", "errorHandlers_readCodePoint", "errorHandlers_readStringContents_string", "recordStrictModeErrors", "errorHandlers_readStringContents_template", "pushToken", "checkKeywordEscapes", "nextToken", "eat", "createLookaheadState", "curContext", "lookahead", "old", "curr", "nextTokenStart", "nextTokenStartSince", "lastIndex", "lookaheadCharCode", "codePointAtPos", "cp", "trail", "setStrict", "forEach", "toParseError", "clear", "skipSpace", "finishToken", "getTokenFromCode", "skipBlockComment", "skipLineComment", "startSkip", "spaceStart", "loop", "attachComment", "commentWhitespace", "prevType", "replaceToken", "readToken_numberSign", "readToken_interpreter", "nextPos", "expectPlugin", "readWord1", "finishOp", "readToken_dot", "readNumber", "readToken_slash", "readToken_mult_modulo", "width", "readToken_pipe_amp", "readToken_caret", "proposal", "topicToken", "lookaheadCh", "codePointAt", "readToken_atSign", "readToken_plus_min", "readToken_lt", "readToken_gt", "size", "readToken_eq_excl", "readToken_question", "readTemplateToken", "readRadixNumber", "readString", "readWord", "readRegexp", "inClass", "content", "mods", "char", "includes", "isBigInt", "replace", "startsWithDot", "isFloat", "isDecimal", "hasExponent", "isOctal", "hasLeadingZero", "integer", "underscorePos", "parseFloat", "quote", "readTemplateContinuation", "opening", "firstCode", "escStart", "identifierCheck", "esc", "keywordTypes", "raiseProperties", "error", "raiseOverwrite", "expectOnePlugin", "pluginNames", "some", "Scope", "var", "lexical", "functions", "ScopeHandler", "parser", "scopeStack", "undefinedExports", "inFunction", "currentVarScopeFlags", "allowSuper", "currentThisScopeFlags", "inClassAndNotInNonArrowFunction", "inStaticBlock", "inNonArrowFunction", "treatFunctionsAsVar", "treatFunctionsAsVarInScope", "currentScope", "createScope", "enter", "exit", "scope", "declareName", "bindingType", "checkRedeclarationInScope", "add", "maybeExportDefined", "delete", "isRedeclaredInScope", "values", "checkLocalExport", "topLevelScope", "FlowScope", "declareFunctions", "FlowScopeHandler", "ClassScope", "privateNames", "loneAccessors", "undefinedPrivateNames", "ClassScopeHandler", "stack", "oldClassScope", "from", "declarePrivateName", "elementType", "redefined", "accessor", "oldStatic", "newStatic", "oldKind", "newKind", "kExpression", "kMaybeArrowParameterDeclaration", "kMaybeAsyncArrowParameterDeclaration", "kParameterDeclaration", "ExpressionScope", "canBeArrowParameterDeclaration", "isCertainlyParameterDeclaration", "ArrowHeadParsingScope", "declarationErrors", "recordDeclarationError", "ParsingErrorClass", "clearDeclarationError", "iterateErrors", "iterator", "ExpressionScopeHandler", "recordParameterInitializerError", "origin", "recordArrowParemeterBindingError", "recordAsyncArrowParametersError", "validateAsPattern", "newParameterDeclarationScope", "newArrowHeadScope", "newAsyncArrowScope", "newExpressionScope", "PARAM", "PARAM_YIELD", "PARAM_AWAIT", "PARAM_RETURN", "PARAM_IN", "ProductionParameterHandler", "stacks", "currentFlags", "hasAwait", "hasYield", "hasReturn", "hasIn", "functionFlags", "UtilParser", "addExtra", "isContextual", "isUnparsedContextual", "nameStart", "nameEnd", "nextCh", "isLookaheadContextual", "eatContextual", "expectContextual", "canInsertSemicolon", "hasPrecedingLineBreak", "hasFollowingLineBreak", "isLineTerminator", "semicolon", "allowAsi", "expect", "tryParse", "fn", "oldState", "abortSignal", "failState", "thrown", "aborted", "checkExpressionErrors", "andThrow", "shorthandAssignLoc", "doubleProtoLoc", "privateKeyLoc", "optionalParametersLoc", "hasErrors", "isLiteralPropertyName", "property", "initializeScopes", "oldLabels", "oldExportedIdentifiers", "exportedIdentifiers", "oldInModule", "oldScope", "getScopeHandler", "oldProdParam", "prodParam", "oldExpressionScope", "expressionScope", "enterInitialScopes", "paramFlags", "checkDestructuringPrivate", "ExpressionErrors", "Node", "ranges", "range", "NodePrototype", "prototype", "__clone", "newNode", "clonePlaceholder", "cloneIdentifier", "cloned", "create", "expectedNode", "cloneStringLiteral", "NodeUtils", "resetStartLocationFromNode", "locationNode", "reservedTypes", "FlowErrors", "AmbiguousConditionalArrow", "AmbiguousDeclareModuleKind", "AssignReservedType", "reservedType", "DeclareClassElement", "DeclareClassFieldInitializer", "DuplicateDeclareModuleExports", "EnumBooleanMemberNotInitialized", "memberName", "enumName", "EnumDuplicateMemberName", "EnumInconsistentMemberValues", "EnumInvalidExplicitType", "invalidEnumType", "EnumInvalidExplicitTypeUnknownSupplied", "EnumInvalidMemberInitializerPrimaryType", "explicitType", "EnumInvalidMemberInitializerSymbolType", "EnumInvalidMemberInitializerUnknownType", "EnumInvalidMemberName", "suggestion", "EnumNumberMemberNotInitialized", "EnumStringMemberInconsistentlyInitailized", "GetterMayNotHaveThisParam", "ImportTypeShorthandOnlyInPureImport", "InexactInsideExact", "InexactInsideNonObject", "InexactVariance", "InvalidNonTypeImportInDeclareModule", "MissingTypeParamDefault", "NestedDeclareModule", "NestedFlowComment", "PatternIsOptional", "SetterMayNotHaveThisParam", "SpreadVariance", "ThisParamAnnotationRequired", "ThisParamBannedInConstructor", "ThisParamMayNotBeOptional", "ThisParamMustBeFirst", "ThisParamNoDefault", "TypeBeforeInitializer", "TypeCastInPattern", "UnexpectedExplicitInexactInObject", "UnexpectedReservedType", "UnexpectedReservedUnderscore", "UnexpectedSpaceBetweenModuloChecks", "UnexpectedSpreadType", "UnexpectedSubtractionOperand", "UnexpectedTokenAfterTypeParameter", "UnexpectedTypeParameterBeforeAsyncArrowFunction", "UnsupportedDeclareExportKind", "unsupportedExportKind", "UnsupportedStatementInDeclareModule", "UnterminatedFlowComment", "isEsModuleType", "bodyElement", "declaration", "hasTypeImportKind", "importKind", "isMaybeDefaultImport", "exportSuggestions", "const", "let", "interface", "partition", "list", "list1", "list2", "FLOW_PRAGMA_REGEX", "flowPragma", "shouldParseTypes", "shouldParseEnums", "matches", "exec", "Error", "flowParseTypeInitialiser", "tok", "oldInType", "flowParseType", "flowParsePredicate", "moduloLoc", "parseExpression", "flowParseTypeAndPredicateInitialiser", "predicate", "flowParseDeclareClass", "flowParseInterfaceish", "flowParseDeclareFunction", "parseIdentifier", "typeNode", "typeContainer", "flowParseTypeParameterDeclaration", "tmp", "flowParseFunctionTypeParams", "this", "returnType", "typeAnnotation", "flowParseDeclare", "insideModule", "flowParseDeclareVariable", "flowParseDeclareModuleExports", "flowParseDeclareModule", "flowParseDeclareTypeAlias", "flowParseDeclareOpaqueType", "flowParseDeclareInterface", "flowParseDeclareExportDeclaration", "flowParseTypeAnnotatableIdentifier", "parseExprAtom", "bodyNode", "parseImport", "hasModuleExport", "default", "isLet", "exportKind", "flowParseTypeAnnotation", "finished", "flowParseTypeAlias", "flowParseOpaqueType", "isClass", "flowParseRestrictedIdentifier", "extends", "implements", "mixins", "flowParseInterfaceExtends", "flowParseObjectType", "allowStatic", "allowExact", "allowSpread", "allowProto", "allowInexact", "flowParseQualifiedTypeIdentifier", "flowParseTypeParameterInstantiation", "flowParseInterface", "checkNotUnderscore", "checkReservedType", "liberal", "right", "declare", "supertype", "impltype", "flowParseTypeParameter", "requireDefault", "nodeStartLoc", "variance", "flowParseVariance", "ident", "bound", "defaultRequired", "typeParameter", "oldNoAnonFunctionType", "flowParseTypeParameterInstantiationCallOrNew", "flowParseTypeOrImplicitInstantiation", "flowParseInterfaceType", "flowParseObjectPropertyKey", "flowParseObjectTypeIndexer", "isStatic", "static", "flowParseObjectTypeInternalSlot", "flowParseObjectTypeMethodish", "flowParseFunctionTypeParam", "flowParseObjectTypeCallProperty", "valueNode", "callProperties", "indexers", "internalSlots", "endDelim", "exact", "inexact", "protoStartLoc", "inexactStartLoc", "propOrInexact", "flowParseObjectTypeProperty", "flowObjectTypeSemicolon", "isInexactToken", "proto", "flowCheckGetterSetterParams", "paramCount", "node2", "qualification", "flowParseGenericType", "flowParseTypeofType", "flowParsePrimaryType", "flowParseTupleType", "first", "lh", "isThis", "reinterpretTypeAsFunctionTypeParam", "flowIdentToTypeAnnotation", "isGroupedType", "parseLiteralAtNode", "createIdentifier", "flowParsePostfixType", "seenOptionalIndexedAccess", "objectType", "indexType", "flowParsePrefixType", "flowParseAnonFunctionWithoutParens", "param", "flowParseIntersectionType", "flowParseUnionType", "allowPrimitiveOverride", "typeCastToParameter", "allowExpressionBody", "forwardNoArrowParamsConversionAt", "parseFunctionBodyAndFinish", "parseStatement", "topLevel", "flowParseEnumDeclaration", "parseExpressionStatement", "expr", "shouldParseExportDeclaration", "isExportDefaultSpecifier", "parseExportDefaultExpression", "parseConditional", "setOptionalParametersError", "originalNoArrowAt", "consequent", "failed", "tryParseConditionalConsequent", "valid", "getArrowLikeExpressions", "alternate", "parseMaybeAssign", "parseMaybeAssignAllowIn", "disallowInvalid", "arrows", "finishArrowValidation", "every", "toAssignableList", "trailingCommaLoc", "checkParams", "result", "parseParenItem", "typeCastNode", "assertModuleNodeAllowed", "decl", "parseExportDeclaration", "declarationNode", "parseExportSpecifiers", "parseExportFrom", "eatExportStar", "maybeParseExportNamespaceSpecifier", "hasNamespace", "parseClassId", "isStatement", "optionalId", "parseClassMember", "member", "parseClassMemberFromModifier", "isIterator", "readIterator", "fullWord", "left", "exprList", "toReferencedList", "isParenthesizedExpr", "parseArrayLike", "close", "canBePattern", "isTuple", "isClassMethod", "isClassProperty", "isNonstaticConstructor", "isThisParam", "pushClassPrivateMethod", "parseClassSuper", "superTypeParameters", "implemented", "checkGetterSetterParams", "parsePropertyNamePrefixOperator", "parseObjPropValue", "parseAssignableListItemTypes", "parseMaybeDefault", "shouldParseDefaultImport", "parseImportSpecifierLocal", "specifier", "local", "finishImportSpecifier", "maybeParseDefaultImportSpecifier", "parseImportSpecifier", "importedIsString", "isInTypeOnlyImport", "isMaybeTypeOnly", "firstIdent", "imported", "specifierTypeKind", "as_ident", "specifierIsTypeImport", "checkReservedWord", "parseBindingAtom", "parseFunctionParams", "allowModifiers", "parseVarId", "parseAsyncArrowFromCallExpression", "call", "shouldParseAsyncArrow", "afterLeftParse", "jsx", "currentContext", "abort", "arrowExpression", "maybeUnwrapTypeCastExpression", "async", "parseArrow", "shouldParseArrow", "setArrowFunctionParameters", "allowDuplicates", "isArrowFunction", "parseParenAndDistinguishExpression", "canBeArrow", "parseSubscripts", "parseCallExpressionArguments", "parseAsyncArrowWithTypeParameters", "subscriptState", "isLookaheadToken_lt", "typeArguments", "parseNewCallee", "targs", "parseArrowExpression", "parseTopLevel", "program", "fileNode", "skipFlowComment", "hasFlowCommentCompletion", "commentSkip", "shiftToFirstNonWhiteSpace", "ch2", "ch3", "flowEnumErrorBooleanMemberNotInitialized", "flowEnumErrorInvalidMemberInitializer", "enumContext", "flowEnumErrorNumberMemberNotInitialized", "flowEnumErrorStringMemberInconsistentlyInitailized", "flowEnumMemberInit", "endOfInit", "literal", "flowEnumMemberRaw", "flowEnumCheckExplicitTypeMismatch", "expectedType", "flowEnumMembers", "seenNames", "members", "booleanMembers", "numberMembers", "stringMembers", "defaultedMembers", "hasUnknownMembers", "memberNode", "toUpperCase", "flowEnumStringMembers", "initializedMembers", "flowEnumParseExplicitType", "flowEnumBody", "nameLoc", "empty", "boolsLen", "numsLen", "strsLen", "defaultedLen", "afterNext", "entities", "__proto__", "quot", "amp", "apos", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "copy", "ordf", "laquo", "not", "shy", "reg", "macr", "deg", "plusmn", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "sup1", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "Agrave", "Aacute", "Acirc", "Atilde", "Auml", "Aring", "AElig", "Ccedil", "Egrave", "Eacute", "Ecirc", "Euml", "Igrave", "Iacute", "Icirc", "Iuml", "ETH", "Ntilde", "Ograve", "Oacute", "Ocirc", "Otilde", "Ouml", "times", "Oslash", "Ugrave", "Uacute", "Ucirc", "Uuml", "Yacute", "THORN", "szlig", "agrave", "aacute", "acirc", "atilde", "auml", "aring", "aelig", "ccedil", "egrave", "eacute", "ecirc", "euml", "igrave", "iacute", "icirc", "iuml", "eth", "ntilde", "ograve", "oacute", "ocirc", "otilde", "ouml", "divide", "oslash", "ugrave", "uacute", "ucirc", "uuml", "yacute", "thorn", "yuml", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "JsxErrors", "AttributeIsEmpty", "MissingClosingTagElement", "openingTagName", "MissingClosingTagFragment", "UnexpectedSequenceExpression", "HTMLEntity", "UnsupportedJsxValue", "UnterminatedJsxContent", "UnwrappedAdjacentJSXElements", "isFragment", "getQualifiedJSXName", "namespace", "jsxReadToken", "jsxReadEntity", "jsxReadNewLine", "normalizeCRLF", "jsxReadString", "codePoint", "count", "desc", "entity", "XHTMLEntities", "jsxReadWord", "jsxParseIdentifier", "jsxParseNamespacedName", "jsxParseElementName", "jsxParseAttributeValue", "setContext", "jsxParseExpressionContainer", "jsxParseEmptyExpression", "jsxParseSpreadChild", "previousContext", "jsxParseAttribute", "jsxParseOpeningElementAt", "jsxParseOpeningElementAfterName", "selfClosing", "jsxParseClosingElementAt", "jsxParseElementAt", "children", "openingElement", "closingElement", "contents", "openingFragment", "closingFragment", "jsxParseElement", "newContext", "TypeScriptScope", "enums", "constEnums", "classes", "exportOnlyBindings", "TypeScriptScopeHandler", "isConst", "wasConst", "getOwn", "hasOwnProperty", "nonNull", "x", "assert", "TSErrors", "AbstractMethodHasImplementation", "methodName", "AbstractPropertyHasInitializer", "propertyName", "AccesorCannotDeclareThisParameter", "AccesorCannotHaveTypeParameters", "CannotFindName", "ClassMethodHasDeclare", "ClassMethodHasReadonly", "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference", "ConstructorHasTypeParameters", "DeclareAccessor", "DeclareClassFieldHasInitializer", "DeclareFunctionHasImplementation", "DuplicateAccessibilityModifier", "modifier", "DuplicateModifier", "EmptyHeritageClauseType", "EmptyTypeArguments", "EmptyTypeParameters", "ExpectedAmbientAfterExportDeclare", "ImportAliasHasImportType", "IncompatibleModifiers", "modifiers", "IndexSignatureHasAbstract", "IndexSignatureHasAccessibility", "IndexSignatureHasDeclare", "IndexSignatureHasOverride", "IndexSignatureHasStatic", "InitializerNotAllowedInAmbientContext", "InvalidModifierOnTypeMember", "InvalidModifierOnTypeParameter", "InvalidModifierOnTypeParameterPositions", "InvalidModifiersOrder", "orderedModifiers", "InvalidPropertyAccessAfterInstantiationExpression", "InvalidTupleMemberLabel", "MissingInterfaceName", "MixedLabeledAndUnlabeledElements", "NonAbstractClassHasAbstractMethod", "NonClassMethodPropertyHasAbstractModifer", "OptionalTypeBeforeRequired", "OverrideNotInSubClass", "PrivateElementHasAbstract", "PrivateElementHasAccessibility", "ReadonlyForMethodSignature", "ReservedArrowTypeParam", "ReservedTypeAssertion", "SetAccesorCannotHaveOptionalParameter", "SetAccesorCannotHaveRestParameter", "SetAccesorCannotHaveReturnType", "SingleTypeParameterWithoutTrailingComma", "typeParameterName", "StaticBlockCannotHaveModifier", "TypeAnnotationAfterAssign", "TypeImportCannotSpecifyDefaultAndNamed", "TypeModifierIsUsedInTypeExports", "TypeModifierIsUsedInTypeImports", "UnexpectedParameterModifier", "UnexpectedReadonly", "UnexpectedTypeAnnotation", "UnexpectedTypeCastInParameter", "UnsupportedImportTypeArgument", "UnsupportedParameterPropertyKind", "UnsupportedSignatureParameterKind", "keywordTypeFromName", "tsIsAccessModifier", "tsIsVarianceAnnotations", "tsIsIdentifier", "tsTokenCanFollowModifier", "tsNextTokenCanFollowModifier", "tsParseModifier", "allowedModifiers", "stopOnStartOfClassStaticBlock", "tsIsStartOfStaticBlocks", "tsTryParse", "bind", "tsParseModifiers", "modified", "disallowedModifiers", "errorTemplate", "enforceOrder", "before", "after", "incompatible", "mod1", "mod2", "accessibility", "tsIsListTerminator", "tsParseList", "parseElement", "tsParseDelimitedList", "refTrailingCommaPos", "tsParseDelimitedListWorker", "expectSuccess", "trailingCommaPos", "element", "tsParseBracketedList", "bracket", "skipFirstToken", "tsParseImportType", "qualifier", "tsParseEntityName", "tsParseTypeArguments", "allowReservedWords", "tsParseTypeReference", "typeName", "tsParseThisTypePredicate", "lhs", "parameterName", "tsParseTypeAnnotation", "asserts", "tsParseThisTypeNode", "tsParseTypeQuery", "exprName", "tsParseInOutModifiers", "tsParseNoneModifiers", "tsParseTypeParameter", "parseModifiers", "tsParseTypeParameterName", "constraint", "tsEatThenParseType", "tsTryParseTypeParameters", "tsParseTypeParameters", "tsTryNextParseConstantContext", "typeReference", "tsFillSignature", "returnToken", "signature", "returnTokenRequired", "paramsKey", "returnTypeKey", "tsParseBindingListForSignature", "tsParseTypeOrTypePredicateAnnotation", "parseBindingList", "tsParseTypeMemberSemicolon", "tsParseSignatureMember", "tsIsUnambiguouslyIndexSignature", "tsTryParseIndexSignature", "tsLookAhead", "parameters", "tsTryParseTypeAnnotation", "tsParsePropertyOrMethodSignature", "readonly", "nodeAny", "firstParameter", "tsParseTypeMember", "idx", "parsePropertyName", "tsParseTypeLiteral", "tsParseObjectTypeMembers", "tsIsStartOfMappedType", "tsParseMappedTypeParameter", "tsExpectThenParseType", "tsParseMappedType", "nameType", "tsParseType", "tsTryParseType", "tsParseTupleType", "elementTypes", "tsParseTupleElementType", "seenOptionalElement", "labeledElements", "elementNode", "checkType", "isLabeled", "labeled", "labeledNode", "optionalTypeNode", "restNode", "tsParseParenthesizedType", "tsParseFunctionOrConstructorType", "abstract", "tsInAllowConditionalTypesContext", "tsParseLiteralTypeNode", "tsParseTemplateLiteralType", "parseTemplate", "parseTemplateSubstitution", "tsParseThisTypeOrThisTypePredicate", "thisKeyword", "tsParseNonArrayType", "parseMaybeUnary", "nodeType", "tsParseArrayTypeOrHigher", "tsParseTypeOperator", "operator", "tsParseTypeOperatorOrHigher", "tsCheckTypeAnnotationForReadOnly", "tsParseInferType", "tsParseConstraintForInferType", "tsInDisallowConditionalTypesContext", "isTypeOperator", "tsParseUnionOrIntersectionType", "parseConstituentType", "hasLeadingOperator", "tsParseIntersectionTypeOrHigher", "tsParseUnionTypeOrHigher", "tsIsStartOfFunctionType", "tsIsUnambiguouslyStartOfFunctionType", "tsSkipParameterStart", "previousErrorCount", "parseObjectLike", "tsInType", "t", "tsParseTypePredicateAsserts", "thisTypePredicate", "typePredicateVariable", "tsParseTypePredicatePrefix", "tsTryParseTypeOrTypePredicateAnnotation", "eatColon", "tsParseNonConditionalType", "extendsType", "trueType", "falseType", "isAbstractConstructorSignature", "tsParseTypeAssertion", "tsNextThenParseType", "tsParseHeritageClause", "originalStartLoc", "delimitedList", "tsParseInterfaceDeclaration", "checkIdentifier", "tsParseTypeAliasDeclaration", "tsInNoContext", "cb", "oldContext", "oldInDisallowConditionalTypesContext", "tsDoThenParseType", "tsParseEnumMember", "initializer", "tsParseEnumDeclaration", "tsParseModuleBlock", "parseBlockOrModuleBlockBody", "tsParseModuleOrNamespaceDeclaration", "nested", "inner", "tsParseAmbientExternalModuleDeclaration", "global", "tsParseImportEqualsDeclaration", "isExport", "moduleReference", "tsParseModuleReference", "tsIsExternalModuleReference", "tsParseExternalModuleReference", "f", "tsTryParseAndCatch", "tsTryParseDeclare", "nany", "starttype", "tsInAmbientContext", "parseFunctionStatement", "parseClass", "parseVarStatement", "tsParseDeclaration", "tsTryParseExportDeclaration", "tsParseExpressionStatement", "mod", "tsCheckLineTerminator", "tsParseAbstractDeclaration", "tsTryParseGenericAsyncArrowFunction", "oldMaybeInArrowParameters", "tsParseTypeArgumentsInExpression", "reScan_lt", "tsIsDeclarationStart", "parseAssignableListItem", "decorators", "override", "elt", "pp", "parameter", "isSimpleParameter", "bodilessType", "registerFunctionStatementId", "tsCheckForInvalidTypeCasts", "items", "isInParens", "nonNullExpression", "isOptionalCall", "missingParenErrorLoc", "atPossibleAsyncArrow", "asyncArrowFn", "parseTaggedTemplateExpression", "tokenType", "parseExprOp", "leftStartPos", "leftStartLoc", "minPrec", "reScan_lt_gt", "checkKeywords", "checkDuplicateExports", "ahead", "importNode", "isAbstractClass", "cls", "allowMissingInitializer", "declarations", "expressions", "isPossiblyLiteralEnum", "parseStatementContent", "parseAccessModifier", "tsHasSomeModifiers", "callParseClassMemberWithIsStatic", "parseClassStaticBlock", "parseClassMemberWithIsStatic", "hadSuperClass", "parsePostMemberNameModifiers", "methodOrProp", "isDeclare", "isIdentifier", "parseClassPropertyAnnotation", "definite", "declareClassPrivateMethodInScope", "typeCast", "reportReservedArrowTypeParam", "trailingComma", "toAssignableParenthesizedExpression", "checkToRestConversion", "allowPattern", "TSTypeCastExpression", "TSParameterProperty", "TSNonNullExpression", "TSAsExpression", "TSTypeAssertion", "parseMaybeDecoratorArguments", "checkCommaAfterRest", "canHaveLeadingDecorator", "getGetterSetterExpectedParamCount", "baseCount", "firstParam", "hasContextParam", "parseCatchClauseParam", "oldIsAmbientContext", "oldInAbstractClass", "hasBody", "shouldParseAsAmbientContext", "getExpression", "parseExportSpecifier", "isString", "isInTypeExport", "parseTypeOnlyImportExportSpecifier", "isImport", "isInTypeOnlyImportExport", "leftOfAsKey", "rightOfAsKey", "leftOfAs", "rightOfAs", "hasTypeSpecifier", "canParseAsKeyword", "firstAs", "secondAs", "parseModuleExportName", "kindKey", "isUncomputedMemberExpressionChain", "PlaceholderErrors", "ClassNameIsRequired", "UnexpectedSpace", "parsePlaceholder", "assertNoSpace", "finishPlaceholder", "isFinished", "verifyBreakContinue", "isBreak", "parseBlock", "parseFunctionId", "takeDecorators", "oldStrict", "parseClassBody", "startsWith", "maybeParseExportDefaultSpecifier", "checkExport", "hasStarImport", "maybeParseStarImportSpecifier", "parseNamedImportSpecifiers", "parseImportSource", "parseV8Intrinsic", "v8IntrinsicStartLoc", "parseIdentifierName", "identifier", "expectedConfig", "expectedName", "expectedOptions", "expectedKeys", "expectedOptionsIsEmpty", "p", "option", "find", "PIPELINE_PROPOSALS", "TOPIC_TOKENS", "RECORD_AND_TUPLE_SYNTAX_TYPES", "validatePlugins", "decoratorsBeforeExport", "proposalList", "tupleSyntaxIsHash", "syntaxType", "tokenList", "moduleAttributesVersionPluginOption", "missingPlugins", "mixinPlugins", "estree", "flow", "typescript", "v8intrinsic", "placeholders", "mixinPluginNames", "defaultOptions", "sourceFilename", "allowAwaitOutsideFunction", "allowReturnOutsideFunction", "allowImportExportEverywhere", "allowSuperOutsideMethod", "allowUndeclaredExports", "createParenthesizedExpressions", "getOptions", "opts", "unwrapParenthesizedExpression", "LValParser", "arg", "toReferencedListDeep", "parseSpread", "parseRestBinding", "closeCharCode", "allowEmpty", "elts", "parseDecorator", "parseBindingRestProperty", "parseBindingProperty", "ObjectProperty", "checkLVal", "in", "checkClashes", "strictModeChanged", "allowingSloppyLetBinding", "hasParenthesizedAncestor", "validity", "ParseErrorClass", "isParenthesizedExpression", "nextAncestor", "child", "allowLetBinding", "declareNameFromIdentifier", "ExpressionParser", "checkProto", "isRecord", "protoRef", "used", "shouldExitDescending", "disallowIn", "disallowInAnd", "parseExpressionBase", "allowInAnd", "parseMaybeAssignDisallowIn", "resultError", "parseYield", "ownExpressionErrors", "parseMaybeConditional", "parseExprOps", "parseMaybeUnaryOrPrivate", "op", "prec", "checkPipelineAtInfixOperator", "logical", "coalesce", "parseExprOpRightExpr", "finishedNode", "nextOp", "withTopicBindingContext", "parseHackPipeBody", "parseSmartPipelineBodyInStyle", "parseExprOpBaseRightExpr", "withSoloAwaitPermittingContext", "parseFSharpPipelineBody", "requiredParentheses", "topicReferenceWasUsedInCurrentContext", "checkExponentialAfterUnary", "sawUnary", "isAwait", "isAwaitAllowed", "parseAwait", "update", "isDelete", "parseUpdate", "isAmbiguousAwait", "updateExpressionNode", "parseExprSubscripts", "maybeAsyncArrow", "parseBind", "parseCoverCallAndAsyncArrowHead", "parseMember", "parseNoCallExpr", "tag", "quasi", "dynamicImport", "allowPlaceholder", "nodeForExtra", "oldInFSharpPipelineDirectBody", "addTrailingCommaExtraToNode", "parseExprListItem", "parseSuper", "parseImportMetaProperty", "parseDo", "parseFunctionOrFunctionSent", "parseDecorators", "parseNewOrNewTarget", "parseTopicReferenceThenEqualsSign", "parseTopicReference", "pipeProposal", "parseModuleExpression", "parseFunction", "parseAsyncArrowUnaryFunction", "topicTokenType", "topicTokenValue", "finishTopicReference", "testTopicReferenceConfiguration", "topicReferenceIsAllowedInCurrentContext", "registerTopicReference", "meta", "parseMetaProperty", "innerStartPos", "innerStartLoc", "spreadStartLoc", "optionalCommaStartLoc", "spreadNodeStartPos", "spreadNodeStartLoc", "innerEndLoc", "arrowNode", "wrapParenthesis", "parenExpression", "metaProp", "parseNew", "parseExprList", "parseTemplateElement", "isTagged", "elemStart", "elem", "isTail", "endOffset", "elemEnd", "cooked", "tail", "curElt", "quasis", "propHash", "parsePropertyDefinition", "maybeAsyncOrAccessorProp", "keyName", "finishedProp", "generator", "isExpression", "hasStrictModeDirective", "nonSimple", "isSimpleParamList", "formalParameters", "reservedTest", "delegating", "delegate", "childExpr", "isSimpleReference", "checkSmartPipeTopicBodyEarlyErrors", "callback", "outerContextTopicState", "withSmartMixTopicForbiddingContext", "outerContextSoloAwaitState", "prodParamToSet", "prodParamToClear", "ret", "revertScopes", "parseProgram", "loopLabel", "switchLabel", "FUNC_NO_FLAGS", "FUNC_STATEMENT", "FUNC_HANGING_STATEMENT", "FUNC_NULLABLE_ID", "loneSurrogate", "keywordRelationalOperator", "babel7CompatTokens", "hashEndPos", "hashEndLoc", "backquoteEnd", "backquoteEndLoc", "startToken", "templateValue", "templateElementEnd", "templateElementEndLoc", "endToken", "StatementParser", "interpreter", "parseInterpreterDirective", "stmtToDirective", "isLetKeyword", "endCh", "parseBreakContinueStatement", "parseDebuggerStatement", "parseDoStatement", "parseForStatement", "parseIfStatement", "parseReturnStatement", "parseSwitchStatement", "parseThrowStatement", "parseTryStatement", "parseWhileStatement", "parseWithStatement", "parseEmptyStatement", "nextTokenCharCode", "isAsyncFunction", "maybeName", "parseLabeledStatement", "allowExport", "currentContextDecorators", "decorator", "lab", "parseHeaderExpression", "awaitAt", "parseFor", "startsWithLet", "initNode", "parseVar", "parseForIn", "startsWithAsync", "isForOf", "declarationPosition", "discriminant", "cases", "cur", "sawDefault", "isCase", "simple", "block", "handler", "clause", "finalizer", "statementStart", "allowDirectives", "createNewLexicalScope", "afterBlockParse", "parsedNonDirective", "isForIn", "await", "isFor", "statement", "isHangingStatement", "requireId", "hadConstructor", "publicMethod", "privateMethod", "publicProp", "privateProp", "accessorProp", "publicMember", "parseClassElementName", "isPrivate", "maybeQuestionTokenStartLoc", "pushClassPrivateProperty", "pushClassProperty", "pushClassAccessorProperty", "parseClassAccessorProperty", "parseInitializer", "hasDefault", "parseAfterDefault", "hasStar", "parseAfterNamespace", "isFromRequired", "hasSpecifiers", "maybeParseExportNamedSpecifiers", "hasDeclaration", "maybeParseExportDeclaration", "isTypeExport", "assertions", "nextType", "hasFrom", "nextAfterFrom", "maybeParseImportAssertions", "checkJSONModuleImport", "checkNames", "isDefault", "isFrom", "nodes", "surrogate", "isJSONModuleImport", "nonDefaultNamedSpecifier", "parseNext", "maybeParseModuleAttributes", "parseAssertEntries", "attrs", "attrNames", "importSpecifier", "Parser", "pluginsMap", "pluginMap", "getParser", "ast", "moduleError", "generateExportedTokenTypes", "internalTokenTypes", "tokTypes", "getParserClass", "parserClassCache", "pluginsFromOptions", "pluginList", "require_lib", "path", "path", "path", "program", "key", "index", "arg", "require_lib", "require_lib", "path", "build", "path", "path", "path", "self", "path", "path", "path", "i", "require_path", "path", "Error", "require_context", "path", "path", "Error", "require_lib", "path", "require_lib", "path", "file", "id", "path", "path", "require_lib", "path", "path", "require_lib", "path", "path", "hasExports", "path", "localMetadata", "getModuleName", "require_lib", "path", "directive", "header", "name", "n", "i", "range", "comp", "path", "name", "build", "loadPlugin", "self", "require_util", "cached", "key", "require_browsers", "require_browserVersions", "require_agents", "require_parse", "n", "require_browser", "path", "i", "n", "require_lib", "require_native_modules", "require_utils", "require_options", "require_plugins", "require_lib", "value", "require_options", "require_printer", "file", "require_plugins", "context", "presets", "preset", "ignored", "opts", "plugins", "priority", "n", "Buffer", "fs", "path", "addSegment", "addMapping", "setSourceContent", "decodedMap", "encodedMap", "allMappings", "GenMapping", "SetArray", "seg", "index", "put", "encode", "source", "result", "transform", "transformAsync", "transformFile", "transformFromAst", "transformFromAstAsync", "require_parse", "parse", "require_lib", "n", "SourceMap", "path", "fs", "babel", "transformAsync"]
}
